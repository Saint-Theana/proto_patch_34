// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shit.proto

#ifndef PROTOBUF_shit_2eproto__INCLUDED
#define PROTOBUF_shit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class ClientSetGameTimeReq;
class ClientSetGameTimeReqDefaultTypeInternal;
extern ClientSetGameTimeReqDefaultTypeInternal _ClientSetGameTimeReq_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_shit_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_shit_2eproto

enum ClientSetGameTimeReq_CmdId {
  ClientSetGameTimeReq_CmdId_NONE = 0,
  ClientSetGameTimeReq_CmdId_CMD_ID = 9997,
  ClientSetGameTimeReq_CmdId_ENET_CHANNEL_ID = 0,
  ClientSetGameTimeReq_CmdId_ENET_IS_RELIABLE = 1,
  ClientSetGameTimeReq_CmdId_ClientSetGameTimeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientSetGameTimeReq_CmdId_ClientSetGameTimeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientSetGameTimeReq_CmdId_IsValid(int value);
const ClientSetGameTimeReq_CmdId ClientSetGameTimeReq_CmdId_CmdId_MIN = ClientSetGameTimeReq_CmdId_NONE;
const ClientSetGameTimeReq_CmdId ClientSetGameTimeReq_CmdId_CmdId_MAX = ClientSetGameTimeReq_CmdId_CMD_ID;
const int ClientSetGameTimeReq_CmdId_CmdId_ARRAYSIZE = ClientSetGameTimeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientSetGameTimeReq_CmdId_descriptor();
inline const ::std::string& ClientSetGameTimeReq_CmdId_Name(ClientSetGameTimeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientSetGameTimeReq_CmdId_descriptor(), value);
}
inline bool ClientSetGameTimeReq_CmdId_Parse(
    const ::std::string& name, ClientSetGameTimeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientSetGameTimeReq_CmdId>(
    ClientSetGameTimeReq_CmdId_descriptor(), name, value);
}
// ===================================================================

class ClientSetGameTimeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientSetGameTimeReq) */ {
 public:
  ClientSetGameTimeReq();
  virtual ~ClientSetGameTimeReq();

  ClientSetGameTimeReq(const ClientSetGameTimeReq& from);

  inline ClientSetGameTimeReq& operator=(const ClientSetGameTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSetGameTimeReq(ClientSetGameTimeReq&& from) noexcept
    : ClientSetGameTimeReq() {
    *this = ::std::move(from);
  }

  inline ClientSetGameTimeReq& operator=(ClientSetGameTimeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSetGameTimeReq& default_instance();

  static inline const ClientSetGameTimeReq* internal_default_instance() {
    return reinterpret_cast<const ClientSetGameTimeReq*>(
               &_ClientSetGameTimeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClientSetGameTimeReq* other);
  friend void swap(ClientSetGameTimeReq& a, ClientSetGameTimeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSetGameTimeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSetGameTimeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientSetGameTimeReq& from);
  void MergeFrom(const ClientSetGameTimeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientSetGameTimeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientSetGameTimeReq_CmdId CmdId;
  static const CmdId NONE =
    ClientSetGameTimeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientSetGameTimeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientSetGameTimeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientSetGameTimeReq_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ClientSetGameTimeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientSetGameTimeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientSetGameTimeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientSetGameTimeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientSetGameTimeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientSetGameTimeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientSetGameTimeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 client_game_time = 1;
  void clear_client_game_time();
  static const int kClientGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 client_game_time() const;
  void set_client_game_time(::google::protobuf::uint32 value);

  // bool is_force_set = 3;
  void clear_is_force_set();
  static const int kIsForceSetFieldNumber = 3;
  bool is_force_set() const;
  void set_is_force_set(bool value);

  // uint32 game_time = 15;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 15;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientSetGameTimeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 client_game_time_;
  bool is_force_set_;
  ::google::protobuf::uint32 game_time_;
  mutable int _cached_size_;
  friend struct protobuf_shit_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientSetGameTimeReq

// bool is_force_set = 3;
inline void ClientSetGameTimeReq::clear_is_force_set() {
  is_force_set_ = false;
}
inline bool ClientSetGameTimeReq::is_force_set() const {
  // @@protoc_insertion_point(field_get:proto.ClientSetGameTimeReq.is_force_set)
  return is_force_set_;
}
inline void ClientSetGameTimeReq::set_is_force_set(bool value) {
  
  is_force_set_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientSetGameTimeReq.is_force_set)
}

// uint32 client_game_time = 1;
inline void ClientSetGameTimeReq::clear_client_game_time() {
  client_game_time_ = 0u;
}
inline ::google::protobuf::uint32 ClientSetGameTimeReq::client_game_time() const {
  // @@protoc_insertion_point(field_get:proto.ClientSetGameTimeReq.client_game_time)
  return client_game_time_;
}
inline void ClientSetGameTimeReq::set_client_game_time(::google::protobuf::uint32 value) {
  
  client_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientSetGameTimeReq.client_game_time)
}

// uint32 game_time = 15;
inline void ClientSetGameTimeReq::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 ClientSetGameTimeReq::game_time() const {
  // @@protoc_insertion_point(field_get:proto.ClientSetGameTimeReq.game_time)
  return game_time_;
}
inline void ClientSetGameTimeReq::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientSetGameTimeReq.game_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::ClientSetGameTimeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientSetGameTimeReq_CmdId>() {
  return ::proto::ClientSetGameTimeReq_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_shit_2eproto__INCLUDED
