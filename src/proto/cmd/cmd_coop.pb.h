// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_coop.proto

#ifndef PROTOBUF_cmd_2fcmd_5fcoop_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fcoop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class AllCoopInfoNotify;
class AllCoopInfoNotifyDefaultTypeInternal;
extern AllCoopInfoNotifyDefaultTypeInternal _AllCoopInfoNotify_default_instance_;
class CancelCoopTaskReq;
class CancelCoopTaskReqDefaultTypeInternal;
extern CancelCoopTaskReqDefaultTypeInternal _CancelCoopTaskReq_default_instance_;
class CancelCoopTaskRsp;
class CancelCoopTaskRspDefaultTypeInternal;
extern CancelCoopTaskRspDefaultTypeInternal _CancelCoopTaskRsp_default_instance_;
class CoopCg;
class CoopCgDefaultTypeInternal;
extern CoopCgDefaultTypeInternal _CoopCg_default_instance_;
class CoopCgShowNotify;
class CoopCgShowNotifyDefaultTypeInternal;
extern CoopCgShowNotifyDefaultTypeInternal _CoopCgShowNotify_default_instance_;
class CoopCgUpdateNotify;
class CoopCgUpdateNotifyDefaultTypeInternal;
extern CoopCgUpdateNotifyDefaultTypeInternal _CoopCgUpdateNotify_default_instance_;
class CoopChapter;
class CoopChapterDefaultTypeInternal;
extern CoopChapterDefaultTypeInternal _CoopChapter_default_instance_;
class CoopChapterUpdateNotify;
class CoopChapterUpdateNotifyDefaultTypeInternal;
extern CoopChapterUpdateNotifyDefaultTypeInternal _CoopChapterUpdateNotify_default_instance_;
class CoopChapter_SeenEndingMapEntry;
class CoopChapter_SeenEndingMapEntryDefaultTypeInternal;
extern CoopChapter_SeenEndingMapEntryDefaultTypeInternal _CoopChapter_SeenEndingMapEntry_default_instance_;
class CoopDataNotify;
class CoopDataNotifyDefaultTypeInternal;
extern CoopDataNotifyDefaultTypeInternal _CoopDataNotify_default_instance_;
class CoopPoint;
class CoopPointDefaultTypeInternal;
extern CoopPointDefaultTypeInternal _CoopPoint_default_instance_;
class CoopPointUpdateNotify;
class CoopPointUpdateNotifyDefaultTypeInternal;
extern CoopPointUpdateNotifyDefaultTypeInternal _CoopPointUpdateNotify_default_instance_;
class CoopProgressUpdateNotify;
class CoopProgressUpdateNotifyDefaultTypeInternal;
extern CoopProgressUpdateNotifyDefaultTypeInternal _CoopProgressUpdateNotify_default_instance_;
class CoopReward;
class CoopRewardDefaultTypeInternal;
extern CoopRewardDefaultTypeInternal _CoopReward_default_instance_;
class CoopRewardUpdateNotify;
class CoopRewardUpdateNotifyDefaultTypeInternal;
extern CoopRewardUpdateNotifyDefaultTypeInternal _CoopRewardUpdateNotify_default_instance_;
class FinishMainCoopReq;
class FinishMainCoopReqDefaultTypeInternal;
extern FinishMainCoopReqDefaultTypeInternal _FinishMainCoopReq_default_instance_;
class FinishMainCoopRsp;
class FinishMainCoopRspDefaultTypeInternal;
extern FinishMainCoopRspDefaultTypeInternal _FinishMainCoopRsp_default_instance_;
class MainCoop;
class MainCoopDefaultTypeInternal;
extern MainCoopDefaultTypeInternal _MainCoop_default_instance_;
class MainCoopFailNotify;
class MainCoopFailNotifyDefaultTypeInternal;
extern MainCoopFailNotifyDefaultTypeInternal _MainCoopFailNotify_default_instance_;
class MainCoopUpdateNotify;
class MainCoopUpdateNotifyDefaultTypeInternal;
extern MainCoopUpdateNotifyDefaultTypeInternal _MainCoopUpdateNotify_default_instance_;
class MainCoop_NormalVarMapEntry;
class MainCoop_NormalVarMapEntryDefaultTypeInternal;
extern MainCoop_NormalVarMapEntryDefaultTypeInternal _MainCoop_NormalVarMapEntry_default_instance_;
class MainCoop_SeenEndingMapEntry;
class MainCoop_SeenEndingMapEntryDefaultTypeInternal;
extern MainCoop_SeenEndingMapEntryDefaultTypeInternal _MainCoop_SeenEndingMapEntry_default_instance_;
class MainCoop_TempVarMapEntry;
class MainCoop_TempVarMapEntryDefaultTypeInternal;
extern MainCoop_TempVarMapEntryDefaultTypeInternal _MainCoop_TempVarMapEntry_default_instance_;
class SaveCoopDialogReq;
class SaveCoopDialogReqDefaultTypeInternal;
extern SaveCoopDialogReqDefaultTypeInternal _SaveCoopDialogReq_default_instance_;
class SaveCoopDialogRsp;
class SaveCoopDialogRspDefaultTypeInternal;
extern SaveCoopDialogRspDefaultTypeInternal _SaveCoopDialogRsp_default_instance_;
class SaveMainCoopReq;
class SaveMainCoopReqDefaultTypeInternal;
extern SaveMainCoopReqDefaultTypeInternal _SaveMainCoopReq_default_instance_;
class SaveMainCoopReq_NormalVarMapEntry;
class SaveMainCoopReq_NormalVarMapEntryDefaultTypeInternal;
extern SaveMainCoopReq_NormalVarMapEntryDefaultTypeInternal _SaveMainCoopReq_NormalVarMapEntry_default_instance_;
class SaveMainCoopReq_TempVarMapEntry;
class SaveMainCoopReq_TempVarMapEntryDefaultTypeInternal;
extern SaveMainCoopReq_TempVarMapEntryDefaultTypeInternal _SaveMainCoopReq_TempVarMapEntry_default_instance_;
class SaveMainCoopRsp;
class SaveMainCoopRspDefaultTypeInternal;
extern SaveMainCoopRspDefaultTypeInternal _SaveMainCoopRsp_default_instance_;
class SetCoopChapterViewedReq;
class SetCoopChapterViewedReqDefaultTypeInternal;
extern SetCoopChapterViewedReqDefaultTypeInternal _SetCoopChapterViewedReq_default_instance_;
class SetCoopChapterViewedRsp;
class SetCoopChapterViewedRspDefaultTypeInternal;
extern SetCoopChapterViewedRspDefaultTypeInternal _SetCoopChapterViewedRsp_default_instance_;
class StartCoopPointReq;
class StartCoopPointReqDefaultTypeInternal;
extern StartCoopPointReqDefaultTypeInternal _StartCoopPointReq_default_instance_;
class StartCoopPointRsp;
class StartCoopPointRspDefaultTypeInternal;
extern StartCoopPointRspDefaultTypeInternal _StartCoopPointRsp_default_instance_;
class TakeCoopRewardReq;
class TakeCoopRewardReqDefaultTypeInternal;
extern TakeCoopRewardReqDefaultTypeInternal _TakeCoopRewardReq_default_instance_;
class TakeCoopRewardRsp;
class TakeCoopRewardRspDefaultTypeInternal;
extern TakeCoopRewardRspDefaultTypeInternal _TakeCoopRewardRsp_default_instance_;
class UnlockCoopChapterReq;
class UnlockCoopChapterReqDefaultTypeInternal;
extern UnlockCoopChapterReqDefaultTypeInternal _UnlockCoopChapterReq_default_instance_;
class UnlockCoopChapterRsp;
class UnlockCoopChapterRspDefaultTypeInternal;
extern UnlockCoopChapterRspDefaultTypeInternal _UnlockCoopChapterRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fcoop_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fcoop_2eproto

enum MainCoop_Status {
  MainCoop_Status_INVALID = 0,
  MainCoop_Status_RUNNING = 1,
  MainCoop_Status_FINISHED = 2,
  MainCoop_Status_MainCoop_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MainCoop_Status_MainCoop_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MainCoop_Status_IsValid(int value);
const MainCoop_Status MainCoop_Status_Status_MIN = MainCoop_Status_INVALID;
const MainCoop_Status MainCoop_Status_Status_MAX = MainCoop_Status_FINISHED;
const int MainCoop_Status_Status_ARRAYSIZE = MainCoop_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* MainCoop_Status_descriptor();
inline const ::std::string& MainCoop_Status_Name(MainCoop_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    MainCoop_Status_descriptor(), value);
}
inline bool MainCoop_Status_Parse(
    const ::std::string& name, MainCoop_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MainCoop_Status>(
    MainCoop_Status_descriptor(), name, value);
}
enum AllCoopInfoNotify_CmdId {
  AllCoopInfoNotify_CmdId_NONE = 0,
  AllCoopInfoNotify_CmdId_CMD_ID = 1976,
  AllCoopInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  AllCoopInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  AllCoopInfoNotify_CmdId_AllCoopInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllCoopInfoNotify_CmdId_AllCoopInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllCoopInfoNotify_CmdId_IsValid(int value);
const AllCoopInfoNotify_CmdId AllCoopInfoNotify_CmdId_CmdId_MIN = AllCoopInfoNotify_CmdId_NONE;
const AllCoopInfoNotify_CmdId AllCoopInfoNotify_CmdId_CmdId_MAX = AllCoopInfoNotify_CmdId_CMD_ID;
const int AllCoopInfoNotify_CmdId_CmdId_ARRAYSIZE = AllCoopInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllCoopInfoNotify_CmdId_descriptor();
inline const ::std::string& AllCoopInfoNotify_CmdId_Name(AllCoopInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllCoopInfoNotify_CmdId_descriptor(), value);
}
inline bool AllCoopInfoNotify_CmdId_Parse(
    const ::std::string& name, AllCoopInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllCoopInfoNotify_CmdId>(
    AllCoopInfoNotify_CmdId_descriptor(), name, value);
}
enum MainCoopUpdateNotify_CmdId {
  MainCoopUpdateNotify_CmdId_NONE = 0,
  MainCoopUpdateNotify_CmdId_CMD_ID = 1968,
  MainCoopUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  MainCoopUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  MainCoopUpdateNotify_CmdId_MainCoopUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MainCoopUpdateNotify_CmdId_MainCoopUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MainCoopUpdateNotify_CmdId_IsValid(int value);
const MainCoopUpdateNotify_CmdId MainCoopUpdateNotify_CmdId_CmdId_MIN = MainCoopUpdateNotify_CmdId_NONE;
const MainCoopUpdateNotify_CmdId MainCoopUpdateNotify_CmdId_CmdId_MAX = MainCoopUpdateNotify_CmdId_CMD_ID;
const int MainCoopUpdateNotify_CmdId_CmdId_ARRAYSIZE = MainCoopUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MainCoopUpdateNotify_CmdId_descriptor();
inline const ::std::string& MainCoopUpdateNotify_CmdId_Name(MainCoopUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MainCoopUpdateNotify_CmdId_descriptor(), value);
}
inline bool MainCoopUpdateNotify_CmdId_Parse(
    const ::std::string& name, MainCoopUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MainCoopUpdateNotify_CmdId>(
    MainCoopUpdateNotify_CmdId_descriptor(), name, value);
}
enum SaveMainCoopReq_CmdId {
  SaveMainCoopReq_CmdId_NONE = 0,
  SaveMainCoopReq_CmdId_CMD_ID = 1975,
  SaveMainCoopReq_CmdId_ENET_CHANNEL_ID = 0,
  SaveMainCoopReq_CmdId_ENET_IS_RELIABLE = 1,
  SaveMainCoopReq_CmdId_IS_ALLOW_CLIENT = 1,
  SaveMainCoopReq_CmdId_SaveMainCoopReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveMainCoopReq_CmdId_SaveMainCoopReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveMainCoopReq_CmdId_IsValid(int value);
const SaveMainCoopReq_CmdId SaveMainCoopReq_CmdId_CmdId_MIN = SaveMainCoopReq_CmdId_NONE;
const SaveMainCoopReq_CmdId SaveMainCoopReq_CmdId_CmdId_MAX = SaveMainCoopReq_CmdId_CMD_ID;
const int SaveMainCoopReq_CmdId_CmdId_ARRAYSIZE = SaveMainCoopReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveMainCoopReq_CmdId_descriptor();
inline const ::std::string& SaveMainCoopReq_CmdId_Name(SaveMainCoopReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveMainCoopReq_CmdId_descriptor(), value);
}
inline bool SaveMainCoopReq_CmdId_Parse(
    const ::std::string& name, SaveMainCoopReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveMainCoopReq_CmdId>(
    SaveMainCoopReq_CmdId_descriptor(), name, value);
}
enum SaveMainCoopRsp_CmdId {
  SaveMainCoopRsp_CmdId_NONE = 0,
  SaveMainCoopRsp_CmdId_CMD_ID = 1957,
  SaveMainCoopRsp_CmdId_ENET_CHANNEL_ID = 0,
  SaveMainCoopRsp_CmdId_ENET_IS_RELIABLE = 1,
  SaveMainCoopRsp_CmdId_SaveMainCoopRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveMainCoopRsp_CmdId_SaveMainCoopRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveMainCoopRsp_CmdId_IsValid(int value);
const SaveMainCoopRsp_CmdId SaveMainCoopRsp_CmdId_CmdId_MIN = SaveMainCoopRsp_CmdId_NONE;
const SaveMainCoopRsp_CmdId SaveMainCoopRsp_CmdId_CmdId_MAX = SaveMainCoopRsp_CmdId_CMD_ID;
const int SaveMainCoopRsp_CmdId_CmdId_ARRAYSIZE = SaveMainCoopRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveMainCoopRsp_CmdId_descriptor();
inline const ::std::string& SaveMainCoopRsp_CmdId_Name(SaveMainCoopRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveMainCoopRsp_CmdId_descriptor(), value);
}
inline bool SaveMainCoopRsp_CmdId_Parse(
    const ::std::string& name, SaveMainCoopRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveMainCoopRsp_CmdId>(
    SaveMainCoopRsp_CmdId_descriptor(), name, value);
}
enum FinishMainCoopReq_CmdId {
  FinishMainCoopReq_CmdId_NONE = 0,
  FinishMainCoopReq_CmdId_CMD_ID = 1952,
  FinishMainCoopReq_CmdId_ENET_CHANNEL_ID = 0,
  FinishMainCoopReq_CmdId_ENET_IS_RELIABLE = 1,
  FinishMainCoopReq_CmdId_IS_ALLOW_CLIENT = 1,
  FinishMainCoopReq_CmdId_FinishMainCoopReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FinishMainCoopReq_CmdId_FinishMainCoopReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FinishMainCoopReq_CmdId_IsValid(int value);
const FinishMainCoopReq_CmdId FinishMainCoopReq_CmdId_CmdId_MIN = FinishMainCoopReq_CmdId_NONE;
const FinishMainCoopReq_CmdId FinishMainCoopReq_CmdId_CmdId_MAX = FinishMainCoopReq_CmdId_CMD_ID;
const int FinishMainCoopReq_CmdId_CmdId_ARRAYSIZE = FinishMainCoopReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinishMainCoopReq_CmdId_descriptor();
inline const ::std::string& FinishMainCoopReq_CmdId_Name(FinishMainCoopReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinishMainCoopReq_CmdId_descriptor(), value);
}
inline bool FinishMainCoopReq_CmdId_Parse(
    const ::std::string& name, FinishMainCoopReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinishMainCoopReq_CmdId>(
    FinishMainCoopReq_CmdId_descriptor(), name, value);
}
enum FinishMainCoopRsp_CmdId {
  FinishMainCoopRsp_CmdId_NONE = 0,
  FinishMainCoopRsp_CmdId_CMD_ID = 1981,
  FinishMainCoopRsp_CmdId_ENET_CHANNEL_ID = 0,
  FinishMainCoopRsp_CmdId_ENET_IS_RELIABLE = 1,
  FinishMainCoopRsp_CmdId_FinishMainCoopRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FinishMainCoopRsp_CmdId_FinishMainCoopRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FinishMainCoopRsp_CmdId_IsValid(int value);
const FinishMainCoopRsp_CmdId FinishMainCoopRsp_CmdId_CmdId_MIN = FinishMainCoopRsp_CmdId_NONE;
const FinishMainCoopRsp_CmdId FinishMainCoopRsp_CmdId_CmdId_MAX = FinishMainCoopRsp_CmdId_CMD_ID;
const int FinishMainCoopRsp_CmdId_CmdId_ARRAYSIZE = FinishMainCoopRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* FinishMainCoopRsp_CmdId_descriptor();
inline const ::std::string& FinishMainCoopRsp_CmdId_Name(FinishMainCoopRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinishMainCoopRsp_CmdId_descriptor(), value);
}
inline bool FinishMainCoopRsp_CmdId_Parse(
    const ::std::string& name, FinishMainCoopRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinishMainCoopRsp_CmdId>(
    FinishMainCoopRsp_CmdId_descriptor(), name, value);
}
enum CoopPoint_State {
  CoopPoint_State_STATE_UNSTARTED = 0,
  CoopPoint_State_STATE_STARTED = 1,
  CoopPoint_State_STATE_FINISHED = 2,
  CoopPoint_State_CoopPoint_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopPoint_State_CoopPoint_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopPoint_State_IsValid(int value);
const CoopPoint_State CoopPoint_State_State_MIN = CoopPoint_State_STATE_UNSTARTED;
const CoopPoint_State CoopPoint_State_State_MAX = CoopPoint_State_STATE_FINISHED;
const int CoopPoint_State_State_ARRAYSIZE = CoopPoint_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopPoint_State_descriptor();
inline const ::std::string& CoopPoint_State_Name(CoopPoint_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopPoint_State_descriptor(), value);
}
inline bool CoopPoint_State_Parse(
    const ::std::string& name, CoopPoint_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopPoint_State>(
    CoopPoint_State_descriptor(), name, value);
}
enum CoopReward_State {
  CoopReward_State_STATE_UNLOCK = 0,
  CoopReward_State_STATE_LOCK = 1,
  CoopReward_State_STATE_TAKEN = 2,
  CoopReward_State_CoopReward_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopReward_State_CoopReward_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopReward_State_IsValid(int value);
const CoopReward_State CoopReward_State_State_MIN = CoopReward_State_STATE_UNLOCK;
const CoopReward_State CoopReward_State_State_MAX = CoopReward_State_STATE_TAKEN;
const int CoopReward_State_State_ARRAYSIZE = CoopReward_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopReward_State_descriptor();
inline const ::std::string& CoopReward_State_Name(CoopReward_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopReward_State_descriptor(), value);
}
inline bool CoopReward_State_Parse(
    const ::std::string& name, CoopReward_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopReward_State>(
    CoopReward_State_descriptor(), name, value);
}
enum CoopChapter_State {
  CoopChapter_State_STATE_CLOSE = 0,
  CoopChapter_State_STATE_COND_NOT_MEET = 1,
  CoopChapter_State_STATE_COND_MEET = 2,
  CoopChapter_State_STATE_ACCEPT = 3,
  CoopChapter_State_CoopChapter_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopChapter_State_CoopChapter_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopChapter_State_IsValid(int value);
const CoopChapter_State CoopChapter_State_State_MIN = CoopChapter_State_STATE_CLOSE;
const CoopChapter_State CoopChapter_State_State_MAX = CoopChapter_State_STATE_ACCEPT;
const int CoopChapter_State_State_ARRAYSIZE = CoopChapter_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopChapter_State_descriptor();
inline const ::std::string& CoopChapter_State_Name(CoopChapter_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopChapter_State_descriptor(), value);
}
inline bool CoopChapter_State_Parse(
    const ::std::string& name, CoopChapter_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopChapter_State>(
    CoopChapter_State_descriptor(), name, value);
}
enum CoopDataNotify_CmdId {
  CoopDataNotify_CmdId_NONE = 0,
  CoopDataNotify_CmdId_CMD_ID = 1979,
  CoopDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopDataNotify_CmdId_CoopDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopDataNotify_CmdId_CoopDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopDataNotify_CmdId_IsValid(int value);
const CoopDataNotify_CmdId CoopDataNotify_CmdId_CmdId_MIN = CoopDataNotify_CmdId_NONE;
const CoopDataNotify_CmdId CoopDataNotify_CmdId_CmdId_MAX = CoopDataNotify_CmdId_CMD_ID;
const int CoopDataNotify_CmdId_CmdId_ARRAYSIZE = CoopDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopDataNotify_CmdId_descriptor();
inline const ::std::string& CoopDataNotify_CmdId_Name(CoopDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopDataNotify_CmdId_descriptor(), value);
}
inline bool CoopDataNotify_CmdId_Parse(
    const ::std::string& name, CoopDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopDataNotify_CmdId>(
    CoopDataNotify_CmdId_descriptor(), name, value);
}
enum CoopChapterUpdateNotify_CmdId {
  CoopChapterUpdateNotify_CmdId_NONE = 0,
  CoopChapterUpdateNotify_CmdId_CMD_ID = 1972,
  CoopChapterUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopChapterUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopChapterUpdateNotify_CmdId_CoopChapterUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopChapterUpdateNotify_CmdId_CoopChapterUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopChapterUpdateNotify_CmdId_IsValid(int value);
const CoopChapterUpdateNotify_CmdId CoopChapterUpdateNotify_CmdId_CmdId_MIN = CoopChapterUpdateNotify_CmdId_NONE;
const CoopChapterUpdateNotify_CmdId CoopChapterUpdateNotify_CmdId_CmdId_MAX = CoopChapterUpdateNotify_CmdId_CMD_ID;
const int CoopChapterUpdateNotify_CmdId_CmdId_ARRAYSIZE = CoopChapterUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopChapterUpdateNotify_CmdId_descriptor();
inline const ::std::string& CoopChapterUpdateNotify_CmdId_Name(CoopChapterUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopChapterUpdateNotify_CmdId_descriptor(), value);
}
inline bool CoopChapterUpdateNotify_CmdId_Parse(
    const ::std::string& name, CoopChapterUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopChapterUpdateNotify_CmdId>(
    CoopChapterUpdateNotify_CmdId_descriptor(), name, value);
}
enum CoopCgUpdateNotify_CmdId {
  CoopCgUpdateNotify_CmdId_NONE = 0,
  CoopCgUpdateNotify_CmdId_CMD_ID = 1994,
  CoopCgUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopCgUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopCgUpdateNotify_CmdId_CoopCgUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopCgUpdateNotify_CmdId_CoopCgUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopCgUpdateNotify_CmdId_IsValid(int value);
const CoopCgUpdateNotify_CmdId CoopCgUpdateNotify_CmdId_CmdId_MIN = CoopCgUpdateNotify_CmdId_NONE;
const CoopCgUpdateNotify_CmdId CoopCgUpdateNotify_CmdId_CmdId_MAX = CoopCgUpdateNotify_CmdId_CMD_ID;
const int CoopCgUpdateNotify_CmdId_CmdId_ARRAYSIZE = CoopCgUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopCgUpdateNotify_CmdId_descriptor();
inline const ::std::string& CoopCgUpdateNotify_CmdId_Name(CoopCgUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopCgUpdateNotify_CmdId_descriptor(), value);
}
inline bool CoopCgUpdateNotify_CmdId_Parse(
    const ::std::string& name, CoopCgUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopCgUpdateNotify_CmdId>(
    CoopCgUpdateNotify_CmdId_descriptor(), name, value);
}
enum CoopRewardUpdateNotify_CmdId {
  CoopRewardUpdateNotify_CmdId_NONE = 0,
  CoopRewardUpdateNotify_CmdId_CMD_ID = 1999,
  CoopRewardUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopRewardUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopRewardUpdateNotify_CmdId_CoopRewardUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopRewardUpdateNotify_CmdId_CoopRewardUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopRewardUpdateNotify_CmdId_IsValid(int value);
const CoopRewardUpdateNotify_CmdId CoopRewardUpdateNotify_CmdId_CmdId_MIN = CoopRewardUpdateNotify_CmdId_NONE;
const CoopRewardUpdateNotify_CmdId CoopRewardUpdateNotify_CmdId_CmdId_MAX = CoopRewardUpdateNotify_CmdId_CMD_ID;
const int CoopRewardUpdateNotify_CmdId_CmdId_ARRAYSIZE = CoopRewardUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopRewardUpdateNotify_CmdId_descriptor();
inline const ::std::string& CoopRewardUpdateNotify_CmdId_Name(CoopRewardUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopRewardUpdateNotify_CmdId_descriptor(), value);
}
inline bool CoopRewardUpdateNotify_CmdId_Parse(
    const ::std::string& name, CoopRewardUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopRewardUpdateNotify_CmdId>(
    CoopRewardUpdateNotify_CmdId_descriptor(), name, value);
}
enum UnlockCoopChapterReq_CmdId {
  UnlockCoopChapterReq_CmdId_NONE = 0,
  UnlockCoopChapterReq_CmdId_CMD_ID = 1970,
  UnlockCoopChapterReq_CmdId_ENET_CHANNEL_ID = 0,
  UnlockCoopChapterReq_CmdId_ENET_IS_RELIABLE = 1,
  UnlockCoopChapterReq_CmdId_IS_ALLOW_CLIENT = 1,
  UnlockCoopChapterReq_CmdId_UnlockCoopChapterReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockCoopChapterReq_CmdId_UnlockCoopChapterReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockCoopChapterReq_CmdId_IsValid(int value);
const UnlockCoopChapterReq_CmdId UnlockCoopChapterReq_CmdId_CmdId_MIN = UnlockCoopChapterReq_CmdId_NONE;
const UnlockCoopChapterReq_CmdId UnlockCoopChapterReq_CmdId_CmdId_MAX = UnlockCoopChapterReq_CmdId_CMD_ID;
const int UnlockCoopChapterReq_CmdId_CmdId_ARRAYSIZE = UnlockCoopChapterReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockCoopChapterReq_CmdId_descriptor();
inline const ::std::string& UnlockCoopChapterReq_CmdId_Name(UnlockCoopChapterReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockCoopChapterReq_CmdId_descriptor(), value);
}
inline bool UnlockCoopChapterReq_CmdId_Parse(
    const ::std::string& name, UnlockCoopChapterReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockCoopChapterReq_CmdId>(
    UnlockCoopChapterReq_CmdId_descriptor(), name, value);
}
enum UnlockCoopChapterRsp_CmdId {
  UnlockCoopChapterRsp_CmdId_NONE = 0,
  UnlockCoopChapterRsp_CmdId_CMD_ID = 1995,
  UnlockCoopChapterRsp_CmdId_ENET_CHANNEL_ID = 0,
  UnlockCoopChapterRsp_CmdId_ENET_IS_RELIABLE = 1,
  UnlockCoopChapterRsp_CmdId_UnlockCoopChapterRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockCoopChapterRsp_CmdId_UnlockCoopChapterRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockCoopChapterRsp_CmdId_IsValid(int value);
const UnlockCoopChapterRsp_CmdId UnlockCoopChapterRsp_CmdId_CmdId_MIN = UnlockCoopChapterRsp_CmdId_NONE;
const UnlockCoopChapterRsp_CmdId UnlockCoopChapterRsp_CmdId_CmdId_MAX = UnlockCoopChapterRsp_CmdId_CMD_ID;
const int UnlockCoopChapterRsp_CmdId_CmdId_ARRAYSIZE = UnlockCoopChapterRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockCoopChapterRsp_CmdId_descriptor();
inline const ::std::string& UnlockCoopChapterRsp_CmdId_Name(UnlockCoopChapterRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockCoopChapterRsp_CmdId_descriptor(), value);
}
inline bool UnlockCoopChapterRsp_CmdId_Parse(
    const ::std::string& name, UnlockCoopChapterRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockCoopChapterRsp_CmdId>(
    UnlockCoopChapterRsp_CmdId_descriptor(), name, value);
}
enum CoopPointUpdateNotify_CmdId {
  CoopPointUpdateNotify_CmdId_NONE = 0,
  CoopPointUpdateNotify_CmdId_CMD_ID = 1991,
  CoopPointUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopPointUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopPointUpdateNotify_CmdId_CoopPointUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopPointUpdateNotify_CmdId_CoopPointUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopPointUpdateNotify_CmdId_IsValid(int value);
const CoopPointUpdateNotify_CmdId CoopPointUpdateNotify_CmdId_CmdId_MIN = CoopPointUpdateNotify_CmdId_NONE;
const CoopPointUpdateNotify_CmdId CoopPointUpdateNotify_CmdId_CmdId_MAX = CoopPointUpdateNotify_CmdId_CMD_ID;
const int CoopPointUpdateNotify_CmdId_CmdId_ARRAYSIZE = CoopPointUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopPointUpdateNotify_CmdId_descriptor();
inline const ::std::string& CoopPointUpdateNotify_CmdId_Name(CoopPointUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopPointUpdateNotify_CmdId_descriptor(), value);
}
inline bool CoopPointUpdateNotify_CmdId_Parse(
    const ::std::string& name, CoopPointUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopPointUpdateNotify_CmdId>(
    CoopPointUpdateNotify_CmdId_descriptor(), name, value);
}
enum StartCoopPointReq_CmdId {
  StartCoopPointReq_CmdId_NONE = 0,
  StartCoopPointReq_CmdId_CMD_ID = 1992,
  StartCoopPointReq_CmdId_ENET_CHANNEL_ID = 0,
  StartCoopPointReq_CmdId_ENET_IS_RELIABLE = 1,
  StartCoopPointReq_CmdId_IS_ALLOW_CLIENT = 1,
  StartCoopPointReq_CmdId_StartCoopPointReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StartCoopPointReq_CmdId_StartCoopPointReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StartCoopPointReq_CmdId_IsValid(int value);
const StartCoopPointReq_CmdId StartCoopPointReq_CmdId_CmdId_MIN = StartCoopPointReq_CmdId_NONE;
const StartCoopPointReq_CmdId StartCoopPointReq_CmdId_CmdId_MAX = StartCoopPointReq_CmdId_CMD_ID;
const int StartCoopPointReq_CmdId_CmdId_ARRAYSIZE = StartCoopPointReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* StartCoopPointReq_CmdId_descriptor();
inline const ::std::string& StartCoopPointReq_CmdId_Name(StartCoopPointReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    StartCoopPointReq_CmdId_descriptor(), value);
}
inline bool StartCoopPointReq_CmdId_Parse(
    const ::std::string& name, StartCoopPointReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StartCoopPointReq_CmdId>(
    StartCoopPointReq_CmdId_descriptor(), name, value);
}
enum StartCoopPointRsp_CmdId {
  StartCoopPointRsp_CmdId_NONE = 0,
  StartCoopPointRsp_CmdId_CMD_ID = 1964,
  StartCoopPointRsp_CmdId_ENET_CHANNEL_ID = 0,
  StartCoopPointRsp_CmdId_ENET_IS_RELIABLE = 1,
  StartCoopPointRsp_CmdId_StartCoopPointRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StartCoopPointRsp_CmdId_StartCoopPointRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StartCoopPointRsp_CmdId_IsValid(int value);
const StartCoopPointRsp_CmdId StartCoopPointRsp_CmdId_CmdId_MIN = StartCoopPointRsp_CmdId_NONE;
const StartCoopPointRsp_CmdId StartCoopPointRsp_CmdId_CmdId_MAX = StartCoopPointRsp_CmdId_CMD_ID;
const int StartCoopPointRsp_CmdId_CmdId_ARRAYSIZE = StartCoopPointRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* StartCoopPointRsp_CmdId_descriptor();
inline const ::std::string& StartCoopPointRsp_CmdId_Name(StartCoopPointRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    StartCoopPointRsp_CmdId_descriptor(), value);
}
inline bool StartCoopPointRsp_CmdId_Parse(
    const ::std::string& name, StartCoopPointRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StartCoopPointRsp_CmdId>(
    StartCoopPointRsp_CmdId_descriptor(), name, value);
}
enum CancelCoopTaskReq_CmdId {
  CancelCoopTaskReq_CmdId_NONE = 0,
  CancelCoopTaskReq_CmdId_CMD_ID = 1997,
  CancelCoopTaskReq_CmdId_ENET_CHANNEL_ID = 0,
  CancelCoopTaskReq_CmdId_ENET_IS_RELIABLE = 1,
  CancelCoopTaskReq_CmdId_IS_ALLOW_CLIENT = 1,
  CancelCoopTaskReq_CmdId_CancelCoopTaskReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CancelCoopTaskReq_CmdId_CancelCoopTaskReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CancelCoopTaskReq_CmdId_IsValid(int value);
const CancelCoopTaskReq_CmdId CancelCoopTaskReq_CmdId_CmdId_MIN = CancelCoopTaskReq_CmdId_NONE;
const CancelCoopTaskReq_CmdId CancelCoopTaskReq_CmdId_CmdId_MAX = CancelCoopTaskReq_CmdId_CMD_ID;
const int CancelCoopTaskReq_CmdId_CmdId_ARRAYSIZE = CancelCoopTaskReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CancelCoopTaskReq_CmdId_descriptor();
inline const ::std::string& CancelCoopTaskReq_CmdId_Name(CancelCoopTaskReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CancelCoopTaskReq_CmdId_descriptor(), value);
}
inline bool CancelCoopTaskReq_CmdId_Parse(
    const ::std::string& name, CancelCoopTaskReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CancelCoopTaskReq_CmdId>(
    CancelCoopTaskReq_CmdId_descriptor(), name, value);
}
enum CancelCoopTaskRsp_CmdId {
  CancelCoopTaskRsp_CmdId_NONE = 0,
  CancelCoopTaskRsp_CmdId_CMD_ID = 1987,
  CancelCoopTaskRsp_CmdId_ENET_CHANNEL_ID = 0,
  CancelCoopTaskRsp_CmdId_ENET_IS_RELIABLE = 1,
  CancelCoopTaskRsp_CmdId_CancelCoopTaskRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CancelCoopTaskRsp_CmdId_CancelCoopTaskRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CancelCoopTaskRsp_CmdId_IsValid(int value);
const CancelCoopTaskRsp_CmdId CancelCoopTaskRsp_CmdId_CmdId_MIN = CancelCoopTaskRsp_CmdId_NONE;
const CancelCoopTaskRsp_CmdId CancelCoopTaskRsp_CmdId_CmdId_MAX = CancelCoopTaskRsp_CmdId_CMD_ID;
const int CancelCoopTaskRsp_CmdId_CmdId_ARRAYSIZE = CancelCoopTaskRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CancelCoopTaskRsp_CmdId_descriptor();
inline const ::std::string& CancelCoopTaskRsp_CmdId_Name(CancelCoopTaskRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CancelCoopTaskRsp_CmdId_descriptor(), value);
}
inline bool CancelCoopTaskRsp_CmdId_Parse(
    const ::std::string& name, CancelCoopTaskRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CancelCoopTaskRsp_CmdId>(
    CancelCoopTaskRsp_CmdId_descriptor(), name, value);
}
enum TakeCoopRewardReq_CmdId {
  TakeCoopRewardReq_CmdId_NONE = 0,
  TakeCoopRewardReq_CmdId_CMD_ID = 1973,
  TakeCoopRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeCoopRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeCoopRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeCoopRewardReq_CmdId_TakeCoopRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeCoopRewardReq_CmdId_TakeCoopRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeCoopRewardReq_CmdId_IsValid(int value);
const TakeCoopRewardReq_CmdId TakeCoopRewardReq_CmdId_CmdId_MIN = TakeCoopRewardReq_CmdId_NONE;
const TakeCoopRewardReq_CmdId TakeCoopRewardReq_CmdId_CmdId_MAX = TakeCoopRewardReq_CmdId_CMD_ID;
const int TakeCoopRewardReq_CmdId_CmdId_ARRAYSIZE = TakeCoopRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeCoopRewardReq_CmdId_descriptor();
inline const ::std::string& TakeCoopRewardReq_CmdId_Name(TakeCoopRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeCoopRewardReq_CmdId_descriptor(), value);
}
inline bool TakeCoopRewardReq_CmdId_Parse(
    const ::std::string& name, TakeCoopRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeCoopRewardReq_CmdId>(
    TakeCoopRewardReq_CmdId_descriptor(), name, value);
}
enum TakeCoopRewardRsp_CmdId {
  TakeCoopRewardRsp_CmdId_NONE = 0,
  TakeCoopRewardRsp_CmdId_CMD_ID = 1985,
  TakeCoopRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeCoopRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeCoopRewardRsp_CmdId_TakeCoopRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeCoopRewardRsp_CmdId_TakeCoopRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeCoopRewardRsp_CmdId_IsValid(int value);
const TakeCoopRewardRsp_CmdId TakeCoopRewardRsp_CmdId_CmdId_MIN = TakeCoopRewardRsp_CmdId_NONE;
const TakeCoopRewardRsp_CmdId TakeCoopRewardRsp_CmdId_CmdId_MAX = TakeCoopRewardRsp_CmdId_CMD_ID;
const int TakeCoopRewardRsp_CmdId_CmdId_ARRAYSIZE = TakeCoopRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeCoopRewardRsp_CmdId_descriptor();
inline const ::std::string& TakeCoopRewardRsp_CmdId_Name(TakeCoopRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeCoopRewardRsp_CmdId_descriptor(), value);
}
inline bool TakeCoopRewardRsp_CmdId_Parse(
    const ::std::string& name, TakeCoopRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeCoopRewardRsp_CmdId>(
    TakeCoopRewardRsp_CmdId_descriptor(), name, value);
}
enum CoopProgressUpdateNotify_CmdId {
  CoopProgressUpdateNotify_CmdId_NONE = 0,
  CoopProgressUpdateNotify_CmdId_CMD_ID = 1998,
  CoopProgressUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopProgressUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopProgressUpdateNotify_CmdId_CoopProgressUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopProgressUpdateNotify_CmdId_CoopProgressUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopProgressUpdateNotify_CmdId_IsValid(int value);
const CoopProgressUpdateNotify_CmdId CoopProgressUpdateNotify_CmdId_CmdId_MIN = CoopProgressUpdateNotify_CmdId_NONE;
const CoopProgressUpdateNotify_CmdId CoopProgressUpdateNotify_CmdId_CmdId_MAX = CoopProgressUpdateNotify_CmdId_CMD_ID;
const int CoopProgressUpdateNotify_CmdId_CmdId_ARRAYSIZE = CoopProgressUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopProgressUpdateNotify_CmdId_descriptor();
inline const ::std::string& CoopProgressUpdateNotify_CmdId_Name(CoopProgressUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopProgressUpdateNotify_CmdId_descriptor(), value);
}
inline bool CoopProgressUpdateNotify_CmdId_Parse(
    const ::std::string& name, CoopProgressUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopProgressUpdateNotify_CmdId>(
    CoopProgressUpdateNotify_CmdId_descriptor(), name, value);
}
enum SaveCoopDialogReq_CmdId {
  SaveCoopDialogReq_CmdId_NONE = 0,
  SaveCoopDialogReq_CmdId_CMD_ID = 2000,
  SaveCoopDialogReq_CmdId_ENET_CHANNEL_ID = 0,
  SaveCoopDialogReq_CmdId_ENET_IS_RELIABLE = 1,
  SaveCoopDialogReq_CmdId_IS_ALLOW_CLIENT = 1,
  SaveCoopDialogReq_CmdId_SaveCoopDialogReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveCoopDialogReq_CmdId_SaveCoopDialogReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveCoopDialogReq_CmdId_IsValid(int value);
const SaveCoopDialogReq_CmdId SaveCoopDialogReq_CmdId_CmdId_MIN = SaveCoopDialogReq_CmdId_NONE;
const SaveCoopDialogReq_CmdId SaveCoopDialogReq_CmdId_CmdId_MAX = SaveCoopDialogReq_CmdId_CMD_ID;
const int SaveCoopDialogReq_CmdId_CmdId_ARRAYSIZE = SaveCoopDialogReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveCoopDialogReq_CmdId_descriptor();
inline const ::std::string& SaveCoopDialogReq_CmdId_Name(SaveCoopDialogReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveCoopDialogReq_CmdId_descriptor(), value);
}
inline bool SaveCoopDialogReq_CmdId_Parse(
    const ::std::string& name, SaveCoopDialogReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveCoopDialogReq_CmdId>(
    SaveCoopDialogReq_CmdId_descriptor(), name, value);
}
enum SaveCoopDialogRsp_CmdId {
  SaveCoopDialogRsp_CmdId_NONE = 0,
  SaveCoopDialogRsp_CmdId_CMD_ID = 1962,
  SaveCoopDialogRsp_CmdId_ENET_CHANNEL_ID = 0,
  SaveCoopDialogRsp_CmdId_ENET_IS_RELIABLE = 1,
  SaveCoopDialogRsp_CmdId_SaveCoopDialogRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SaveCoopDialogRsp_CmdId_SaveCoopDialogRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SaveCoopDialogRsp_CmdId_IsValid(int value);
const SaveCoopDialogRsp_CmdId SaveCoopDialogRsp_CmdId_CmdId_MIN = SaveCoopDialogRsp_CmdId_NONE;
const SaveCoopDialogRsp_CmdId SaveCoopDialogRsp_CmdId_CmdId_MAX = SaveCoopDialogRsp_CmdId_CMD_ID;
const int SaveCoopDialogRsp_CmdId_CmdId_ARRAYSIZE = SaveCoopDialogRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SaveCoopDialogRsp_CmdId_descriptor();
inline const ::std::string& SaveCoopDialogRsp_CmdId_Name(SaveCoopDialogRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SaveCoopDialogRsp_CmdId_descriptor(), value);
}
inline bool SaveCoopDialogRsp_CmdId_Parse(
    const ::std::string& name, SaveCoopDialogRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SaveCoopDialogRsp_CmdId>(
    SaveCoopDialogRsp_CmdId_descriptor(), name, value);
}
enum CoopCgShowNotify_CmdId {
  CoopCgShowNotify_CmdId_NONE = 0,
  CoopCgShowNotify_CmdId_CMD_ID = 1983,
  CoopCgShowNotify_CmdId_ENET_CHANNEL_ID = 0,
  CoopCgShowNotify_CmdId_ENET_IS_RELIABLE = 1,
  CoopCgShowNotify_CmdId_CoopCgShowNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CoopCgShowNotify_CmdId_CoopCgShowNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CoopCgShowNotify_CmdId_IsValid(int value);
const CoopCgShowNotify_CmdId CoopCgShowNotify_CmdId_CmdId_MIN = CoopCgShowNotify_CmdId_NONE;
const CoopCgShowNotify_CmdId CoopCgShowNotify_CmdId_CmdId_MAX = CoopCgShowNotify_CmdId_CMD_ID;
const int CoopCgShowNotify_CmdId_CmdId_ARRAYSIZE = CoopCgShowNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoopCgShowNotify_CmdId_descriptor();
inline const ::std::string& CoopCgShowNotify_CmdId_Name(CoopCgShowNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoopCgShowNotify_CmdId_descriptor(), value);
}
inline bool CoopCgShowNotify_CmdId_Parse(
    const ::std::string& name, CoopCgShowNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoopCgShowNotify_CmdId>(
    CoopCgShowNotify_CmdId_descriptor(), name, value);
}
enum SetCoopChapterViewedReq_CmdId {
  SetCoopChapterViewedReq_CmdId_NONE = 0,
  SetCoopChapterViewedReq_CmdId_CMD_ID = 1965,
  SetCoopChapterViewedReq_CmdId_ENET_CHANNEL_ID = 0,
  SetCoopChapterViewedReq_CmdId_ENET_IS_RELIABLE = 1,
  SetCoopChapterViewedReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetCoopChapterViewedReq_CmdId_SetCoopChapterViewedReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetCoopChapterViewedReq_CmdId_SetCoopChapterViewedReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetCoopChapterViewedReq_CmdId_IsValid(int value);
const SetCoopChapterViewedReq_CmdId SetCoopChapterViewedReq_CmdId_CmdId_MIN = SetCoopChapterViewedReq_CmdId_NONE;
const SetCoopChapterViewedReq_CmdId SetCoopChapterViewedReq_CmdId_CmdId_MAX = SetCoopChapterViewedReq_CmdId_CMD_ID;
const int SetCoopChapterViewedReq_CmdId_CmdId_ARRAYSIZE = SetCoopChapterViewedReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetCoopChapterViewedReq_CmdId_descriptor();
inline const ::std::string& SetCoopChapterViewedReq_CmdId_Name(SetCoopChapterViewedReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetCoopChapterViewedReq_CmdId_descriptor(), value);
}
inline bool SetCoopChapterViewedReq_CmdId_Parse(
    const ::std::string& name, SetCoopChapterViewedReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetCoopChapterViewedReq_CmdId>(
    SetCoopChapterViewedReq_CmdId_descriptor(), name, value);
}
enum SetCoopChapterViewedRsp_CmdId {
  SetCoopChapterViewedRsp_CmdId_NONE = 0,
  SetCoopChapterViewedRsp_CmdId_CMD_ID = 1963,
  SetCoopChapterViewedRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetCoopChapterViewedRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetCoopChapterViewedRsp_CmdId_SetCoopChapterViewedRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetCoopChapterViewedRsp_CmdId_SetCoopChapterViewedRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetCoopChapterViewedRsp_CmdId_IsValid(int value);
const SetCoopChapterViewedRsp_CmdId SetCoopChapterViewedRsp_CmdId_CmdId_MIN = SetCoopChapterViewedRsp_CmdId_NONE;
const SetCoopChapterViewedRsp_CmdId SetCoopChapterViewedRsp_CmdId_CmdId_MAX = SetCoopChapterViewedRsp_CmdId_CMD_ID;
const int SetCoopChapterViewedRsp_CmdId_CmdId_ARRAYSIZE = SetCoopChapterViewedRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetCoopChapterViewedRsp_CmdId_descriptor();
inline const ::std::string& SetCoopChapterViewedRsp_CmdId_Name(SetCoopChapterViewedRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetCoopChapterViewedRsp_CmdId_descriptor(), value);
}
inline bool SetCoopChapterViewedRsp_CmdId_Parse(
    const ::std::string& name, SetCoopChapterViewedRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetCoopChapterViewedRsp_CmdId>(
    SetCoopChapterViewedRsp_CmdId_descriptor(), name, value);
}
enum MainCoopFailNotify_CmdId {
  MainCoopFailNotify_CmdId_NONE = 0,
  MainCoopFailNotify_CmdId_CMD_ID = 1951,
  MainCoopFailNotify_CmdId_ENET_CHANNEL_ID = 0,
  MainCoopFailNotify_CmdId_ENET_IS_RELIABLE = 1,
  MainCoopFailNotify_CmdId_MainCoopFailNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MainCoopFailNotify_CmdId_MainCoopFailNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MainCoopFailNotify_CmdId_IsValid(int value);
const MainCoopFailNotify_CmdId MainCoopFailNotify_CmdId_CmdId_MIN = MainCoopFailNotify_CmdId_NONE;
const MainCoopFailNotify_CmdId MainCoopFailNotify_CmdId_CmdId_MAX = MainCoopFailNotify_CmdId_CMD_ID;
const int MainCoopFailNotify_CmdId_CmdId_ARRAYSIZE = MainCoopFailNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MainCoopFailNotify_CmdId_descriptor();
inline const ::std::string& MainCoopFailNotify_CmdId_Name(MainCoopFailNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MainCoopFailNotify_CmdId_descriptor(), value);
}
inline bool MainCoopFailNotify_CmdId_Parse(
    const ::std::string& name, MainCoopFailNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MainCoopFailNotify_CmdId>(
    MainCoopFailNotify_CmdId_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MainCoop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MainCoop) */ {
 public:
  MainCoop();
  virtual ~MainCoop();

  MainCoop(const MainCoop& from);

  inline MainCoop& operator=(const MainCoop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MainCoop(MainCoop&& from) noexcept
    : MainCoop() {
    *this = ::std::move(from);
  }

  inline MainCoop& operator=(MainCoop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MainCoop& default_instance();

  static inline const MainCoop* internal_default_instance() {
    return reinterpret_cast<const MainCoop*>(
               &_MainCoop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MainCoop* other);
  friend void swap(MainCoop& a, MainCoop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MainCoop* New() const PROTOBUF_FINAL { return New(NULL); }

  MainCoop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MainCoop& from);
  void MergeFrom(const MainCoop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MainCoop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef MainCoop_Status Status;
  static const Status INVALID =
    MainCoop_Status_INVALID;
  static const Status RUNNING =
    MainCoop_Status_RUNNING;
  static const Status FINISHED =
    MainCoop_Status_FINISHED;
  static inline bool Status_IsValid(int value) {
    return MainCoop_Status_IsValid(value);
  }
  static const Status Status_MIN =
    MainCoop_Status_Status_MIN;
  static const Status Status_MAX =
    MainCoop_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    MainCoop_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return MainCoop_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return MainCoop_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return MainCoop_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 save_point_id_list = 1;
  int save_point_id_list_size() const;
  void clear_save_point_id_list();
  static const int kSavePointIdListFieldNumber = 1;
  ::google::protobuf::uint32 save_point_id_list(int index) const;
  void set_save_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_save_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      save_point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_save_point_id_list();

  // map<uint32, int32> normal_var_map = 4;
  int normal_var_map_size() const;
  void clear_normal_var_map();
  static const int kNormalVarMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      normal_var_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_normal_var_map();

  // map<uint32, int32> temp_var_map = 11;
  int temp_var_map_size() const;
  void clear_temp_var_map();
  static const int kTempVarMapFieldNumber = 11;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      temp_var_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_temp_var_map();

  // map<uint32, uint32> seen_ending_map = 13;
  int seen_ending_map_size() const;
  void clear_seen_ending_map();
  static const int kSeenEndingMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      seen_ending_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_seen_ending_map();

  // uint32 self_confidence = 5;
  void clear_self_confidence();
  static const int kSelfConfidenceFieldNumber = 5;
  ::google::protobuf::uint32 self_confidence() const;
  void set_self_confidence(::google::protobuf::uint32 value);

  // .proto.MainCoop.Status status = 6;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::proto::MainCoop_Status status() const;
  void set_status(::proto::MainCoop_Status value);

  // uint32 id = 9;
  void clear_id();
  static const int kIdFieldNumber = 9;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MainCoop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > save_point_id_list_;
  mutable int _save_point_id_list_cached_byte_size_;
  public:
  class MainCoop_NormalVarMapEntry : public ::google::protobuf::internal::MapEntry<MainCoop_NormalVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MainCoop_NormalVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    MainCoop_NormalVarMapEntry();
    MainCoop_NormalVarMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MainCoop_NormalVarMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MainCoop_NormalVarMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MainCoop_NormalVarMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > normal_var_map_;
  private:
  public:
  class MainCoop_TempVarMapEntry : public ::google::protobuf::internal::MapEntry<MainCoop_TempVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MainCoop_TempVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    MainCoop_TempVarMapEntry();
    MainCoop_TempVarMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MainCoop_TempVarMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MainCoop_TempVarMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MainCoop_TempVarMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > temp_var_map_;
  private:
  public:
  class MainCoop_SeenEndingMapEntry : public ::google::protobuf::internal::MapEntry<MainCoop_SeenEndingMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MainCoop_SeenEndingMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    MainCoop_SeenEndingMapEntry();
    MainCoop_SeenEndingMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MainCoop_SeenEndingMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MainCoop_SeenEndingMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MainCoop_SeenEndingMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > seen_ending_map_;
  private:
  ::google::protobuf::uint32 self_confidence_;
  int status_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllCoopInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AllCoopInfoNotify) */ {
 public:
  AllCoopInfoNotify();
  virtual ~AllCoopInfoNotify();

  AllCoopInfoNotify(const AllCoopInfoNotify& from);

  inline AllCoopInfoNotify& operator=(const AllCoopInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllCoopInfoNotify(AllCoopInfoNotify&& from) noexcept
    : AllCoopInfoNotify() {
    *this = ::std::move(from);
  }

  inline AllCoopInfoNotify& operator=(AllCoopInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllCoopInfoNotify& default_instance();

  static inline const AllCoopInfoNotify* internal_default_instance() {
    return reinterpret_cast<const AllCoopInfoNotify*>(
               &_AllCoopInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AllCoopInfoNotify* other);
  friend void swap(AllCoopInfoNotify& a, AllCoopInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllCoopInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AllCoopInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllCoopInfoNotify& from);
  void MergeFrom(const AllCoopInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllCoopInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AllCoopInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    AllCoopInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AllCoopInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AllCoopInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AllCoopInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AllCoopInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AllCoopInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AllCoopInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AllCoopInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AllCoopInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AllCoopInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AllCoopInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MainCoop main_coop_list = 14;
  int main_coop_list_size() const;
  void clear_main_coop_list();
  static const int kMainCoopListFieldNumber = 14;
  const ::proto::MainCoop& main_coop_list(int index) const;
  ::proto::MainCoop* mutable_main_coop_list(int index);
  ::proto::MainCoop* add_main_coop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >*
      mutable_main_coop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >&
      main_coop_list() const;

  // @@protoc_insertion_point(class_scope:proto.AllCoopInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MainCoop > main_coop_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MainCoopUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MainCoopUpdateNotify) */ {
 public:
  MainCoopUpdateNotify();
  virtual ~MainCoopUpdateNotify();

  MainCoopUpdateNotify(const MainCoopUpdateNotify& from);

  inline MainCoopUpdateNotify& operator=(const MainCoopUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MainCoopUpdateNotify(MainCoopUpdateNotify&& from) noexcept
    : MainCoopUpdateNotify() {
    *this = ::std::move(from);
  }

  inline MainCoopUpdateNotify& operator=(MainCoopUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MainCoopUpdateNotify& default_instance();

  static inline const MainCoopUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const MainCoopUpdateNotify*>(
               &_MainCoopUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MainCoopUpdateNotify* other);
  friend void swap(MainCoopUpdateNotify& a, MainCoopUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MainCoopUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MainCoopUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MainCoopUpdateNotify& from);
  void MergeFrom(const MainCoopUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MainCoopUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MainCoopUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    MainCoopUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MainCoopUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MainCoopUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MainCoopUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MainCoopUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MainCoopUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MainCoopUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MainCoopUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MainCoopUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MainCoopUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MainCoopUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MainCoop main_coop_list = 5;
  int main_coop_list_size() const;
  void clear_main_coop_list();
  static const int kMainCoopListFieldNumber = 5;
  const ::proto::MainCoop& main_coop_list(int index) const;
  ::proto::MainCoop* mutable_main_coop_list(int index);
  ::proto::MainCoop* add_main_coop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >*
      mutable_main_coop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >&
      main_coop_list() const;

  // @@protoc_insertion_point(class_scope:proto.MainCoopUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MainCoop > main_coop_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SaveMainCoopReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveMainCoopReq) */ {
 public:
  SaveMainCoopReq();
  virtual ~SaveMainCoopReq();

  SaveMainCoopReq(const SaveMainCoopReq& from);

  inline SaveMainCoopReq& operator=(const SaveMainCoopReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveMainCoopReq(SaveMainCoopReq&& from) noexcept
    : SaveMainCoopReq() {
    *this = ::std::move(from);
  }

  inline SaveMainCoopReq& operator=(SaveMainCoopReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMainCoopReq& default_instance();

  static inline const SaveMainCoopReq* internal_default_instance() {
    return reinterpret_cast<const SaveMainCoopReq*>(
               &_SaveMainCoopReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SaveMainCoopReq* other);
  friend void swap(SaveMainCoopReq& a, SaveMainCoopReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveMainCoopReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveMainCoopReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveMainCoopReq& from);
  void MergeFrom(const SaveMainCoopReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveMainCoopReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef SaveMainCoopReq_CmdId CmdId;
  static const CmdId NONE =
    SaveMainCoopReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveMainCoopReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveMainCoopReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveMainCoopReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SaveMainCoopReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SaveMainCoopReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveMainCoopReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveMainCoopReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveMainCoopReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveMainCoopReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveMainCoopReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveMainCoopReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, int32> temp_var_map = 8;
  int temp_var_map_size() const;
  void clear_temp_var_map();
  static const int kTempVarMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      temp_var_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_temp_var_map();

  // map<uint32, int32> normal_var_map = 15;
  int normal_var_map_size() const;
  void clear_normal_var_map();
  static const int kNormalVarMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      normal_var_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_normal_var_map();

  // uint32 save_point_id = 1;
  void clear_save_point_id();
  static const int kSavePointIdFieldNumber = 1;
  ::google::protobuf::uint32 save_point_id() const;
  void set_save_point_id(::google::protobuf::uint32 value);

  // uint32 self_confidence = 2;
  void clear_self_confidence();
  static const int kSelfConfidenceFieldNumber = 2;
  ::google::protobuf::uint32 self_confidence() const;
  void set_self_confidence(::google::protobuf::uint32 value);

  // uint32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveMainCoopReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SaveMainCoopReq_TempVarMapEntry : public ::google::protobuf::internal::MapEntry<SaveMainCoopReq_TempVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SaveMainCoopReq_TempVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    SaveMainCoopReq_TempVarMapEntry();
    SaveMainCoopReq_TempVarMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SaveMainCoopReq_TempVarMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SaveMainCoopReq_TempVarMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SaveMainCoopReq_TempVarMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > temp_var_map_;
  private:
  public:
  class SaveMainCoopReq_NormalVarMapEntry : public ::google::protobuf::internal::MapEntry<SaveMainCoopReq_NormalVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SaveMainCoopReq_NormalVarMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    SaveMainCoopReq_NormalVarMapEntry();
    SaveMainCoopReq_NormalVarMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SaveMainCoopReq_NormalVarMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SaveMainCoopReq_NormalVarMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SaveMainCoopReq_NormalVarMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > normal_var_map_;
  private:
  ::google::protobuf::uint32 save_point_id_;
  ::google::protobuf::uint32 self_confidence_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveMainCoopRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveMainCoopRsp) */ {
 public:
  SaveMainCoopRsp();
  virtual ~SaveMainCoopRsp();

  SaveMainCoopRsp(const SaveMainCoopRsp& from);

  inline SaveMainCoopRsp& operator=(const SaveMainCoopRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveMainCoopRsp(SaveMainCoopRsp&& from) noexcept
    : SaveMainCoopRsp() {
    *this = ::std::move(from);
  }

  inline SaveMainCoopRsp& operator=(SaveMainCoopRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveMainCoopRsp& default_instance();

  static inline const SaveMainCoopRsp* internal_default_instance() {
    return reinterpret_cast<const SaveMainCoopRsp*>(
               &_SaveMainCoopRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SaveMainCoopRsp* other);
  friend void swap(SaveMainCoopRsp& a, SaveMainCoopRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveMainCoopRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveMainCoopRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveMainCoopRsp& from);
  void MergeFrom(const SaveMainCoopRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveMainCoopRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SaveMainCoopRsp_CmdId CmdId;
  static const CmdId NONE =
    SaveMainCoopRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveMainCoopRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveMainCoopRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveMainCoopRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SaveMainCoopRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveMainCoopRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveMainCoopRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveMainCoopRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveMainCoopRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveMainCoopRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveMainCoopRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 save_point_id_list = 15;
  int save_point_id_list_size() const;
  void clear_save_point_id_list();
  static const int kSavePointIdListFieldNumber = 15;
  ::google::protobuf::uint32 save_point_id_list(int index) const;
  void set_save_point_id_list(int index, ::google::protobuf::uint32 value);
  void add_save_point_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      save_point_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_save_point_id_list();

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 id = 14;
  void clear_id();
  static const int kIdFieldNumber = 14;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveMainCoopRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > save_point_id_list_;
  mutable int _save_point_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishMainCoopReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishMainCoopReq) */ {
 public:
  FinishMainCoopReq();
  virtual ~FinishMainCoopReq();

  FinishMainCoopReq(const FinishMainCoopReq& from);

  inline FinishMainCoopReq& operator=(const FinishMainCoopReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishMainCoopReq(FinishMainCoopReq&& from) noexcept
    : FinishMainCoopReq() {
    *this = ::std::move(from);
  }

  inline FinishMainCoopReq& operator=(FinishMainCoopReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishMainCoopReq& default_instance();

  static inline const FinishMainCoopReq* internal_default_instance() {
    return reinterpret_cast<const FinishMainCoopReq*>(
               &_FinishMainCoopReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(FinishMainCoopReq* other);
  friend void swap(FinishMainCoopReq& a, FinishMainCoopReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishMainCoopReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishMainCoopReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishMainCoopReq& from);
  void MergeFrom(const FinishMainCoopReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishMainCoopReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FinishMainCoopReq_CmdId CmdId;
  static const CmdId NONE =
    FinishMainCoopReq_CmdId_NONE;
  static const CmdId CMD_ID =
    FinishMainCoopReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FinishMainCoopReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FinishMainCoopReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    FinishMainCoopReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return FinishMainCoopReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FinishMainCoopReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FinishMainCoopReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FinishMainCoopReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FinishMainCoopReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FinishMainCoopReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FinishMainCoopReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 ending_save_point_id = 1;
  void clear_ending_save_point_id();
  static const int kEndingSavePointIdFieldNumber = 1;
  ::google::protobuf::uint32 ending_save_point_id() const;
  void set_ending_save_point_id(::google::protobuf::uint32 value);

  // uint32 id = 10;
  void clear_id();
  static const int kIdFieldNumber = 10;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishMainCoopReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ending_save_point_id_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishMainCoopRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishMainCoopRsp) */ {
 public:
  FinishMainCoopRsp();
  virtual ~FinishMainCoopRsp();

  FinishMainCoopRsp(const FinishMainCoopRsp& from);

  inline FinishMainCoopRsp& operator=(const FinishMainCoopRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishMainCoopRsp(FinishMainCoopRsp&& from) noexcept
    : FinishMainCoopRsp() {
    *this = ::std::move(from);
  }

  inline FinishMainCoopRsp& operator=(FinishMainCoopRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishMainCoopRsp& default_instance();

  static inline const FinishMainCoopRsp* internal_default_instance() {
    return reinterpret_cast<const FinishMainCoopRsp*>(
               &_FinishMainCoopRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(FinishMainCoopRsp* other);
  friend void swap(FinishMainCoopRsp& a, FinishMainCoopRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishMainCoopRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishMainCoopRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishMainCoopRsp& from);
  void MergeFrom(const FinishMainCoopRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishMainCoopRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FinishMainCoopRsp_CmdId CmdId;
  static const CmdId NONE =
    FinishMainCoopRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    FinishMainCoopRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    FinishMainCoopRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    FinishMainCoopRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return FinishMainCoopRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    FinishMainCoopRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    FinishMainCoopRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    FinishMainCoopRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return FinishMainCoopRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return FinishMainCoopRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return FinishMainCoopRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 retcode = 4;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 ending_save_point_id = 6;
  void clear_ending_save_point_id();
  static const int kEndingSavePointIdFieldNumber = 6;
  ::google::protobuf::uint32 ending_save_point_id() const;
  void set_ending_save_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishMainCoopRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 ending_save_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopPoint) */ {
 public:
  CoopPoint();
  virtual ~CoopPoint();

  CoopPoint(const CoopPoint& from);

  inline CoopPoint& operator=(const CoopPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopPoint(CoopPoint&& from) noexcept
    : CoopPoint() {
    *this = ::std::move(from);
  }

  inline CoopPoint& operator=(CoopPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopPoint& default_instance();

  static inline const CoopPoint* internal_default_instance() {
    return reinterpret_cast<const CoopPoint*>(
               &_CoopPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CoopPoint* other);
  friend void swap(CoopPoint& a, CoopPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopPoint& from);
  void MergeFrom(const CoopPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopPoint_State State;
  static const State STATE_UNSTARTED =
    CoopPoint_State_STATE_UNSTARTED;
  static const State STATE_STARTED =
    CoopPoint_State_STATE_STARTED;
  static const State STATE_FINISHED =
    CoopPoint_State_STATE_FINISHED;
  static inline bool State_IsValid(int value) {
    return CoopPoint_State_IsValid(value);
  }
  static const State State_MIN =
    CoopPoint_State_State_MIN;
  static const State State_MAX =
    CoopPoint_State_State_MAX;
  static const int State_ARRAYSIZE =
    CoopPoint_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CoopPoint_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CoopPoint_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CoopPoint_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 self_confidence = 15;
  void clear_self_confidence();
  static const int kSelfConfidenceFieldNumber = 15;
  ::google::protobuf::uint32 self_confidence() const;
  void set_self_confidence(::google::protobuf::uint32 value);

  // .proto.CoopPoint.State state = 10;
  void clear_state();
  static const int kStateFieldNumber = 10;
  ::proto::CoopPoint_State state() const;
  void set_state(::proto::CoopPoint_State value);

  // uint32 id = 14;
  void clear_id();
  static const int kIdFieldNumber = 14;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoopPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 self_confidence_;
  int state_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopReward) */ {
 public:
  CoopReward();
  virtual ~CoopReward();

  CoopReward(const CoopReward& from);

  inline CoopReward& operator=(const CoopReward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopReward(CoopReward&& from) noexcept
    : CoopReward() {
    *this = ::std::move(from);
  }

  inline CoopReward& operator=(CoopReward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopReward& default_instance();

  static inline const CoopReward* internal_default_instance() {
    return reinterpret_cast<const CoopReward*>(
               &_CoopReward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CoopReward* other);
  friend void swap(CoopReward& a, CoopReward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopReward* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopReward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopReward& from);
  void MergeFrom(const CoopReward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopReward_State State;
  static const State STATE_UNLOCK =
    CoopReward_State_STATE_UNLOCK;
  static const State STATE_LOCK =
    CoopReward_State_STATE_LOCK;
  static const State STATE_TAKEN =
    CoopReward_State_STATE_TAKEN;
  static inline bool State_IsValid(int value) {
    return CoopReward_State_IsValid(value);
  }
  static const State State_MIN =
    CoopReward_State_State_MIN;
  static const State State_MAX =
    CoopReward_State_State_MAX;
  static const int State_ARRAYSIZE =
    CoopReward_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CoopReward_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CoopReward_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CoopReward_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .proto.CoopReward.State state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::proto::CoopReward_State state() const;
  void set_state(::proto::CoopReward_State value);

  // @@protoc_insertion_point(class_scope:proto.CoopReward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  int state_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopCg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopCg) */ {
 public:
  CoopCg();
  virtual ~CoopCg();

  CoopCg(const CoopCg& from);

  inline CoopCg& operator=(const CoopCg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopCg(CoopCg&& from) noexcept
    : CoopCg() {
    *this = ::std::move(from);
  }

  inline CoopCg& operator=(CoopCg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopCg& default_instance();

  static inline const CoopCg* internal_default_instance() {
    return reinterpret_cast<const CoopCg*>(
               &_CoopCg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CoopCg* other);
  friend void swap(CoopCg& a, CoopCg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopCg* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopCg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopCg& from);
  void MergeFrom(const CoopCg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopCg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 8;
  void clear_id();
  static const int kIdFieldNumber = 8;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // bool is_unlock = 14;
  void clear_is_unlock();
  static const int kIsUnlockFieldNumber = 14;
  bool is_unlock() const;
  void set_is_unlock(bool value);

  // @@protoc_insertion_point(class_scope:proto.CoopCg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  bool is_unlock_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CoopChapter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopChapter) */ {
 public:
  CoopChapter();
  virtual ~CoopChapter();

  CoopChapter(const CoopChapter& from);

  inline CoopChapter& operator=(const CoopChapter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopChapter(CoopChapter&& from) noexcept
    : CoopChapter() {
    *this = ::std::move(from);
  }

  inline CoopChapter& operator=(CoopChapter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopChapter& default_instance();

  static inline const CoopChapter* internal_default_instance() {
    return reinterpret_cast<const CoopChapter*>(
               &_CoopChapter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CoopChapter* other);
  friend void swap(CoopChapter& a, CoopChapter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopChapter* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopChapter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopChapter& from);
  void MergeFrom(const CoopChapter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopChapter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef CoopChapter_State State;
  static const State STATE_CLOSE =
    CoopChapter_State_STATE_CLOSE;
  static const State STATE_COND_NOT_MEET =
    CoopChapter_State_STATE_COND_NOT_MEET;
  static const State STATE_COND_MEET =
    CoopChapter_State_STATE_COND_MEET;
  static const State STATE_ACCEPT =
    CoopChapter_State_STATE_ACCEPT;
  static inline bool State_IsValid(int value) {
    return CoopChapter_State_IsValid(value);
  }
  static const State State_MIN =
    CoopChapter_State_State_MIN;
  static const State State_MAX =
    CoopChapter_State_State_MAX;
  static const int State_ARRAYSIZE =
    CoopChapter_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CoopChapter_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CoopChapter_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CoopChapter_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CoopCg coop_cg_list = 1;
  int coop_cg_list_size() const;
  void clear_coop_cg_list();
  static const int kCoopCgListFieldNumber = 1;
  const ::proto::CoopCg& coop_cg_list(int index) const;
  ::proto::CoopCg* mutable_coop_cg_list(int index);
  ::proto::CoopCg* add_coop_cg_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopCg >*
      mutable_coop_cg_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopCg >&
      coop_cg_list() const;

  // repeated .proto.CoopReward coop_reward_list = 5;
  int coop_reward_list_size() const;
  void clear_coop_reward_list();
  static const int kCoopRewardListFieldNumber = 5;
  const ::proto::CoopReward& coop_reward_list(int index) const;
  ::proto::CoopReward* mutable_coop_reward_list(int index);
  ::proto::CoopReward* add_coop_reward_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >*
      mutable_coop_reward_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >&
      coop_reward_list() const;

  // map<uint32, uint32> seen_ending_map = 9;
  int seen_ending_map_size() const;
  void clear_seen_ending_map();
  static const int kSeenEndingMapFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      seen_ending_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_seen_ending_map();

  // repeated uint32 finish_dialog_list = 10;
  int finish_dialog_list_size() const;
  void clear_finish_dialog_list();
  static const int kFinishDialogListFieldNumber = 10;
  ::google::protobuf::uint32 finish_dialog_list(int index) const;
  void set_finish_dialog_list(int index, ::google::protobuf::uint32 value);
  void add_finish_dialog_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finish_dialog_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finish_dialog_list();

  // repeated .proto.CoopPoint coop_point_list = 11;
  int coop_point_list_size() const;
  void clear_coop_point_list();
  static const int kCoopPointListFieldNumber = 11;
  const ::proto::CoopPoint& coop_point_list(int index) const;
  ::proto::CoopPoint* mutable_coop_point_list(int index);
  ::proto::CoopPoint* add_coop_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopPoint >*
      mutable_coop_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopPoint >&
      coop_point_list() const;

  // repeated uint32 lock_reason_list = 12;
  int lock_reason_list_size() const;
  void clear_lock_reason_list();
  static const int kLockReasonListFieldNumber = 12;
  ::google::protobuf::uint32 lock_reason_list(int index) const;
  void set_lock_reason_list(int index, ::google::protobuf::uint32 value);
  void add_lock_reason_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lock_reason_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lock_reason_list();

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .proto.CoopChapter.State state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::proto::CoopChapter_State state() const;
  void set_state(::proto::CoopChapter_State value);

  // uint32 total_end_count = 7;
  void clear_total_end_count();
  static const int kTotalEndCountFieldNumber = 7;
  ::google::protobuf::uint32 total_end_count() const;
  void set_total_end_count(::google::protobuf::uint32 value);

  // uint32 finished_end_count = 14;
  void clear_finished_end_count();
  static const int kFinishedEndCountFieldNumber = 14;
  ::google::protobuf::uint32 finished_end_count() const;
  void set_finished_end_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CoopChapter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopCg > coop_cg_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopReward > coop_reward_list_;
  public:
  class CoopChapter_SeenEndingMapEntry : public ::google::protobuf::internal::MapEntry<CoopChapter_SeenEndingMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CoopChapter_SeenEndingMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    CoopChapter_SeenEndingMapEntry();
    CoopChapter_SeenEndingMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CoopChapter_SeenEndingMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CoopChapter_SeenEndingMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CoopChapter_SeenEndingMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > seen_ending_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finish_dialog_list_;
  mutable int _finish_dialog_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopPoint > coop_point_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lock_reason_list_;
  mutable int _lock_reason_list_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  int state_;
  ::google::protobuf::uint32 total_end_count_;
  ::google::protobuf::uint32 finished_end_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopDataNotify) */ {
 public:
  CoopDataNotify();
  virtual ~CoopDataNotify();

  CoopDataNotify(const CoopDataNotify& from);

  inline CoopDataNotify& operator=(const CoopDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopDataNotify(CoopDataNotify&& from) noexcept
    : CoopDataNotify() {
    *this = ::std::move(from);
  }

  inline CoopDataNotify& operator=(CoopDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopDataNotify& default_instance();

  static inline const CoopDataNotify* internal_default_instance() {
    return reinterpret_cast<const CoopDataNotify*>(
               &_CoopDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CoopDataNotify* other);
  friend void swap(CoopDataNotify& a, CoopDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopDataNotify& from);
  void MergeFrom(const CoopDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopDataNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 viewed_chapter_list = 7;
  int viewed_chapter_list_size() const;
  void clear_viewed_chapter_list();
  static const int kViewedChapterListFieldNumber = 7;
  ::google::protobuf::uint32 viewed_chapter_list(int index) const;
  void set_viewed_chapter_list(int index, ::google::protobuf::uint32 value);
  void add_viewed_chapter_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      viewed_chapter_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_viewed_chapter_list();

  // repeated .proto.CoopChapter chapter_list = 15;
  int chapter_list_size() const;
  void clear_chapter_list();
  static const int kChapterListFieldNumber = 15;
  const ::proto::CoopChapter& chapter_list(int index) const;
  ::proto::CoopChapter* mutable_chapter_list(int index);
  ::proto::CoopChapter* add_chapter_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >*
      mutable_chapter_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >&
      chapter_list() const;

  // uint32 cur_coop_point = 5;
  void clear_cur_coop_point();
  static const int kCurCoopPointFieldNumber = 5;
  ::google::protobuf::uint32 cur_coop_point() const;
  void set_cur_coop_point(::google::protobuf::uint32 value);

  // bool is_have_progress = 10;
  void clear_is_have_progress();
  static const int kIsHaveProgressFieldNumber = 10;
  bool is_have_progress() const;
  void set_is_have_progress(bool value);

  // @@protoc_insertion_point(class_scope:proto.CoopDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > viewed_chapter_list_;
  mutable int _viewed_chapter_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter > chapter_list_;
  ::google::protobuf::uint32 cur_coop_point_;
  bool is_have_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopChapterUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopChapterUpdateNotify) */ {
 public:
  CoopChapterUpdateNotify();
  virtual ~CoopChapterUpdateNotify();

  CoopChapterUpdateNotify(const CoopChapterUpdateNotify& from);

  inline CoopChapterUpdateNotify& operator=(const CoopChapterUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopChapterUpdateNotify(CoopChapterUpdateNotify&& from) noexcept
    : CoopChapterUpdateNotify() {
    *this = ::std::move(from);
  }

  inline CoopChapterUpdateNotify& operator=(CoopChapterUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopChapterUpdateNotify& default_instance();

  static inline const CoopChapterUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const CoopChapterUpdateNotify*>(
               &_CoopChapterUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CoopChapterUpdateNotify* other);
  friend void swap(CoopChapterUpdateNotify& a, CoopChapterUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopChapterUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopChapterUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopChapterUpdateNotify& from);
  void MergeFrom(const CoopChapterUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopChapterUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopChapterUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopChapterUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopChapterUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopChapterUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopChapterUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopChapterUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopChapterUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopChapterUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopChapterUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopChapterUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopChapterUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopChapterUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CoopChapter chapter_list = 14;
  int chapter_list_size() const;
  void clear_chapter_list();
  static const int kChapterListFieldNumber = 14;
  const ::proto::CoopChapter& chapter_list(int index) const;
  ::proto::CoopChapter* mutable_chapter_list(int index);
  ::proto::CoopChapter* add_chapter_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >*
      mutable_chapter_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >&
      chapter_list() const;

  // @@protoc_insertion_point(class_scope:proto.CoopChapterUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter > chapter_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopCgUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopCgUpdateNotify) */ {
 public:
  CoopCgUpdateNotify();
  virtual ~CoopCgUpdateNotify();

  CoopCgUpdateNotify(const CoopCgUpdateNotify& from);

  inline CoopCgUpdateNotify& operator=(const CoopCgUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopCgUpdateNotify(CoopCgUpdateNotify&& from) noexcept
    : CoopCgUpdateNotify() {
    *this = ::std::move(from);
  }

  inline CoopCgUpdateNotify& operator=(CoopCgUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopCgUpdateNotify& default_instance();

  static inline const CoopCgUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const CoopCgUpdateNotify*>(
               &_CoopCgUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CoopCgUpdateNotify* other);
  friend void swap(CoopCgUpdateNotify& a, CoopCgUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopCgUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopCgUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopCgUpdateNotify& from);
  void MergeFrom(const CoopCgUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopCgUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopCgUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopCgUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopCgUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopCgUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopCgUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopCgUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopCgUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopCgUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopCgUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopCgUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopCgUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopCgUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 cg_list = 13;
  int cg_list_size() const;
  void clear_cg_list();
  static const int kCgListFieldNumber = 13;
  ::google::protobuf::uint32 cg_list(int index) const;
  void set_cg_list(int index, ::google::protobuf::uint32 value);
  void add_cg_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cg_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cg_list();

  // @@protoc_insertion_point(class_scope:proto.CoopCgUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cg_list_;
  mutable int _cg_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopRewardUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopRewardUpdateNotify) */ {
 public:
  CoopRewardUpdateNotify();
  virtual ~CoopRewardUpdateNotify();

  CoopRewardUpdateNotify(const CoopRewardUpdateNotify& from);

  inline CoopRewardUpdateNotify& operator=(const CoopRewardUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopRewardUpdateNotify(CoopRewardUpdateNotify&& from) noexcept
    : CoopRewardUpdateNotify() {
    *this = ::std::move(from);
  }

  inline CoopRewardUpdateNotify& operator=(CoopRewardUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopRewardUpdateNotify& default_instance();

  static inline const CoopRewardUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const CoopRewardUpdateNotify*>(
               &_CoopRewardUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CoopRewardUpdateNotify* other);
  friend void swap(CoopRewardUpdateNotify& a, CoopRewardUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopRewardUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopRewardUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopRewardUpdateNotify& from);
  void MergeFrom(const CoopRewardUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopRewardUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopRewardUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopRewardUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopRewardUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopRewardUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopRewardUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopRewardUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopRewardUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopRewardUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopRewardUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopRewardUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopRewardUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopRewardUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CoopReward reward_list = 7;
  int reward_list_size() const;
  void clear_reward_list();
  static const int kRewardListFieldNumber = 7;
  const ::proto::CoopReward& reward_list(int index) const;
  ::proto::CoopReward* mutable_reward_list(int index);
  ::proto::CoopReward* add_reward_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >*
      mutable_reward_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >&
      reward_list() const;

  // @@protoc_insertion_point(class_scope:proto.CoopRewardUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CoopReward > reward_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockCoopChapterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockCoopChapterReq) */ {
 public:
  UnlockCoopChapterReq();
  virtual ~UnlockCoopChapterReq();

  UnlockCoopChapterReq(const UnlockCoopChapterReq& from);

  inline UnlockCoopChapterReq& operator=(const UnlockCoopChapterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockCoopChapterReq(UnlockCoopChapterReq&& from) noexcept
    : UnlockCoopChapterReq() {
    *this = ::std::move(from);
  }

  inline UnlockCoopChapterReq& operator=(UnlockCoopChapterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockCoopChapterReq& default_instance();

  static inline const UnlockCoopChapterReq* internal_default_instance() {
    return reinterpret_cast<const UnlockCoopChapterReq*>(
               &_UnlockCoopChapterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(UnlockCoopChapterReq* other);
  friend void swap(UnlockCoopChapterReq& a, UnlockCoopChapterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockCoopChapterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockCoopChapterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockCoopChapterReq& from);
  void MergeFrom(const UnlockCoopChapterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockCoopChapterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnlockCoopChapterReq_CmdId CmdId;
  static const CmdId NONE =
    UnlockCoopChapterReq_CmdId_NONE;
  static const CmdId CMD_ID =
    UnlockCoopChapterReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnlockCoopChapterReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnlockCoopChapterReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    UnlockCoopChapterReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return UnlockCoopChapterReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnlockCoopChapterReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnlockCoopChapterReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnlockCoopChapterReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnlockCoopChapterReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnlockCoopChapterReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnlockCoopChapterReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 chapter_id = 3;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 3;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockCoopChapterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chapter_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockCoopChapterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockCoopChapterRsp) */ {
 public:
  UnlockCoopChapterRsp();
  virtual ~UnlockCoopChapterRsp();

  UnlockCoopChapterRsp(const UnlockCoopChapterRsp& from);

  inline UnlockCoopChapterRsp& operator=(const UnlockCoopChapterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockCoopChapterRsp(UnlockCoopChapterRsp&& from) noexcept
    : UnlockCoopChapterRsp() {
    *this = ::std::move(from);
  }

  inline UnlockCoopChapterRsp& operator=(UnlockCoopChapterRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockCoopChapterRsp& default_instance();

  static inline const UnlockCoopChapterRsp* internal_default_instance() {
    return reinterpret_cast<const UnlockCoopChapterRsp*>(
               &_UnlockCoopChapterRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(UnlockCoopChapterRsp* other);
  friend void swap(UnlockCoopChapterRsp& a, UnlockCoopChapterRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockCoopChapterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockCoopChapterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockCoopChapterRsp& from);
  void MergeFrom(const UnlockCoopChapterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockCoopChapterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnlockCoopChapterRsp_CmdId CmdId;
  static const CmdId NONE =
    UnlockCoopChapterRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    UnlockCoopChapterRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnlockCoopChapterRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnlockCoopChapterRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UnlockCoopChapterRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnlockCoopChapterRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnlockCoopChapterRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnlockCoopChapterRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnlockCoopChapterRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnlockCoopChapterRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnlockCoopChapterRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 chapter_id = 4;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 4;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // int32 retcode = 6;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockCoopChapterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopPointUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopPointUpdateNotify) */ {
 public:
  CoopPointUpdateNotify();
  virtual ~CoopPointUpdateNotify();

  CoopPointUpdateNotify(const CoopPointUpdateNotify& from);

  inline CoopPointUpdateNotify& operator=(const CoopPointUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopPointUpdateNotify(CoopPointUpdateNotify&& from) noexcept
    : CoopPointUpdateNotify() {
    *this = ::std::move(from);
  }

  inline CoopPointUpdateNotify& operator=(CoopPointUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopPointUpdateNotify& default_instance();

  static inline const CoopPointUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const CoopPointUpdateNotify*>(
               &_CoopPointUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CoopPointUpdateNotify* other);
  friend void swap(CoopPointUpdateNotify& a, CoopPointUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopPointUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopPointUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopPointUpdateNotify& from);
  void MergeFrom(const CoopPointUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopPointUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopPointUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopPointUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopPointUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopPointUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopPointUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopPointUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopPointUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopPointUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopPointUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopPointUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopPointUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopPointUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CoopPoint coop_point = 13;
  bool has_coop_point() const;
  void clear_coop_point();
  static const int kCoopPointFieldNumber = 13;
  const ::proto::CoopPoint& coop_point() const;
  ::proto::CoopPoint* mutable_coop_point();
  ::proto::CoopPoint* release_coop_point();
  void set_allocated_coop_point(::proto::CoopPoint* coop_point);

  // @@protoc_insertion_point(class_scope:proto.CoopPointUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CoopPoint* coop_point_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartCoopPointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StartCoopPointReq) */ {
 public:
  StartCoopPointReq();
  virtual ~StartCoopPointReq();

  StartCoopPointReq(const StartCoopPointReq& from);

  inline StartCoopPointReq& operator=(const StartCoopPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartCoopPointReq(StartCoopPointReq&& from) noexcept
    : StartCoopPointReq() {
    *this = ::std::move(from);
  }

  inline StartCoopPointReq& operator=(StartCoopPointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartCoopPointReq& default_instance();

  static inline const StartCoopPointReq* internal_default_instance() {
    return reinterpret_cast<const StartCoopPointReq*>(
               &_StartCoopPointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(StartCoopPointReq* other);
  friend void swap(StartCoopPointReq& a, StartCoopPointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartCoopPointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  StartCoopPointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartCoopPointReq& from);
  void MergeFrom(const StartCoopPointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartCoopPointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StartCoopPointReq_CmdId CmdId;
  static const CmdId NONE =
    StartCoopPointReq_CmdId_NONE;
  static const CmdId CMD_ID =
    StartCoopPointReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    StartCoopPointReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    StartCoopPointReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    StartCoopPointReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return StartCoopPointReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    StartCoopPointReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    StartCoopPointReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    StartCoopPointReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return StartCoopPointReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return StartCoopPointReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return StartCoopPointReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 coop_point = 7;
  void clear_coop_point();
  static const int kCoopPointFieldNumber = 7;
  ::google::protobuf::uint32 coop_point() const;
  void set_coop_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.StartCoopPointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 coop_point_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartCoopPointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StartCoopPointRsp) */ {
 public:
  StartCoopPointRsp();
  virtual ~StartCoopPointRsp();

  StartCoopPointRsp(const StartCoopPointRsp& from);

  inline StartCoopPointRsp& operator=(const StartCoopPointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartCoopPointRsp(StartCoopPointRsp&& from) noexcept
    : StartCoopPointRsp() {
    *this = ::std::move(from);
  }

  inline StartCoopPointRsp& operator=(StartCoopPointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartCoopPointRsp& default_instance();

  static inline const StartCoopPointRsp* internal_default_instance() {
    return reinterpret_cast<const StartCoopPointRsp*>(
               &_StartCoopPointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(StartCoopPointRsp* other);
  friend void swap(StartCoopPointRsp& a, StartCoopPointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartCoopPointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  StartCoopPointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartCoopPointRsp& from);
  void MergeFrom(const StartCoopPointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartCoopPointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StartCoopPointRsp_CmdId CmdId;
  static const CmdId NONE =
    StartCoopPointRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    StartCoopPointRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    StartCoopPointRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    StartCoopPointRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return StartCoopPointRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    StartCoopPointRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    StartCoopPointRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    StartCoopPointRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return StartCoopPointRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return StartCoopPointRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return StartCoopPointRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MainCoop start_main_coop = 15;
  bool has_start_main_coop() const;
  void clear_start_main_coop();
  static const int kStartMainCoopFieldNumber = 15;
  const ::proto::MainCoop& start_main_coop() const;
  ::proto::MainCoop* mutable_start_main_coop();
  ::proto::MainCoop* release_start_main_coop();
  void set_allocated_start_main_coop(::proto::MainCoop* start_main_coop);

  // uint32 coop_point = 13;
  void clear_coop_point();
  static const int kCoopPointFieldNumber = 13;
  ::google::protobuf::uint32 coop_point() const;
  void set_coop_point(::google::protobuf::uint32 value);

  // int32 retcode = 8;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 8;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_start = 9;
  void clear_is_start();
  static const int kIsStartFieldNumber = 9;
  bool is_start() const;
  void set_is_start(bool value);

  // @@protoc_insertion_point(class_scope:proto.StartCoopPointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MainCoop* start_main_coop_;
  ::google::protobuf::uint32 coop_point_;
  ::google::protobuf::int32 retcode_;
  bool is_start_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelCoopTaskReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CancelCoopTaskReq) */ {
 public:
  CancelCoopTaskReq();
  virtual ~CancelCoopTaskReq();

  CancelCoopTaskReq(const CancelCoopTaskReq& from);

  inline CancelCoopTaskReq& operator=(const CancelCoopTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelCoopTaskReq(CancelCoopTaskReq&& from) noexcept
    : CancelCoopTaskReq() {
    *this = ::std::move(from);
  }

  inline CancelCoopTaskReq& operator=(CancelCoopTaskReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelCoopTaskReq& default_instance();

  static inline const CancelCoopTaskReq* internal_default_instance() {
    return reinterpret_cast<const CancelCoopTaskReq*>(
               &_CancelCoopTaskReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CancelCoopTaskReq* other);
  friend void swap(CancelCoopTaskReq& a, CancelCoopTaskReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelCoopTaskReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelCoopTaskReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelCoopTaskReq& from);
  void MergeFrom(const CancelCoopTaskReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelCoopTaskReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CancelCoopTaskReq_CmdId CmdId;
  static const CmdId NONE =
    CancelCoopTaskReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CancelCoopTaskReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CancelCoopTaskReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CancelCoopTaskReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CancelCoopTaskReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CancelCoopTaskReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CancelCoopTaskReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CancelCoopTaskReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CancelCoopTaskReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CancelCoopTaskReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CancelCoopTaskReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CancelCoopTaskReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 chapter_id = 13;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 13;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CancelCoopTaskReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chapter_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelCoopTaskRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CancelCoopTaskRsp) */ {
 public:
  CancelCoopTaskRsp();
  virtual ~CancelCoopTaskRsp();

  CancelCoopTaskRsp(const CancelCoopTaskRsp& from);

  inline CancelCoopTaskRsp& operator=(const CancelCoopTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelCoopTaskRsp(CancelCoopTaskRsp&& from) noexcept
    : CancelCoopTaskRsp() {
    *this = ::std::move(from);
  }

  inline CancelCoopTaskRsp& operator=(CancelCoopTaskRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelCoopTaskRsp& default_instance();

  static inline const CancelCoopTaskRsp* internal_default_instance() {
    return reinterpret_cast<const CancelCoopTaskRsp*>(
               &_CancelCoopTaskRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CancelCoopTaskRsp* other);
  friend void swap(CancelCoopTaskRsp& a, CancelCoopTaskRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelCoopTaskRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelCoopTaskRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelCoopTaskRsp& from);
  void MergeFrom(const CancelCoopTaskRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelCoopTaskRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CancelCoopTaskRsp_CmdId CmdId;
  static const CmdId NONE =
    CancelCoopTaskRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CancelCoopTaskRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CancelCoopTaskRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CancelCoopTaskRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CancelCoopTaskRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CancelCoopTaskRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CancelCoopTaskRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CancelCoopTaskRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CancelCoopTaskRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CancelCoopTaskRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CancelCoopTaskRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 chapter_id = 1;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // int32 retcode = 5;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CancelCoopTaskRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCoopRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCoopRewardReq) */ {
 public:
  TakeCoopRewardReq();
  virtual ~TakeCoopRewardReq();

  TakeCoopRewardReq(const TakeCoopRewardReq& from);

  inline TakeCoopRewardReq& operator=(const TakeCoopRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCoopRewardReq(TakeCoopRewardReq&& from) noexcept
    : TakeCoopRewardReq() {
    *this = ::std::move(from);
  }

  inline TakeCoopRewardReq& operator=(TakeCoopRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCoopRewardReq& default_instance();

  static inline const TakeCoopRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakeCoopRewardReq*>(
               &_TakeCoopRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TakeCoopRewardReq* other);
  friend void swap(TakeCoopRewardReq& a, TakeCoopRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCoopRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCoopRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCoopRewardReq& from);
  void MergeFrom(const TakeCoopRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCoopRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeCoopRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakeCoopRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeCoopRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeCoopRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeCoopRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeCoopRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeCoopRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeCoopRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeCoopRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeCoopRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeCoopRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeCoopRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeCoopRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 reward_config_id = 6;
  void clear_reward_config_id();
  static const int kRewardConfigIdFieldNumber = 6;
  ::google::protobuf::uint32 reward_config_id() const;
  void set_reward_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCoopRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_config_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCoopRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCoopRewardRsp) */ {
 public:
  TakeCoopRewardRsp();
  virtual ~TakeCoopRewardRsp();

  TakeCoopRewardRsp(const TakeCoopRewardRsp& from);

  inline TakeCoopRewardRsp& operator=(const TakeCoopRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCoopRewardRsp(TakeCoopRewardRsp&& from) noexcept
    : TakeCoopRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakeCoopRewardRsp& operator=(TakeCoopRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCoopRewardRsp& default_instance();

  static inline const TakeCoopRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakeCoopRewardRsp*>(
               &_TakeCoopRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TakeCoopRewardRsp* other);
  friend void swap(TakeCoopRewardRsp& a, TakeCoopRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCoopRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCoopRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCoopRewardRsp& from);
  void MergeFrom(const TakeCoopRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCoopRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeCoopRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeCoopRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeCoopRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeCoopRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeCoopRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeCoopRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeCoopRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeCoopRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeCoopRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeCoopRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeCoopRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeCoopRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 reward_config_id = 1;
  void clear_reward_config_id();
  static const int kRewardConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 reward_config_id() const;
  void set_reward_config_id(::google::protobuf::uint32 value);

  // int32 retcode = 9;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCoopRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_config_id_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopProgressUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopProgressUpdateNotify) */ {
 public:
  CoopProgressUpdateNotify();
  virtual ~CoopProgressUpdateNotify();

  CoopProgressUpdateNotify(const CoopProgressUpdateNotify& from);

  inline CoopProgressUpdateNotify& operator=(const CoopProgressUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopProgressUpdateNotify(CoopProgressUpdateNotify&& from) noexcept
    : CoopProgressUpdateNotify() {
    *this = ::std::move(from);
  }

  inline CoopProgressUpdateNotify& operator=(CoopProgressUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopProgressUpdateNotify& default_instance();

  static inline const CoopProgressUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const CoopProgressUpdateNotify*>(
               &_CoopProgressUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CoopProgressUpdateNotify* other);
  friend void swap(CoopProgressUpdateNotify& a, CoopProgressUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopProgressUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopProgressUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopProgressUpdateNotify& from);
  void MergeFrom(const CoopProgressUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopProgressUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopProgressUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopProgressUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopProgressUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopProgressUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopProgressUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopProgressUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopProgressUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopProgressUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopProgressUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopProgressUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopProgressUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopProgressUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 cur_coop_point = 11;
  void clear_cur_coop_point();
  static const int kCurCoopPointFieldNumber = 11;
  ::google::protobuf::uint32 cur_coop_point() const;
  void set_cur_coop_point(::google::protobuf::uint32 value);

  // bool is_have_progress = 12;
  void clear_is_have_progress();
  static const int kIsHaveProgressFieldNumber = 12;
  bool is_have_progress() const;
  void set_is_have_progress(bool value);

  // @@protoc_insertion_point(class_scope:proto.CoopProgressUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cur_coop_point_;
  bool is_have_progress_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveCoopDialogReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveCoopDialogReq) */ {
 public:
  SaveCoopDialogReq();
  virtual ~SaveCoopDialogReq();

  SaveCoopDialogReq(const SaveCoopDialogReq& from);

  inline SaveCoopDialogReq& operator=(const SaveCoopDialogReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveCoopDialogReq(SaveCoopDialogReq&& from) noexcept
    : SaveCoopDialogReq() {
    *this = ::std::move(from);
  }

  inline SaveCoopDialogReq& operator=(SaveCoopDialogReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveCoopDialogReq& default_instance();

  static inline const SaveCoopDialogReq* internal_default_instance() {
    return reinterpret_cast<const SaveCoopDialogReq*>(
               &_SaveCoopDialogReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SaveCoopDialogReq* other);
  friend void swap(SaveCoopDialogReq& a, SaveCoopDialogReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveCoopDialogReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveCoopDialogReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveCoopDialogReq& from);
  void MergeFrom(const SaveCoopDialogReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveCoopDialogReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SaveCoopDialogReq_CmdId CmdId;
  static const CmdId NONE =
    SaveCoopDialogReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveCoopDialogReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveCoopDialogReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveCoopDialogReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SaveCoopDialogReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SaveCoopDialogReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveCoopDialogReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveCoopDialogReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveCoopDialogReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveCoopDialogReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveCoopDialogReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveCoopDialogReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 dialog_id = 6;
  void clear_dialog_id();
  static const int kDialogIdFieldNumber = 6;
  ::google::protobuf::uint32 dialog_id() const;
  void set_dialog_id(::google::protobuf::uint32 value);

  // uint32 main_coop_id = 11;
  void clear_main_coop_id();
  static const int kMainCoopIdFieldNumber = 11;
  ::google::protobuf::uint32 main_coop_id() const;
  void set_main_coop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveCoopDialogReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dialog_id_;
  ::google::protobuf::uint32 main_coop_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveCoopDialogRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SaveCoopDialogRsp) */ {
 public:
  SaveCoopDialogRsp();
  virtual ~SaveCoopDialogRsp();

  SaveCoopDialogRsp(const SaveCoopDialogRsp& from);

  inline SaveCoopDialogRsp& operator=(const SaveCoopDialogRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveCoopDialogRsp(SaveCoopDialogRsp&& from) noexcept
    : SaveCoopDialogRsp() {
    *this = ::std::move(from);
  }

  inline SaveCoopDialogRsp& operator=(SaveCoopDialogRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveCoopDialogRsp& default_instance();

  static inline const SaveCoopDialogRsp* internal_default_instance() {
    return reinterpret_cast<const SaveCoopDialogRsp*>(
               &_SaveCoopDialogRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SaveCoopDialogRsp* other);
  friend void swap(SaveCoopDialogRsp& a, SaveCoopDialogRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveCoopDialogRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SaveCoopDialogRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SaveCoopDialogRsp& from);
  void MergeFrom(const SaveCoopDialogRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SaveCoopDialogRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SaveCoopDialogRsp_CmdId CmdId;
  static const CmdId NONE =
    SaveCoopDialogRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SaveCoopDialogRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SaveCoopDialogRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SaveCoopDialogRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SaveCoopDialogRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SaveCoopDialogRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SaveCoopDialogRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SaveCoopDialogRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SaveCoopDialogRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SaveCoopDialogRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SaveCoopDialogRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 main_coop_id = 10;
  void clear_main_coop_id();
  static const int kMainCoopIdFieldNumber = 10;
  ::google::protobuf::uint32 main_coop_id() const;
  void set_main_coop_id(::google::protobuf::uint32 value);

  // int32 retcode = 7;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 7;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 dialog_id = 8;
  void clear_dialog_id();
  static const int kDialogIdFieldNumber = 8;
  ::google::protobuf::uint32 dialog_id() const;
  void set_dialog_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SaveCoopDialogRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 main_coop_id_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 dialog_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoopCgShowNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CoopCgShowNotify) */ {
 public:
  CoopCgShowNotify();
  virtual ~CoopCgShowNotify();

  CoopCgShowNotify(const CoopCgShowNotify& from);

  inline CoopCgShowNotify& operator=(const CoopCgShowNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoopCgShowNotify(CoopCgShowNotify&& from) noexcept
    : CoopCgShowNotify() {
    *this = ::std::move(from);
  }

  inline CoopCgShowNotify& operator=(CoopCgShowNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopCgShowNotify& default_instance();

  static inline const CoopCgShowNotify* internal_default_instance() {
    return reinterpret_cast<const CoopCgShowNotify*>(
               &_CoopCgShowNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CoopCgShowNotify* other);
  friend void swap(CoopCgShowNotify& a, CoopCgShowNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoopCgShowNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CoopCgShowNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CoopCgShowNotify& from);
  void MergeFrom(const CoopCgShowNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CoopCgShowNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CoopCgShowNotify_CmdId CmdId;
  static const CmdId NONE =
    CoopCgShowNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CoopCgShowNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CoopCgShowNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CoopCgShowNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CoopCgShowNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CoopCgShowNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CoopCgShowNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CoopCgShowNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CoopCgShowNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CoopCgShowNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CoopCgShowNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 cg_list = 10;
  int cg_list_size() const;
  void clear_cg_list();
  static const int kCgListFieldNumber = 10;
  ::google::protobuf::uint32 cg_list(int index) const;
  void set_cg_list(int index, ::google::protobuf::uint32 value);
  void add_cg_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cg_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cg_list();

  // @@protoc_insertion_point(class_scope:proto.CoopCgShowNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cg_list_;
  mutable int _cg_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetCoopChapterViewedReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetCoopChapterViewedReq) */ {
 public:
  SetCoopChapterViewedReq();
  virtual ~SetCoopChapterViewedReq();

  SetCoopChapterViewedReq(const SetCoopChapterViewedReq& from);

  inline SetCoopChapterViewedReq& operator=(const SetCoopChapterViewedReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetCoopChapterViewedReq(SetCoopChapterViewedReq&& from) noexcept
    : SetCoopChapterViewedReq() {
    *this = ::std::move(from);
  }

  inline SetCoopChapterViewedReq& operator=(SetCoopChapterViewedReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetCoopChapterViewedReq& default_instance();

  static inline const SetCoopChapterViewedReq* internal_default_instance() {
    return reinterpret_cast<const SetCoopChapterViewedReq*>(
               &_SetCoopChapterViewedReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SetCoopChapterViewedReq* other);
  friend void swap(SetCoopChapterViewedReq& a, SetCoopChapterViewedReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetCoopChapterViewedReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetCoopChapterViewedReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetCoopChapterViewedReq& from);
  void MergeFrom(const SetCoopChapterViewedReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetCoopChapterViewedReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetCoopChapterViewedReq_CmdId CmdId;
  static const CmdId NONE =
    SetCoopChapterViewedReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetCoopChapterViewedReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetCoopChapterViewedReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetCoopChapterViewedReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetCoopChapterViewedReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetCoopChapterViewedReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetCoopChapterViewedReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetCoopChapterViewedReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetCoopChapterViewedReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetCoopChapterViewedReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetCoopChapterViewedReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetCoopChapterViewedReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 chapter_id = 2;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetCoopChapterViewedReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chapter_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetCoopChapterViewedRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetCoopChapterViewedRsp) */ {
 public:
  SetCoopChapterViewedRsp();
  virtual ~SetCoopChapterViewedRsp();

  SetCoopChapterViewedRsp(const SetCoopChapterViewedRsp& from);

  inline SetCoopChapterViewedRsp& operator=(const SetCoopChapterViewedRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetCoopChapterViewedRsp(SetCoopChapterViewedRsp&& from) noexcept
    : SetCoopChapterViewedRsp() {
    *this = ::std::move(from);
  }

  inline SetCoopChapterViewedRsp& operator=(SetCoopChapterViewedRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetCoopChapterViewedRsp& default_instance();

  static inline const SetCoopChapterViewedRsp* internal_default_instance() {
    return reinterpret_cast<const SetCoopChapterViewedRsp*>(
               &_SetCoopChapterViewedRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SetCoopChapterViewedRsp* other);
  friend void swap(SetCoopChapterViewedRsp& a, SetCoopChapterViewedRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetCoopChapterViewedRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetCoopChapterViewedRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetCoopChapterViewedRsp& from);
  void MergeFrom(const SetCoopChapterViewedRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetCoopChapterViewedRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetCoopChapterViewedRsp_CmdId CmdId;
  static const CmdId NONE =
    SetCoopChapterViewedRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetCoopChapterViewedRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetCoopChapterViewedRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetCoopChapterViewedRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetCoopChapterViewedRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetCoopChapterViewedRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetCoopChapterViewedRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetCoopChapterViewedRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetCoopChapterViewedRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetCoopChapterViewedRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetCoopChapterViewedRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 2;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 chapter_id = 11;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 11;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetCoopChapterViewedRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 chapter_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MainCoopFailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MainCoopFailNotify) */ {
 public:
  MainCoopFailNotify();
  virtual ~MainCoopFailNotify();

  MainCoopFailNotify(const MainCoopFailNotify& from);

  inline MainCoopFailNotify& operator=(const MainCoopFailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MainCoopFailNotify(MainCoopFailNotify&& from) noexcept
    : MainCoopFailNotify() {
    *this = ::std::move(from);
  }

  inline MainCoopFailNotify& operator=(MainCoopFailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MainCoopFailNotify& default_instance();

  static inline const MainCoopFailNotify* internal_default_instance() {
    return reinterpret_cast<const MainCoopFailNotify*>(
               &_MainCoopFailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(MainCoopFailNotify* other);
  friend void swap(MainCoopFailNotify& a, MainCoopFailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MainCoopFailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MainCoopFailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MainCoopFailNotify& from);
  void MergeFrom(const MainCoopFailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MainCoopFailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MainCoopFailNotify_CmdId CmdId;
  static const CmdId NONE =
    MainCoopFailNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MainCoopFailNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MainCoopFailNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MainCoopFailNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MainCoopFailNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MainCoopFailNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MainCoopFailNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MainCoopFailNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MainCoopFailNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MainCoopFailNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MainCoopFailNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string textmap_id = 7;
  void clear_textmap_id();
  static const int kTextmapIdFieldNumber = 7;
  const ::std::string& textmap_id() const;
  void set_textmap_id(const ::std::string& value);
  #if LANG_CXX11
  void set_textmap_id(::std::string&& value);
  #endif
  void set_textmap_id(const char* value);
  void set_textmap_id(const char* value, size_t size);
  ::std::string* mutable_textmap_id();
  ::std::string* release_textmap_id();
  void set_allocated_textmap_id(::std::string* textmap_id);

  // uint32 chapter_id = 15;
  void clear_chapter_id();
  static const int kChapterIdFieldNumber = 15;
  ::google::protobuf::uint32 chapter_id() const;
  void set_chapter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MainCoopFailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr textmap_id_;
  ::google::protobuf::uint32 chapter_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fcoop_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MainCoop

// map<uint32, uint32> seen_ending_map = 13;
inline int MainCoop::seen_ending_map_size() const {
  return seen_ending_map_.size();
}
inline void MainCoop::clear_seen_ending_map() {
  seen_ending_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MainCoop::seen_ending_map() const {
  // @@protoc_insertion_point(field_map:proto.MainCoop.seen_ending_map)
  return seen_ending_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MainCoop::mutable_seen_ending_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MainCoop.seen_ending_map)
  return seen_ending_map_.MutableMap();
}

// map<uint32, int32> normal_var_map = 4;
inline int MainCoop::normal_var_map_size() const {
  return normal_var_map_.size();
}
inline void MainCoop::clear_normal_var_map() {
  normal_var_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
MainCoop::normal_var_map() const {
  // @@protoc_insertion_point(field_map:proto.MainCoop.normal_var_map)
  return normal_var_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
MainCoop::mutable_normal_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MainCoop.normal_var_map)
  return normal_var_map_.MutableMap();
}

// uint32 self_confidence = 5;
inline void MainCoop::clear_self_confidence() {
  self_confidence_ = 0u;
}
inline ::google::protobuf::uint32 MainCoop::self_confidence() const {
  // @@protoc_insertion_point(field_get:proto.MainCoop.self_confidence)
  return self_confidence_;
}
inline void MainCoop::set_self_confidence(::google::protobuf::uint32 value) {
  
  self_confidence_ = value;
  // @@protoc_insertion_point(field_set:proto.MainCoop.self_confidence)
}

// repeated uint32 save_point_id_list = 1;
inline int MainCoop::save_point_id_list_size() const {
  return save_point_id_list_.size();
}
inline void MainCoop::clear_save_point_id_list() {
  save_point_id_list_.Clear();
}
inline ::google::protobuf::uint32 MainCoop::save_point_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MainCoop.save_point_id_list)
  return save_point_id_list_.Get(index);
}
inline void MainCoop::set_save_point_id_list(int index, ::google::protobuf::uint32 value) {
  save_point_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MainCoop.save_point_id_list)
}
inline void MainCoop::add_save_point_id_list(::google::protobuf::uint32 value) {
  save_point_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MainCoop.save_point_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MainCoop::save_point_id_list() const {
  // @@protoc_insertion_point(field_list:proto.MainCoop.save_point_id_list)
  return save_point_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MainCoop::mutable_save_point_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MainCoop.save_point_id_list)
  return &save_point_id_list_;
}

// .proto.MainCoop.Status status = 6;
inline void MainCoop::clear_status() {
  status_ = 0;
}
inline ::proto::MainCoop_Status MainCoop::status() const {
  // @@protoc_insertion_point(field_get:proto.MainCoop.status)
  return static_cast< ::proto::MainCoop_Status >(status_);
}
inline void MainCoop::set_status(::proto::MainCoop_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.MainCoop.status)
}

// map<uint32, int32> temp_var_map = 11;
inline int MainCoop::temp_var_map_size() const {
  return temp_var_map_.size();
}
inline void MainCoop::clear_temp_var_map() {
  temp_var_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
MainCoop::temp_var_map() const {
  // @@protoc_insertion_point(field_map:proto.MainCoop.temp_var_map)
  return temp_var_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
MainCoop::mutable_temp_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MainCoop.temp_var_map)
  return temp_var_map_.MutableMap();
}

// uint32 id = 9;
inline void MainCoop::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MainCoop::id() const {
  // @@protoc_insertion_point(field_get:proto.MainCoop.id)
  return id_;
}
inline void MainCoop::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MainCoop.id)
}

// -------------------------------------------------------------------

// AllCoopInfoNotify

// repeated .proto.MainCoop main_coop_list = 14;
inline int AllCoopInfoNotify::main_coop_list_size() const {
  return main_coop_list_.size();
}
inline void AllCoopInfoNotify::clear_main_coop_list() {
  main_coop_list_.Clear();
}
inline const ::proto::MainCoop& AllCoopInfoNotify::main_coop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllCoopInfoNotify.main_coop_list)
  return main_coop_list_.Get(index);
}
inline ::proto::MainCoop* AllCoopInfoNotify::mutable_main_coop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllCoopInfoNotify.main_coop_list)
  return main_coop_list_.Mutable(index);
}
inline ::proto::MainCoop* AllCoopInfoNotify::add_main_coop_list() {
  // @@protoc_insertion_point(field_add:proto.AllCoopInfoNotify.main_coop_list)
  return main_coop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >*
AllCoopInfoNotify::mutable_main_coop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllCoopInfoNotify.main_coop_list)
  return &main_coop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >&
AllCoopInfoNotify::main_coop_list() const {
  // @@protoc_insertion_point(field_list:proto.AllCoopInfoNotify.main_coop_list)
  return main_coop_list_;
}

// -------------------------------------------------------------------

// MainCoopUpdateNotify

// repeated .proto.MainCoop main_coop_list = 5;
inline int MainCoopUpdateNotify::main_coop_list_size() const {
  return main_coop_list_.size();
}
inline void MainCoopUpdateNotify::clear_main_coop_list() {
  main_coop_list_.Clear();
}
inline const ::proto::MainCoop& MainCoopUpdateNotify::main_coop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MainCoopUpdateNotify.main_coop_list)
  return main_coop_list_.Get(index);
}
inline ::proto::MainCoop* MainCoopUpdateNotify::mutable_main_coop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MainCoopUpdateNotify.main_coop_list)
  return main_coop_list_.Mutable(index);
}
inline ::proto::MainCoop* MainCoopUpdateNotify::add_main_coop_list() {
  // @@protoc_insertion_point(field_add:proto.MainCoopUpdateNotify.main_coop_list)
  return main_coop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >*
MainCoopUpdateNotify::mutable_main_coop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MainCoopUpdateNotify.main_coop_list)
  return &main_coop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MainCoop >&
MainCoopUpdateNotify::main_coop_list() const {
  // @@protoc_insertion_point(field_list:proto.MainCoopUpdateNotify.main_coop_list)
  return main_coop_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SaveMainCoopReq

// map<uint32, int32> normal_var_map = 15;
inline int SaveMainCoopReq::normal_var_map_size() const {
  return normal_var_map_.size();
}
inline void SaveMainCoopReq::clear_normal_var_map() {
  normal_var_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
SaveMainCoopReq::normal_var_map() const {
  // @@protoc_insertion_point(field_map:proto.SaveMainCoopReq.normal_var_map)
  return normal_var_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
SaveMainCoopReq::mutable_normal_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SaveMainCoopReq.normal_var_map)
  return normal_var_map_.MutableMap();
}

// uint32 self_confidence = 2;
inline void SaveMainCoopReq::clear_self_confidence() {
  self_confidence_ = 0u;
}
inline ::google::protobuf::uint32 SaveMainCoopReq::self_confidence() const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopReq.self_confidence)
  return self_confidence_;
}
inline void SaveMainCoopReq::set_self_confidence(::google::protobuf::uint32 value) {
  
  self_confidence_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopReq.self_confidence)
}

// uint32 save_point_id = 1;
inline void SaveMainCoopReq::clear_save_point_id() {
  save_point_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveMainCoopReq::save_point_id() const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopReq.save_point_id)
  return save_point_id_;
}
inline void SaveMainCoopReq::set_save_point_id(::google::protobuf::uint32 value) {
  
  save_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopReq.save_point_id)
}

// map<uint32, int32> temp_var_map = 8;
inline int SaveMainCoopReq::temp_var_map_size() const {
  return temp_var_map_.size();
}
inline void SaveMainCoopReq::clear_temp_var_map() {
  temp_var_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
SaveMainCoopReq::temp_var_map() const {
  // @@protoc_insertion_point(field_map:proto.SaveMainCoopReq.temp_var_map)
  return temp_var_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
SaveMainCoopReq::mutable_temp_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SaveMainCoopReq.temp_var_map)
  return temp_var_map_.MutableMap();
}

// uint32 id = 3;
inline void SaveMainCoopReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SaveMainCoopReq::id() const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopReq.id)
  return id_;
}
inline void SaveMainCoopReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopReq.id)
}

// -------------------------------------------------------------------

// SaveMainCoopRsp

// int32 retcode = 2;
inline void SaveMainCoopRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SaveMainCoopRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopRsp.retcode)
  return retcode_;
}
inline void SaveMainCoopRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopRsp.retcode)
}

// repeated uint32 save_point_id_list = 15;
inline int SaveMainCoopRsp::save_point_id_list_size() const {
  return save_point_id_list_.size();
}
inline void SaveMainCoopRsp::clear_save_point_id_list() {
  save_point_id_list_.Clear();
}
inline ::google::protobuf::uint32 SaveMainCoopRsp::save_point_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopRsp.save_point_id_list)
  return save_point_id_list_.Get(index);
}
inline void SaveMainCoopRsp::set_save_point_id_list(int index, ::google::protobuf::uint32 value) {
  save_point_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopRsp.save_point_id_list)
}
inline void SaveMainCoopRsp::add_save_point_id_list(::google::protobuf::uint32 value) {
  save_point_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SaveMainCoopRsp.save_point_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SaveMainCoopRsp::save_point_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SaveMainCoopRsp.save_point_id_list)
  return save_point_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SaveMainCoopRsp::mutable_save_point_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SaveMainCoopRsp.save_point_id_list)
  return &save_point_id_list_;
}

// uint32 id = 14;
inline void SaveMainCoopRsp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SaveMainCoopRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.SaveMainCoopRsp.id)
  return id_;
}
inline void SaveMainCoopRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveMainCoopRsp.id)
}

// -------------------------------------------------------------------

// FinishMainCoopReq

// uint32 id = 10;
inline void FinishMainCoopReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 FinishMainCoopReq::id() const {
  // @@protoc_insertion_point(field_get:proto.FinishMainCoopReq.id)
  return id_;
}
inline void FinishMainCoopReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishMainCoopReq.id)
}

// uint32 ending_save_point_id = 1;
inline void FinishMainCoopReq::clear_ending_save_point_id() {
  ending_save_point_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishMainCoopReq::ending_save_point_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishMainCoopReq.ending_save_point_id)
  return ending_save_point_id_;
}
inline void FinishMainCoopReq::set_ending_save_point_id(::google::protobuf::uint32 value) {
  
  ending_save_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishMainCoopReq.ending_save_point_id)
}

// -------------------------------------------------------------------

// FinishMainCoopRsp

// uint32 id = 2;
inline void FinishMainCoopRsp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 FinishMainCoopRsp::id() const {
  // @@protoc_insertion_point(field_get:proto.FinishMainCoopRsp.id)
  return id_;
}
inline void FinishMainCoopRsp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishMainCoopRsp.id)
}

// uint32 ending_save_point_id = 6;
inline void FinishMainCoopRsp::clear_ending_save_point_id() {
  ending_save_point_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishMainCoopRsp::ending_save_point_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishMainCoopRsp.ending_save_point_id)
  return ending_save_point_id_;
}
inline void FinishMainCoopRsp::set_ending_save_point_id(::google::protobuf::uint32 value) {
  
  ending_save_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishMainCoopRsp.ending_save_point_id)
}

// int32 retcode = 4;
inline void FinishMainCoopRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 FinishMainCoopRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FinishMainCoopRsp.retcode)
  return retcode_;
}
inline void FinishMainCoopRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishMainCoopRsp.retcode)
}

// -------------------------------------------------------------------

// CoopPoint

// uint32 self_confidence = 15;
inline void CoopPoint::clear_self_confidence() {
  self_confidence_ = 0u;
}
inline ::google::protobuf::uint32 CoopPoint::self_confidence() const {
  // @@protoc_insertion_point(field_get:proto.CoopPoint.self_confidence)
  return self_confidence_;
}
inline void CoopPoint::set_self_confidence(::google::protobuf::uint32 value) {
  
  self_confidence_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopPoint.self_confidence)
}

// .proto.CoopPoint.State state = 10;
inline void CoopPoint::clear_state() {
  state_ = 0;
}
inline ::proto::CoopPoint_State CoopPoint::state() const {
  // @@protoc_insertion_point(field_get:proto.CoopPoint.state)
  return static_cast< ::proto::CoopPoint_State >(state_);
}
inline void CoopPoint::set_state(::proto::CoopPoint_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopPoint.state)
}

// uint32 id = 14;
inline void CoopPoint::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CoopPoint::id() const {
  // @@protoc_insertion_point(field_get:proto.CoopPoint.id)
  return id_;
}
inline void CoopPoint::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopPoint.id)
}

// -------------------------------------------------------------------

// CoopReward

// uint32 id = 5;
inline void CoopReward::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CoopReward::id() const {
  // @@protoc_insertion_point(field_get:proto.CoopReward.id)
  return id_;
}
inline void CoopReward::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopReward.id)
}

// .proto.CoopReward.State state = 6;
inline void CoopReward::clear_state() {
  state_ = 0;
}
inline ::proto::CoopReward_State CoopReward::state() const {
  // @@protoc_insertion_point(field_get:proto.CoopReward.state)
  return static_cast< ::proto::CoopReward_State >(state_);
}
inline void CoopReward::set_state(::proto::CoopReward_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopReward.state)
}

// -------------------------------------------------------------------

// CoopCg

// bool is_unlock = 14;
inline void CoopCg::clear_is_unlock() {
  is_unlock_ = false;
}
inline bool CoopCg::is_unlock() const {
  // @@protoc_insertion_point(field_get:proto.CoopCg.is_unlock)
  return is_unlock_;
}
inline void CoopCg::set_is_unlock(bool value) {
  
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopCg.is_unlock)
}

// uint32 id = 8;
inline void CoopCg::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CoopCg::id() const {
  // @@protoc_insertion_point(field_get:proto.CoopCg.id)
  return id_;
}
inline void CoopCg::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopCg.id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CoopChapter

// repeated .proto.CoopCg coop_cg_list = 1;
inline int CoopChapter::coop_cg_list_size() const {
  return coop_cg_list_.size();
}
inline void CoopChapter::clear_coop_cg_list() {
  coop_cg_list_.Clear();
}
inline const ::proto::CoopCg& CoopChapter::coop_cg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.coop_cg_list)
  return coop_cg_list_.Get(index);
}
inline ::proto::CoopCg* CoopChapter::mutable_coop_cg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopChapter.coop_cg_list)
  return coop_cg_list_.Mutable(index);
}
inline ::proto::CoopCg* CoopChapter::add_coop_cg_list() {
  // @@protoc_insertion_point(field_add:proto.CoopChapter.coop_cg_list)
  return coop_cg_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopCg >*
CoopChapter::mutable_coop_cg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapter.coop_cg_list)
  return &coop_cg_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopCg >&
CoopChapter::coop_cg_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapter.coop_cg_list)
  return coop_cg_list_;
}

// uint32 id = 2;
inline void CoopChapter::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CoopChapter::id() const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.id)
  return id_;
}
inline void CoopChapter::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopChapter.id)
}

// repeated .proto.CoopPoint coop_point_list = 11;
inline int CoopChapter::coop_point_list_size() const {
  return coop_point_list_.size();
}
inline void CoopChapter::clear_coop_point_list() {
  coop_point_list_.Clear();
}
inline const ::proto::CoopPoint& CoopChapter::coop_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.coop_point_list)
  return coop_point_list_.Get(index);
}
inline ::proto::CoopPoint* CoopChapter::mutable_coop_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopChapter.coop_point_list)
  return coop_point_list_.Mutable(index);
}
inline ::proto::CoopPoint* CoopChapter::add_coop_point_list() {
  // @@protoc_insertion_point(field_add:proto.CoopChapter.coop_point_list)
  return coop_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopPoint >*
CoopChapter::mutable_coop_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapter.coop_point_list)
  return &coop_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopPoint >&
CoopChapter::coop_point_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapter.coop_point_list)
  return coop_point_list_;
}

// repeated uint32 finish_dialog_list = 10;
inline int CoopChapter::finish_dialog_list_size() const {
  return finish_dialog_list_.size();
}
inline void CoopChapter::clear_finish_dialog_list() {
  finish_dialog_list_.Clear();
}
inline ::google::protobuf::uint32 CoopChapter::finish_dialog_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.finish_dialog_list)
  return finish_dialog_list_.Get(index);
}
inline void CoopChapter::set_finish_dialog_list(int index, ::google::protobuf::uint32 value) {
  finish_dialog_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CoopChapter.finish_dialog_list)
}
inline void CoopChapter::add_finish_dialog_list(::google::protobuf::uint32 value) {
  finish_dialog_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CoopChapter.finish_dialog_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoopChapter::finish_dialog_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapter.finish_dialog_list)
  return finish_dialog_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoopChapter::mutable_finish_dialog_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapter.finish_dialog_list)
  return &finish_dialog_list_;
}

// uint32 finished_end_count = 14;
inline void CoopChapter::clear_finished_end_count() {
  finished_end_count_ = 0u;
}
inline ::google::protobuf::uint32 CoopChapter::finished_end_count() const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.finished_end_count)
  return finished_end_count_;
}
inline void CoopChapter::set_finished_end_count(::google::protobuf::uint32 value) {
  
  finished_end_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopChapter.finished_end_count)
}

// uint32 total_end_count = 7;
inline void CoopChapter::clear_total_end_count() {
  total_end_count_ = 0u;
}
inline ::google::protobuf::uint32 CoopChapter::total_end_count() const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.total_end_count)
  return total_end_count_;
}
inline void CoopChapter::set_total_end_count(::google::protobuf::uint32 value) {
  
  total_end_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopChapter.total_end_count)
}

// repeated .proto.CoopReward coop_reward_list = 5;
inline int CoopChapter::coop_reward_list_size() const {
  return coop_reward_list_.size();
}
inline void CoopChapter::clear_coop_reward_list() {
  coop_reward_list_.Clear();
}
inline const ::proto::CoopReward& CoopChapter::coop_reward_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.coop_reward_list)
  return coop_reward_list_.Get(index);
}
inline ::proto::CoopReward* CoopChapter::mutable_coop_reward_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopChapter.coop_reward_list)
  return coop_reward_list_.Mutable(index);
}
inline ::proto::CoopReward* CoopChapter::add_coop_reward_list() {
  // @@protoc_insertion_point(field_add:proto.CoopChapter.coop_reward_list)
  return coop_reward_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >*
CoopChapter::mutable_coop_reward_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapter.coop_reward_list)
  return &coop_reward_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >&
CoopChapter::coop_reward_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapter.coop_reward_list)
  return coop_reward_list_;
}

// repeated uint32 lock_reason_list = 12;
inline int CoopChapter::lock_reason_list_size() const {
  return lock_reason_list_.size();
}
inline void CoopChapter::clear_lock_reason_list() {
  lock_reason_list_.Clear();
}
inline ::google::protobuf::uint32 CoopChapter::lock_reason_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.lock_reason_list)
  return lock_reason_list_.Get(index);
}
inline void CoopChapter::set_lock_reason_list(int index, ::google::protobuf::uint32 value) {
  lock_reason_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CoopChapter.lock_reason_list)
}
inline void CoopChapter::add_lock_reason_list(::google::protobuf::uint32 value) {
  lock_reason_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CoopChapter.lock_reason_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoopChapter::lock_reason_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapter.lock_reason_list)
  return lock_reason_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoopChapter::mutable_lock_reason_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapter.lock_reason_list)
  return &lock_reason_list_;
}

// .proto.CoopChapter.State state = 4;
inline void CoopChapter::clear_state() {
  state_ = 0;
}
inline ::proto::CoopChapter_State CoopChapter::state() const {
  // @@protoc_insertion_point(field_get:proto.CoopChapter.state)
  return static_cast< ::proto::CoopChapter_State >(state_);
}
inline void CoopChapter::set_state(::proto::CoopChapter_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopChapter.state)
}

// map<uint32, uint32> seen_ending_map = 9;
inline int CoopChapter::seen_ending_map_size() const {
  return seen_ending_map_.size();
}
inline void CoopChapter::clear_seen_ending_map() {
  seen_ending_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CoopChapter::seen_ending_map() const {
  // @@protoc_insertion_point(field_map:proto.CoopChapter.seen_ending_map)
  return seen_ending_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CoopChapter::mutable_seen_ending_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CoopChapter.seen_ending_map)
  return seen_ending_map_.MutableMap();
}

// -------------------------------------------------------------------

// CoopDataNotify

// repeated .proto.CoopChapter chapter_list = 15;
inline int CoopDataNotify::chapter_list_size() const {
  return chapter_list_.size();
}
inline void CoopDataNotify::clear_chapter_list() {
  chapter_list_.Clear();
}
inline const ::proto::CoopChapter& CoopDataNotify::chapter_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopDataNotify.chapter_list)
  return chapter_list_.Get(index);
}
inline ::proto::CoopChapter* CoopDataNotify::mutable_chapter_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopDataNotify.chapter_list)
  return chapter_list_.Mutable(index);
}
inline ::proto::CoopChapter* CoopDataNotify::add_chapter_list() {
  // @@protoc_insertion_point(field_add:proto.CoopDataNotify.chapter_list)
  return chapter_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >*
CoopDataNotify::mutable_chapter_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopDataNotify.chapter_list)
  return &chapter_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >&
CoopDataNotify::chapter_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopDataNotify.chapter_list)
  return chapter_list_;
}

// repeated uint32 viewed_chapter_list = 7;
inline int CoopDataNotify::viewed_chapter_list_size() const {
  return viewed_chapter_list_.size();
}
inline void CoopDataNotify::clear_viewed_chapter_list() {
  viewed_chapter_list_.Clear();
}
inline ::google::protobuf::uint32 CoopDataNotify::viewed_chapter_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopDataNotify.viewed_chapter_list)
  return viewed_chapter_list_.Get(index);
}
inline void CoopDataNotify::set_viewed_chapter_list(int index, ::google::protobuf::uint32 value) {
  viewed_chapter_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CoopDataNotify.viewed_chapter_list)
}
inline void CoopDataNotify::add_viewed_chapter_list(::google::protobuf::uint32 value) {
  viewed_chapter_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CoopDataNotify.viewed_chapter_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoopDataNotify::viewed_chapter_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopDataNotify.viewed_chapter_list)
  return viewed_chapter_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoopDataNotify::mutable_viewed_chapter_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopDataNotify.viewed_chapter_list)
  return &viewed_chapter_list_;
}

// bool is_have_progress = 10;
inline void CoopDataNotify::clear_is_have_progress() {
  is_have_progress_ = false;
}
inline bool CoopDataNotify::is_have_progress() const {
  // @@protoc_insertion_point(field_get:proto.CoopDataNotify.is_have_progress)
  return is_have_progress_;
}
inline void CoopDataNotify::set_is_have_progress(bool value) {
  
  is_have_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopDataNotify.is_have_progress)
}

// uint32 cur_coop_point = 5;
inline void CoopDataNotify::clear_cur_coop_point() {
  cur_coop_point_ = 0u;
}
inline ::google::protobuf::uint32 CoopDataNotify::cur_coop_point() const {
  // @@protoc_insertion_point(field_get:proto.CoopDataNotify.cur_coop_point)
  return cur_coop_point_;
}
inline void CoopDataNotify::set_cur_coop_point(::google::protobuf::uint32 value) {
  
  cur_coop_point_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopDataNotify.cur_coop_point)
}

// -------------------------------------------------------------------

// CoopChapterUpdateNotify

// repeated .proto.CoopChapter chapter_list = 14;
inline int CoopChapterUpdateNotify::chapter_list_size() const {
  return chapter_list_.size();
}
inline void CoopChapterUpdateNotify::clear_chapter_list() {
  chapter_list_.Clear();
}
inline const ::proto::CoopChapter& CoopChapterUpdateNotify::chapter_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopChapterUpdateNotify.chapter_list)
  return chapter_list_.Get(index);
}
inline ::proto::CoopChapter* CoopChapterUpdateNotify::mutable_chapter_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopChapterUpdateNotify.chapter_list)
  return chapter_list_.Mutable(index);
}
inline ::proto::CoopChapter* CoopChapterUpdateNotify::add_chapter_list() {
  // @@protoc_insertion_point(field_add:proto.CoopChapterUpdateNotify.chapter_list)
  return chapter_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >*
CoopChapterUpdateNotify::mutable_chapter_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopChapterUpdateNotify.chapter_list)
  return &chapter_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopChapter >&
CoopChapterUpdateNotify::chapter_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopChapterUpdateNotify.chapter_list)
  return chapter_list_;
}

// -------------------------------------------------------------------

// CoopCgUpdateNotify

// repeated uint32 cg_list = 13;
inline int CoopCgUpdateNotify::cg_list_size() const {
  return cg_list_.size();
}
inline void CoopCgUpdateNotify::clear_cg_list() {
  cg_list_.Clear();
}
inline ::google::protobuf::uint32 CoopCgUpdateNotify::cg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopCgUpdateNotify.cg_list)
  return cg_list_.Get(index);
}
inline void CoopCgUpdateNotify::set_cg_list(int index, ::google::protobuf::uint32 value) {
  cg_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CoopCgUpdateNotify.cg_list)
}
inline void CoopCgUpdateNotify::add_cg_list(::google::protobuf::uint32 value) {
  cg_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CoopCgUpdateNotify.cg_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoopCgUpdateNotify::cg_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopCgUpdateNotify.cg_list)
  return cg_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoopCgUpdateNotify::mutable_cg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopCgUpdateNotify.cg_list)
  return &cg_list_;
}

// -------------------------------------------------------------------

// CoopRewardUpdateNotify

// repeated .proto.CoopReward reward_list = 7;
inline int CoopRewardUpdateNotify::reward_list_size() const {
  return reward_list_.size();
}
inline void CoopRewardUpdateNotify::clear_reward_list() {
  reward_list_.Clear();
}
inline const ::proto::CoopReward& CoopRewardUpdateNotify::reward_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopRewardUpdateNotify.reward_list)
  return reward_list_.Get(index);
}
inline ::proto::CoopReward* CoopRewardUpdateNotify::mutable_reward_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CoopRewardUpdateNotify.reward_list)
  return reward_list_.Mutable(index);
}
inline ::proto::CoopReward* CoopRewardUpdateNotify::add_reward_list() {
  // @@protoc_insertion_point(field_add:proto.CoopRewardUpdateNotify.reward_list)
  return reward_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >*
CoopRewardUpdateNotify::mutable_reward_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopRewardUpdateNotify.reward_list)
  return &reward_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CoopReward >&
CoopRewardUpdateNotify::reward_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopRewardUpdateNotify.reward_list)
  return reward_list_;
}

// -------------------------------------------------------------------

// UnlockCoopChapterReq

// uint32 chapter_id = 3;
inline void UnlockCoopChapterReq::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockCoopChapterReq::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockCoopChapterReq.chapter_id)
  return chapter_id_;
}
inline void UnlockCoopChapterReq::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockCoopChapterReq.chapter_id)
}

// -------------------------------------------------------------------

// UnlockCoopChapterRsp

// uint32 chapter_id = 4;
inline void UnlockCoopChapterRsp::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockCoopChapterRsp::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockCoopChapterRsp.chapter_id)
  return chapter_id_;
}
inline void UnlockCoopChapterRsp::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockCoopChapterRsp.chapter_id)
}

// int32 retcode = 6;
inline void UnlockCoopChapterRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UnlockCoopChapterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UnlockCoopChapterRsp.retcode)
  return retcode_;
}
inline void UnlockCoopChapterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockCoopChapterRsp.retcode)
}

// -------------------------------------------------------------------

// CoopPointUpdateNotify

// .proto.CoopPoint coop_point = 13;
inline bool CoopPointUpdateNotify::has_coop_point() const {
  return this != internal_default_instance() && coop_point_ != NULL;
}
inline void CoopPointUpdateNotify::clear_coop_point() {
  if (GetArenaNoVirtual() == NULL && coop_point_ != NULL) delete coop_point_;
  coop_point_ = NULL;
}
inline const ::proto::CoopPoint& CoopPointUpdateNotify::coop_point() const {
  const ::proto::CoopPoint* p = coop_point_;
  // @@protoc_insertion_point(field_get:proto.CoopPointUpdateNotify.coop_point)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CoopPoint*>(
      &::proto::_CoopPoint_default_instance_);
}
inline ::proto::CoopPoint* CoopPointUpdateNotify::mutable_coop_point() {
  
  if (coop_point_ == NULL) {
    coop_point_ = new ::proto::CoopPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.CoopPointUpdateNotify.coop_point)
  return coop_point_;
}
inline ::proto::CoopPoint* CoopPointUpdateNotify::release_coop_point() {
  // @@protoc_insertion_point(field_release:proto.CoopPointUpdateNotify.coop_point)
  
  ::proto::CoopPoint* temp = coop_point_;
  coop_point_ = NULL;
  return temp;
}
inline void CoopPointUpdateNotify::set_allocated_coop_point(::proto::CoopPoint* coop_point) {
  delete coop_point_;
  coop_point_ = coop_point;
  if (coop_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CoopPointUpdateNotify.coop_point)
}

// -------------------------------------------------------------------

// StartCoopPointReq

// uint32 coop_point = 7;
inline void StartCoopPointReq::clear_coop_point() {
  coop_point_ = 0u;
}
inline ::google::protobuf::uint32 StartCoopPointReq::coop_point() const {
  // @@protoc_insertion_point(field_get:proto.StartCoopPointReq.coop_point)
  return coop_point_;
}
inline void StartCoopPointReq::set_coop_point(::google::protobuf::uint32 value) {
  
  coop_point_ = value;
  // @@protoc_insertion_point(field_set:proto.StartCoopPointReq.coop_point)
}

// -------------------------------------------------------------------

// StartCoopPointRsp

// bool is_start = 9;
inline void StartCoopPointRsp::clear_is_start() {
  is_start_ = false;
}
inline bool StartCoopPointRsp::is_start() const {
  // @@protoc_insertion_point(field_get:proto.StartCoopPointRsp.is_start)
  return is_start_;
}
inline void StartCoopPointRsp::set_is_start(bool value) {
  
  is_start_ = value;
  // @@protoc_insertion_point(field_set:proto.StartCoopPointRsp.is_start)
}

// .proto.MainCoop start_main_coop = 15;
inline bool StartCoopPointRsp::has_start_main_coop() const {
  return this != internal_default_instance() && start_main_coop_ != NULL;
}
inline void StartCoopPointRsp::clear_start_main_coop() {
  if (GetArenaNoVirtual() == NULL && start_main_coop_ != NULL) delete start_main_coop_;
  start_main_coop_ = NULL;
}
inline const ::proto::MainCoop& StartCoopPointRsp::start_main_coop() const {
  const ::proto::MainCoop* p = start_main_coop_;
  // @@protoc_insertion_point(field_get:proto.StartCoopPointRsp.start_main_coop)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MainCoop*>(
      &::proto::_MainCoop_default_instance_);
}
inline ::proto::MainCoop* StartCoopPointRsp::mutable_start_main_coop() {
  
  if (start_main_coop_ == NULL) {
    start_main_coop_ = new ::proto::MainCoop;
  }
  // @@protoc_insertion_point(field_mutable:proto.StartCoopPointRsp.start_main_coop)
  return start_main_coop_;
}
inline ::proto::MainCoop* StartCoopPointRsp::release_start_main_coop() {
  // @@protoc_insertion_point(field_release:proto.StartCoopPointRsp.start_main_coop)
  
  ::proto::MainCoop* temp = start_main_coop_;
  start_main_coop_ = NULL;
  return temp;
}
inline void StartCoopPointRsp::set_allocated_start_main_coop(::proto::MainCoop* start_main_coop) {
  delete start_main_coop_;
  start_main_coop_ = start_main_coop;
  if (start_main_coop) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.StartCoopPointRsp.start_main_coop)
}

// uint32 coop_point = 13;
inline void StartCoopPointRsp::clear_coop_point() {
  coop_point_ = 0u;
}
inline ::google::protobuf::uint32 StartCoopPointRsp::coop_point() const {
  // @@protoc_insertion_point(field_get:proto.StartCoopPointRsp.coop_point)
  return coop_point_;
}
inline void StartCoopPointRsp::set_coop_point(::google::protobuf::uint32 value) {
  
  coop_point_ = value;
  // @@protoc_insertion_point(field_set:proto.StartCoopPointRsp.coop_point)
}

// int32 retcode = 8;
inline void StartCoopPointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 StartCoopPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.StartCoopPointRsp.retcode)
  return retcode_;
}
inline void StartCoopPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.StartCoopPointRsp.retcode)
}

// -------------------------------------------------------------------

// CancelCoopTaskReq

// uint32 chapter_id = 13;
inline void CancelCoopTaskReq::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 CancelCoopTaskReq::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.CancelCoopTaskReq.chapter_id)
  return chapter_id_;
}
inline void CancelCoopTaskReq::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CancelCoopTaskReq.chapter_id)
}

// -------------------------------------------------------------------

// CancelCoopTaskRsp

// uint32 chapter_id = 1;
inline void CancelCoopTaskRsp::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 CancelCoopTaskRsp::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.CancelCoopTaskRsp.chapter_id)
  return chapter_id_;
}
inline void CancelCoopTaskRsp::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CancelCoopTaskRsp.chapter_id)
}

// int32 retcode = 5;
inline void CancelCoopTaskRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CancelCoopTaskRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CancelCoopTaskRsp.retcode)
  return retcode_;
}
inline void CancelCoopTaskRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CancelCoopTaskRsp.retcode)
}

// -------------------------------------------------------------------

// TakeCoopRewardReq

// uint32 reward_config_id = 6;
inline void TakeCoopRewardReq::clear_reward_config_id() {
  reward_config_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeCoopRewardReq::reward_config_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCoopRewardReq.reward_config_id)
  return reward_config_id_;
}
inline void TakeCoopRewardReq::set_reward_config_id(::google::protobuf::uint32 value) {
  
  reward_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCoopRewardReq.reward_config_id)
}

// -------------------------------------------------------------------

// TakeCoopRewardRsp

// int32 retcode = 9;
inline void TakeCoopRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakeCoopRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeCoopRewardRsp.retcode)
  return retcode_;
}
inline void TakeCoopRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCoopRewardRsp.retcode)
}

// uint32 reward_config_id = 1;
inline void TakeCoopRewardRsp::clear_reward_config_id() {
  reward_config_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeCoopRewardRsp::reward_config_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCoopRewardRsp.reward_config_id)
  return reward_config_id_;
}
inline void TakeCoopRewardRsp::set_reward_config_id(::google::protobuf::uint32 value) {
  
  reward_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCoopRewardRsp.reward_config_id)
}

// -------------------------------------------------------------------

// CoopProgressUpdateNotify

// uint32 cur_coop_point = 11;
inline void CoopProgressUpdateNotify::clear_cur_coop_point() {
  cur_coop_point_ = 0u;
}
inline ::google::protobuf::uint32 CoopProgressUpdateNotify::cur_coop_point() const {
  // @@protoc_insertion_point(field_get:proto.CoopProgressUpdateNotify.cur_coop_point)
  return cur_coop_point_;
}
inline void CoopProgressUpdateNotify::set_cur_coop_point(::google::protobuf::uint32 value) {
  
  cur_coop_point_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopProgressUpdateNotify.cur_coop_point)
}

// bool is_have_progress = 12;
inline void CoopProgressUpdateNotify::clear_is_have_progress() {
  is_have_progress_ = false;
}
inline bool CoopProgressUpdateNotify::is_have_progress() const {
  // @@protoc_insertion_point(field_get:proto.CoopProgressUpdateNotify.is_have_progress)
  return is_have_progress_;
}
inline void CoopProgressUpdateNotify::set_is_have_progress(bool value) {
  
  is_have_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.CoopProgressUpdateNotify.is_have_progress)
}

// -------------------------------------------------------------------

// SaveCoopDialogReq

// uint32 main_coop_id = 11;
inline void SaveCoopDialogReq::clear_main_coop_id() {
  main_coop_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveCoopDialogReq::main_coop_id() const {
  // @@protoc_insertion_point(field_get:proto.SaveCoopDialogReq.main_coop_id)
  return main_coop_id_;
}
inline void SaveCoopDialogReq::set_main_coop_id(::google::protobuf::uint32 value) {
  
  main_coop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveCoopDialogReq.main_coop_id)
}

// uint32 dialog_id = 6;
inline void SaveCoopDialogReq::clear_dialog_id() {
  dialog_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveCoopDialogReq::dialog_id() const {
  // @@protoc_insertion_point(field_get:proto.SaveCoopDialogReq.dialog_id)
  return dialog_id_;
}
inline void SaveCoopDialogReq::set_dialog_id(::google::protobuf::uint32 value) {
  
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveCoopDialogReq.dialog_id)
}

// -------------------------------------------------------------------

// SaveCoopDialogRsp

// uint32 dialog_id = 8;
inline void SaveCoopDialogRsp::clear_dialog_id() {
  dialog_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveCoopDialogRsp::dialog_id() const {
  // @@protoc_insertion_point(field_get:proto.SaveCoopDialogRsp.dialog_id)
  return dialog_id_;
}
inline void SaveCoopDialogRsp::set_dialog_id(::google::protobuf::uint32 value) {
  
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveCoopDialogRsp.dialog_id)
}

// uint32 main_coop_id = 10;
inline void SaveCoopDialogRsp::clear_main_coop_id() {
  main_coop_id_ = 0u;
}
inline ::google::protobuf::uint32 SaveCoopDialogRsp::main_coop_id() const {
  // @@protoc_insertion_point(field_get:proto.SaveCoopDialogRsp.main_coop_id)
  return main_coop_id_;
}
inline void SaveCoopDialogRsp::set_main_coop_id(::google::protobuf::uint32 value) {
  
  main_coop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveCoopDialogRsp.main_coop_id)
}

// int32 retcode = 7;
inline void SaveCoopDialogRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SaveCoopDialogRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SaveCoopDialogRsp.retcode)
  return retcode_;
}
inline void SaveCoopDialogRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SaveCoopDialogRsp.retcode)
}

// -------------------------------------------------------------------

// CoopCgShowNotify

// repeated uint32 cg_list = 10;
inline int CoopCgShowNotify::cg_list_size() const {
  return cg_list_.size();
}
inline void CoopCgShowNotify::clear_cg_list() {
  cg_list_.Clear();
}
inline ::google::protobuf::uint32 CoopCgShowNotify::cg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CoopCgShowNotify.cg_list)
  return cg_list_.Get(index);
}
inline void CoopCgShowNotify::set_cg_list(int index, ::google::protobuf::uint32 value) {
  cg_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CoopCgShowNotify.cg_list)
}
inline void CoopCgShowNotify::add_cg_list(::google::protobuf::uint32 value) {
  cg_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CoopCgShowNotify.cg_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoopCgShowNotify::cg_list() const {
  // @@protoc_insertion_point(field_list:proto.CoopCgShowNotify.cg_list)
  return cg_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoopCgShowNotify::mutable_cg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CoopCgShowNotify.cg_list)
  return &cg_list_;
}

// -------------------------------------------------------------------

// SetCoopChapterViewedReq

// uint32 chapter_id = 2;
inline void SetCoopChapterViewedReq::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 SetCoopChapterViewedReq::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.SetCoopChapterViewedReq.chapter_id)
  return chapter_id_;
}
inline void SetCoopChapterViewedReq::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCoopChapterViewedReq.chapter_id)
}

// -------------------------------------------------------------------

// SetCoopChapterViewedRsp

// uint32 chapter_id = 11;
inline void SetCoopChapterViewedRsp::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 SetCoopChapterViewedRsp::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.SetCoopChapterViewedRsp.chapter_id)
  return chapter_id_;
}
inline void SetCoopChapterViewedRsp::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCoopChapterViewedRsp.chapter_id)
}

// int32 retcode = 2;
inline void SetCoopChapterViewedRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetCoopChapterViewedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetCoopChapterViewedRsp.retcode)
  return retcode_;
}
inline void SetCoopChapterViewedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCoopChapterViewedRsp.retcode)
}

// -------------------------------------------------------------------

// MainCoopFailNotify

// string textmap_id = 7;
inline void MainCoopFailNotify::clear_textmap_id() {
  textmap_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MainCoopFailNotify::textmap_id() const {
  // @@protoc_insertion_point(field_get:proto.MainCoopFailNotify.textmap_id)
  return textmap_id_.GetNoArena();
}
inline void MainCoopFailNotify::set_textmap_id(const ::std::string& value) {
  
  textmap_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MainCoopFailNotify.textmap_id)
}
#if LANG_CXX11
inline void MainCoopFailNotify::set_textmap_id(::std::string&& value) {
  
  textmap_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MainCoopFailNotify.textmap_id)
}
#endif
inline void MainCoopFailNotify::set_textmap_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  textmap_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MainCoopFailNotify.textmap_id)
}
inline void MainCoopFailNotify::set_textmap_id(const char* value, size_t size) {
  
  textmap_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MainCoopFailNotify.textmap_id)
}
inline ::std::string* MainCoopFailNotify::mutable_textmap_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.MainCoopFailNotify.textmap_id)
  return textmap_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MainCoopFailNotify::release_textmap_id() {
  // @@protoc_insertion_point(field_release:proto.MainCoopFailNotify.textmap_id)
  
  return textmap_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MainCoopFailNotify::set_allocated_textmap_id(::std::string* textmap_id) {
  if (textmap_id != NULL) {
    
  } else {
    
  }
  textmap_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), textmap_id);
  // @@protoc_insertion_point(field_set_allocated:proto.MainCoopFailNotify.textmap_id)
}

// uint32 chapter_id = 15;
inline void MainCoopFailNotify::clear_chapter_id() {
  chapter_id_ = 0u;
}
inline ::google::protobuf::uint32 MainCoopFailNotify::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.MainCoopFailNotify.chapter_id)
  return chapter_id_;
}
inline void MainCoopFailNotify::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MainCoopFailNotify.chapter_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::MainCoop_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MainCoop_Status>() {
  return ::proto::MainCoop_Status_descriptor();
}
template <> struct is_proto_enum< ::proto::AllCoopInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AllCoopInfoNotify_CmdId>() {
  return ::proto::AllCoopInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MainCoopUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MainCoopUpdateNotify_CmdId>() {
  return ::proto::MainCoopUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveMainCoopReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveMainCoopReq_CmdId>() {
  return ::proto::SaveMainCoopReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveMainCoopRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveMainCoopRsp_CmdId>() {
  return ::proto::SaveMainCoopRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FinishMainCoopReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FinishMainCoopReq_CmdId>() {
  return ::proto::FinishMainCoopReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FinishMainCoopRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FinishMainCoopRsp_CmdId>() {
  return ::proto::FinishMainCoopRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopPoint_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopPoint_State>() {
  return ::proto::CoopPoint_State_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopReward_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopReward_State>() {
  return ::proto::CoopReward_State_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopChapter_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopChapter_State>() {
  return ::proto::CoopChapter_State_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopDataNotify_CmdId>() {
  return ::proto::CoopDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopChapterUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopChapterUpdateNotify_CmdId>() {
  return ::proto::CoopChapterUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopCgUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopCgUpdateNotify_CmdId>() {
  return ::proto::CoopCgUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopRewardUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopRewardUpdateNotify_CmdId>() {
  return ::proto::CoopRewardUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnlockCoopChapterReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnlockCoopChapterReq_CmdId>() {
  return ::proto::UnlockCoopChapterReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnlockCoopChapterRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnlockCoopChapterRsp_CmdId>() {
  return ::proto::UnlockCoopChapterRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopPointUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopPointUpdateNotify_CmdId>() {
  return ::proto::CoopPointUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::StartCoopPointReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::StartCoopPointReq_CmdId>() {
  return ::proto::StartCoopPointReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::StartCoopPointRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::StartCoopPointRsp_CmdId>() {
  return ::proto::StartCoopPointRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CancelCoopTaskReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CancelCoopTaskReq_CmdId>() {
  return ::proto::CancelCoopTaskReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CancelCoopTaskRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CancelCoopTaskRsp_CmdId>() {
  return ::proto::CancelCoopTaskRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeCoopRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeCoopRewardReq_CmdId>() {
  return ::proto::TakeCoopRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeCoopRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeCoopRewardRsp_CmdId>() {
  return ::proto::TakeCoopRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopProgressUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopProgressUpdateNotify_CmdId>() {
  return ::proto::CoopProgressUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveCoopDialogReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveCoopDialogReq_CmdId>() {
  return ::proto::SaveCoopDialogReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SaveCoopDialogRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SaveCoopDialogRsp_CmdId>() {
  return ::proto::SaveCoopDialogRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CoopCgShowNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CoopCgShowNotify_CmdId>() {
  return ::proto::CoopCgShowNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetCoopChapterViewedReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetCoopChapterViewedReq_CmdId>() {
  return ::proto::SetCoopChapterViewedReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetCoopChapterViewedRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetCoopChapterViewedRsp_CmdId>() {
  return ::proto::SetCoopChapterViewedRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MainCoopFailNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MainCoopFailNotify_CmdId>() {
  return ::proto::MainCoopFailNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fcoop_2eproto__INCLUDED
