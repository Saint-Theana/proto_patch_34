// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_quest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_quest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class QuestListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestListNotify>
     _instance;
} _QuestListNotify_default_instance_;
class QuestListUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestListUpdateNotify>
     _instance;
} _QuestListUpdateNotify_default_instance_;
class QuestDelNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDelNotify>
     _instance;
} _QuestDelNotify_default_instance_;
class ChildQuestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChildQuest>
     _instance;
} _ChildQuest_default_instance_;
class ParentQuestRandomInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuestRandomInfo>
     _instance;
} _ParentQuestRandomInfo_default_instance_;
class InfernceWordInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InfernceWordInfo>
     _instance;
} _InfernceWordInfo_default_instance_;
class InferencePageInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InferencePageInfo>
     _instance;
} _InferencePageInfo_default_instance_;
class ParentQuest_TimeVarMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuest::ParentQuest_TimeVarMapEntry>
     _instance;
} _ParentQuest_TimeVarMapEntry_default_instance_;
class ParentQuestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuest>
     _instance;
} _ParentQuest_default_instance_;
class FinishedParentQuestNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishedParentQuestNotify>
     _instance;
} _FinishedParentQuestNotify_default_instance_;
class FinishedParentQuestUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FinishedParentQuestUpdateNotify>
     _instance;
} _FinishedParentQuestUpdateNotify_default_instance_;
class AddQuestContentProgressReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddQuestContentProgressReq>
     _instance;
} _AddQuestContentProgressReq_default_instance_;
class AddQuestContentProgressRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddQuestContentProgressRsp>
     _instance;
} _AddQuestContentProgressRsp_default_instance_;
class GetQuestTalkHistoryReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestTalkHistoryReq>
     _instance;
} _GetQuestTalkHistoryReq_default_instance_;
class GetQuestTalkHistoryRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestTalkHistoryRsp>
     _instance;
} _GetQuestTalkHistoryRsp_default_instance_;
class QuestCreateEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestCreateEntityReq>
     _instance;
} _QuestCreateEntityReq_default_instance_;
class QuestCreateEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestCreateEntityRsp>
     _instance;
} _QuestCreateEntityRsp_default_instance_;
class QuestDestroyEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyEntityReq>
     _instance;
} _QuestDestroyEntityReq_default_instance_;
class QuestDestroyEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyEntityRsp>
     _instance;
} _QuestDestroyEntityRsp_default_instance_;
class ChapterStateNotify_NeedPlayerLevelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify_NeedPlayerLevel>
     _instance;
} _ChapterStateNotify_NeedPlayerLevel_default_instance_;
class ChapterStateNotify_NeedBeginTimeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify_NeedBeginTime>
     _instance;
} _ChapterStateNotify_NeedBeginTime_default_instance_;
class ChapterStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChapterStateNotify>
     _instance;
} _ChapterStateNotify_default_instance_;
class QuestProgressUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestProgressUpdateNotify>
     _instance;
} _QuestProgressUpdateNotify_default_instance_;
class QuestVarOpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestVarOp>
     _instance;
} _QuestVarOp_default_instance_;
class QuestUpdateQuestVarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarReq>
     _instance;
} _QuestUpdateQuestVarReq_default_instance_;
class QuestUpdateQuestVarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarRsp>
     _instance;
} _QuestUpdateQuestVarRsp_default_instance_;
class QuestUpdateQuestVarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestVarNotify>
     _instance;
} _QuestUpdateQuestVarNotify_default_instance_;
class QuestDestroyNpcReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyNpcReq>
     _instance;
} _QuestDestroyNpcReq_default_instance_;
class QuestDestroyNpcRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestDestroyNpcRsp>
     _instance;
} _QuestDestroyNpcRsp_default_instance_;
class BargainSnapshotDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainSnapshot>
     _instance;
} _BargainSnapshot_default_instance_;
class BargainStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainStartNotify>
     _instance;
} _BargainStartNotify_default_instance_;
class BargainOfferPriceReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainOfferPriceReq>
     _instance;
} _BargainOfferPriceReq_default_instance_;
class BargainOfferPriceRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainOfferPriceRsp>
     _instance;
} _BargainOfferPriceRsp_default_instance_;
class BargainTerminateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BargainTerminateNotify>
     _instance;
} _BargainTerminateNotify_default_instance_;
class GetBargainDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBargainDataReq>
     _instance;
} _GetBargainDataReq_default_instance_;
class GetBargainDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBargainDataRsp>
     _instance;
} _GetBargainDataRsp_default_instance_;
class GetAllActivatedBargainDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetAllActivatedBargainDataReq>
     _instance;
} _GetAllActivatedBargainDataReq_default_instance_;
class GetAllActivatedBargainDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetAllActivatedBargainDataRsp>
     _instance;
} _GetAllActivatedBargainDataRsp_default_instance_;
class ServerCondMeetQuestListUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCondMeetQuestListUpdateNotify>
     _instance;
} _ServerCondMeetQuestListUpdateNotify_default_instance_;
class QuestGlobalVarDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestGlobalVar>
     _instance;
} _QuestGlobalVar_default_instance_;
class QuestGlobalVarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestGlobalVarNotify>
     _instance;
} _QuestGlobalVarNotify_default_instance_;
class QuestTransmitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestTransmitReq>
     _instance;
} _QuestTransmitReq_default_instance_;
class QuestTransmitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestTransmitRsp>
     _instance;
} _QuestTransmitRsp_default_instance_;
class PersonalLineAllDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersonalLineAllDataReq>
     _instance;
} _PersonalLineAllDataReq_default_instance_;
class LockedPersonallineDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LockedPersonallineData>
     _instance;
  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 level_;
} _LockedPersonallineData_default_instance_;
class PersonalLineAllDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersonalLineAllDataRsp>
     _instance;
} _PersonalLineAllDataRsp_default_instance_;
class RedeemLegendaryKeyReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedeemLegendaryKeyReq>
     _instance;
} _RedeemLegendaryKeyReq_default_instance_;
class RedeemLegendaryKeyRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedeemLegendaryKeyRsp>
     _instance;
} _RedeemLegendaryKeyRsp_default_instance_;
class UnlockPersonalLineReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockPersonalLineReq>
     _instance;
} _UnlockPersonalLineReq_default_instance_;
class UnlockPersonalLineRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockPersonalLineRsp>
     _instance;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 chapter_id_;
} _UnlockPersonalLineRsp_default_instance_;
class CancelFinishParentQuestNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CancelFinishParentQuestNotify>
     _instance;
} _CancelFinishParentQuestNotify_default_instance_;
class QuestUpdateQuestTimeVarNotify_TimeVarMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry>
     _instance;
} _QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_;
class QuestUpdateQuestTimeVarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestUpdateQuestTimeVarNotify>
     _instance;
} _QuestUpdateQuestTimeVarNotify_default_instance_;
class PersonalLineNewUnlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersonalLineNewUnlockNotify>
     _instance;
} _PersonalLineNewUnlockNotify_default_instance_;
class NpcTalkStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NpcTalkStateNotify>
     _instance;
} _NpcTalkStateNotify_default_instance_;
class GetQuestLackingResourceReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestLackingResourceReq>
     _instance;
} _GetQuestLackingResourceReq_default_instance_;
class GetQuestLackingResourceRsp_LackedNpcMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry>
     _instance;
} _GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_;
class GetQuestLackingResourceRsp_LackedPlaceMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry>
     _instance;
} _GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_;
class GetQuestLackingResourceRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetQuestLackingResourceRsp>
     _instance;
} _GetQuestLackingResourceRsp_default_instance_;
class GetParentQuestVideoKeyReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetParentQuestVideoKeyReq>
     _instance;
} _GetParentQuestVideoKeyReq_default_instance_;
class GetParentQuestVideoKeyRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetParentQuestVideoKeyRsp>
     _instance;
} _GetParentQuestVideoKeyRsp_default_instance_;
class ParentQuestInferenceDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParentQuestInferenceDataNotify>
     _instance;
} _ParentQuestInferenceDataNotify_default_instance_;
class InterpretInferenceWordReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InterpretInferenceWordReq>
     _instance;
} _InterpretInferenceWordReq_default_instance_;
class InterpretInferenceWordRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<InterpretInferenceWordRsp>
     _instance;
} _InterpretInferenceWordRsp_default_instance_;
class AssociateInferenceWordReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AssociateInferenceWordReq>
     _instance;
} _AssociateInferenceWordReq_default_instance_;
class AssociateInferenceWordRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AssociateInferenceWordRsp>
     _instance;
} _AssociateInferenceWordRsp_default_instance_;
class SubmitInferenceWordReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubmitInferenceWordReq>
     _instance;
} _SubmitInferenceWordReq_default_instance_;
class SubmitInferenceWordRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubmitInferenceWordRsp>
     _instance;
} _SubmitInferenceWordRsp_default_instance_;
class QuestRenameAvatarReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestRenameAvatarReq>
     _instance;
} _QuestRenameAvatarReq_default_instance_;
class QuestRenameAvatarRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QuestRenameAvatarRsp>
     _instance;
} _QuestRenameAvatarRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fquest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[70];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[58];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListNotify, quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestListUpdateNotify, quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDelNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDelNotify, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, quest_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildQuest, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, factor_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestRandomInfo, entrance_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, is_interpret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, is_submit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, is_associate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfernceWordInfo, unlock_by_word_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InferencePageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InferencePageInfo, page_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InferencePageInfo, unlock_word_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, quest_var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, time_var_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, parent_quest_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, is_finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, inference_page_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, random_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, is_random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, video_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, quest_var_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuest, child_quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestNotify, parent_quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishedParentQuestUpdateNotify, parent_quest_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressReq, add_progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddQuestContentProgressRsp, content_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, talk_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestTalkHistoryRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, is_rewind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityReq, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestCreateEntityRsp, is_rewind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityReq, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyEntityRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, is_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedPlayerLevel, config_need_player_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, config_need_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify_NeedBeginTime, is_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, chapter_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, need_player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, need_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStateNotify, chapter_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, fail_progress_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestProgressUpdateNotify, finish_progress_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestVarOp, is_add_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, quest_var_op_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarReq, parent_quest_var_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, parent_quest_var_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarRsp, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, quest_var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestVarNotify, parent_quest_var_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestDestroyNpcRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainSnapshot, expected_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainSnapshot, cur_mood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainSnapshot, price_low_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainSnapshot, bargain_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, bargain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainStartNotify, snapshot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, bargain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceReq, price_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, result_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, bargain_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainOfferPriceRsp, cur_mood_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainTerminateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BargainTerminateNotify, bargain_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataReq, bargain_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataRsp, bargain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBargainDataRsp, snapshot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllActivatedBargainDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllActivatedBargainDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllActivatedBargainDataRsp, snapshot_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAllActivatedBargainDataRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCondMeetQuestListUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCondMeetQuestListUpdateNotify, del_quest_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCondMeetQuestListUpdateNotify, add_quest_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestGlobalVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestGlobalVar, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestGlobalVar, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestGlobalVarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestGlobalVarNotify, var_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitReq, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitReq, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitRsp, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestTransmitRsp, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockedPersonallineData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockedPersonallineData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockedPersonallineData, lock_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockedPersonallineData, personal_line_id_),
  offsetof(LockedPersonallineDataDefaultTypeInternal, chapter_id_),
  offsetof(LockedPersonallineDataDefaultTypeInternal, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockedPersonallineData, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, cur_finished_daily_task_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, can_be_unlocked_personal_line_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, ongoing_personal_line_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, legendary_key_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineAllDataRsp, locked_personal_line_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemLegendaryKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemLegendaryKeyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemLegendaryKeyRsp, legendary_key_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedeemLegendaryKeyRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineReq, personal_line_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineRsp, personal_line_id_),
  offsetof(UnlockPersonalLineRspDefaultTypeInternal, level_),
  offsetof(UnlockPersonalLineRspDefaultTypeInternal, chapter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockPersonalLineRsp, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelFinishParentQuestNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelFinishParentQuestNotify, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestTimeVarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestTimeVarNotify, time_var_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestUpdateQuestTimeVarNotify, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineNewUnlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalLineNewUnlockNotify, personal_line_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NpcTalkStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NpcTalkStateNotify, is_ban_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceReq, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, lacked_npc_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, lacked_place_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, lacked_npc_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQuestLackingResourceRsp, lacked_place_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyReq, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyRsp, video_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetParentQuestVideoKeyRsp, parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestInferenceDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestInferenceDataNotify, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentQuestInferenceDataNotify, inference_page_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordReq, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordReq, page_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordRsp, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterpretInferenceWordRsp, page_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordReq, base_word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordReq, page_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordReq, associate_word_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordRsp, base_word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordRsp, associate_word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociateInferenceWordRsp, page_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordReq, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordReq, page_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordRsp, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordRsp, page_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordRsp, conclusion_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitInferenceWordRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarReq, rename_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarReq, is_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarReq, avatar_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarRsp, avatar_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarRsp, is_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarRsp, rename_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuestRenameAvatarRsp, retcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(QuestListNotify)},
  { 6, -1, sizeof(QuestListUpdateNotify)},
  { 12, -1, sizeof(QuestDelNotify)},
  { 18, -1, sizeof(ChildQuest)},
  { 26, -1, sizeof(ParentQuestRandomInfo)},
  { 34, -1, sizeof(InfernceWordInfo)},
  { 44, -1, sizeof(InferencePageInfo)},
  { 51, -1, sizeof(ParentQuest)},
  { 67, -1, sizeof(FinishedParentQuestNotify)},
  { 73, -1, sizeof(FinishedParentQuestUpdateNotify)},
  { 79, -1, sizeof(AddQuestContentProgressReq)},
  { 87, -1, sizeof(AddQuestContentProgressRsp)},
  { 94, -1, sizeof(GetQuestTalkHistoryReq)},
  { 100, -1, sizeof(GetQuestTalkHistoryRsp)},
  { 108, -1, sizeof(QuestCreateEntityReq)},
  { 117, -1, sizeof(QuestCreateEntityRsp)},
  { 128, -1, sizeof(QuestDestroyEntityReq)},
  { 136, -1, sizeof(QuestDestroyEntityRsp)},
  { 145, -1, sizeof(ChapterStateNotify_NeedPlayerLevel)},
  { 152, -1, sizeof(ChapterStateNotify_NeedBeginTime)},
  { 159, -1, sizeof(ChapterStateNotify)},
  { 168, -1, sizeof(QuestProgressUpdateNotify)},
  { 176, -1, sizeof(QuestVarOp)},
  { 184, -1, sizeof(QuestUpdateQuestVarReq)},
  { 193, -1, sizeof(QuestUpdateQuestVarRsp)},
  { 202, -1, sizeof(QuestUpdateQuestVarNotify)},
  { 210, -1, sizeof(QuestDestroyNpcReq)},
  { 217, -1, sizeof(QuestDestroyNpcRsp)},
  { 225, -1, sizeof(BargainSnapshot)},
  { 234, -1, sizeof(BargainStartNotify)},
  { 241, -1, sizeof(BargainOfferPriceReq)},
  { 248, -1, sizeof(BargainOfferPriceRsp)},
  { 257, -1, sizeof(BargainTerminateNotify)},
  { 263, -1, sizeof(GetBargainDataReq)},
  { 269, -1, sizeof(GetBargainDataRsp)},
  { 277, -1, sizeof(GetAllActivatedBargainDataReq)},
  { 282, -1, sizeof(GetAllActivatedBargainDataRsp)},
  { 289, -1, sizeof(ServerCondMeetQuestListUpdateNotify)},
  { 296, -1, sizeof(QuestGlobalVar)},
  { 303, -1, sizeof(QuestGlobalVarNotify)},
  { 309, -1, sizeof(QuestTransmitReq)},
  { 316, -1, sizeof(QuestTransmitRsp)},
  { 324, -1, sizeof(PersonalLineAllDataReq)},
  { 329, -1, sizeof(LockedPersonallineData)},
  { 339, -1, sizeof(PersonalLineAllDataRsp)},
  { 350, -1, sizeof(RedeemLegendaryKeyReq)},
  { 355, -1, sizeof(RedeemLegendaryKeyRsp)},
  { 362, -1, sizeof(UnlockPersonalLineReq)},
  { 368, -1, sizeof(UnlockPersonalLineRsp)},
  { 378, -1, sizeof(CancelFinishParentQuestNotify)},
  { 384, -1, sizeof(QuestUpdateQuestTimeVarNotify)},
  { 391, -1, sizeof(PersonalLineNewUnlockNotify)},
  { 397, -1, sizeof(NpcTalkStateNotify)},
  { 403, -1, sizeof(GetQuestLackingResourceReq)},
  { 409, -1, sizeof(GetQuestLackingResourceRsp)},
  { 420, -1, sizeof(GetParentQuestVideoKeyReq)},
  { 426, -1, sizeof(GetParentQuestVideoKeyRsp)},
  { 434, -1, sizeof(ParentQuestInferenceDataNotify)},
  { 441, -1, sizeof(InterpretInferenceWordReq)},
  { 448, -1, sizeof(InterpretInferenceWordRsp)},
  { 456, -1, sizeof(AssociateInferenceWordReq)},
  { 464, -1, sizeof(AssociateInferenceWordRsp)},
  { 473, -1, sizeof(SubmitInferenceWordReq)},
  { 480, -1, sizeof(SubmitInferenceWordRsp)},
  { 489, -1, sizeof(QuestRenameAvatarReq)},
  { 497, -1, sizeof(QuestRenameAvatarRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestListUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDelNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChildQuest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuestRandomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InfernceWordInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InferencePageInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuest_TimeVarMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishedParentQuestNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinishedParentQuestUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddQuestContentProgressReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddQuestContentProgressRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestTalkHistoryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestTalkHistoryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestCreateEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestCreateEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_NeedPlayerLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_NeedBeginTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChapterStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestProgressUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestVarOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestVarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyNpcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestDestroyNpcRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainOfferPriceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainOfferPriceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BargainTerminateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBargainDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBargainDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAllActivatedBargainDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAllActivatedBargainDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCondMeetQuestListUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestGlobalVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestGlobalVarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestTransmitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestTransmitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalLineAllDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LockedPersonallineData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalLineAllDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedeemLegendaryKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedeemLegendaryKeyRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockPersonalLineReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockPersonalLineRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelFinishParentQuestNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestUpdateQuestTimeVarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalLineNewUnlockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NpcTalkStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestLackingResourceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetQuestLackingResourceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetParentQuestVideoKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetParentQuestVideoKeyRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentQuestInferenceDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InterpretInferenceWordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InterpretInferenceWordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssociateInferenceWordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AssociateInferenceWordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitInferenceWordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitInferenceWordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestRenameAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QuestRenameAvatarRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_quest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[7].reflection = ParentQuest::ParentQuest_TimeVarMapEntry::CreateReflection(file_level_metadata[7].descriptor, _ParentQuest_TimeVarMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[51].reflection = QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::CreateReflection(file_level_metadata[51].descriptor, _QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[56].reflection = GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::CreateReflection(file_level_metadata[56].descriptor, _GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[57].reflection = GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::CreateReflection(file_level_metadata[57].descriptor, _GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 70);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _QuestListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestListNotify_default_instance_);_QuestListUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestListUpdateNotify_default_instance_);_QuestDelNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDelNotify_default_instance_);_ChildQuest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChildQuest_default_instance_);_ParentQuestRandomInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuestRandomInfo_default_instance_);_InfernceWordInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InfernceWordInfo_default_instance_);_InferencePageInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InferencePageInfo_default_instance_);_ParentQuest_TimeVarMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuest_TimeVarMapEntry_default_instance_);_ParentQuest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuest_default_instance_);_FinishedParentQuestNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishedParentQuestNotify_default_instance_);_FinishedParentQuestUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FinishedParentQuestUpdateNotify_default_instance_);_AddQuestContentProgressReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddQuestContentProgressReq_default_instance_);_AddQuestContentProgressRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddQuestContentProgressRsp_default_instance_);_GetQuestTalkHistoryReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestTalkHistoryReq_default_instance_);_GetQuestTalkHistoryRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestTalkHistoryRsp_default_instance_);_QuestCreateEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestCreateEntityReq_default_instance_);_QuestCreateEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestCreateEntityRsp_default_instance_);_QuestDestroyEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyEntityReq_default_instance_);_QuestDestroyEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyEntityRsp_default_instance_);_ChapterStateNotify_NeedPlayerLevel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_NeedPlayerLevel_default_instance_);_ChapterStateNotify_NeedBeginTime_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_NeedBeginTime_default_instance_);_ChapterStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChapterStateNotify_default_instance_);_QuestProgressUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestProgressUpdateNotify_default_instance_);_QuestVarOp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestVarOp_default_instance_);_QuestUpdateQuestVarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarReq_default_instance_);_QuestUpdateQuestVarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarRsp_default_instance_);_QuestUpdateQuestVarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestVarNotify_default_instance_);_QuestDestroyNpcReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyNpcReq_default_instance_);_QuestDestroyNpcRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestDestroyNpcRsp_default_instance_);_BargainSnapshot_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainSnapshot_default_instance_);_BargainStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainStartNotify_default_instance_);_BargainOfferPriceReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainOfferPriceReq_default_instance_);_BargainOfferPriceRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainOfferPriceRsp_default_instance_);_BargainTerminateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BargainTerminateNotify_default_instance_);_GetBargainDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBargainDataReq_default_instance_);_GetBargainDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBargainDataRsp_default_instance_);_GetAllActivatedBargainDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetAllActivatedBargainDataReq_default_instance_);_GetAllActivatedBargainDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetAllActivatedBargainDataRsp_default_instance_);_ServerCondMeetQuestListUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCondMeetQuestListUpdateNotify_default_instance_);_QuestGlobalVar_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestGlobalVar_default_instance_);_QuestGlobalVarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestGlobalVarNotify_default_instance_);_QuestTransmitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestTransmitReq_default_instance_);_QuestTransmitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestTransmitRsp_default_instance_);_PersonalLineAllDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersonalLineAllDataReq_default_instance_);_LockedPersonallineData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LockedPersonallineData_default_instance_);_PersonalLineAllDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersonalLineAllDataRsp_default_instance_);_RedeemLegendaryKeyReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedeemLegendaryKeyReq_default_instance_);_RedeemLegendaryKeyRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedeemLegendaryKeyRsp_default_instance_);_UnlockPersonalLineReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockPersonalLineReq_default_instance_);_UnlockPersonalLineRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockPersonalLineRsp_default_instance_);_CancelFinishParentQuestNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CancelFinishParentQuestNotify_default_instance_);_QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_);_QuestUpdateQuestTimeVarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestUpdateQuestTimeVarNotify_default_instance_);_PersonalLineNewUnlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersonalLineNewUnlockNotify_default_instance_);_NpcTalkStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NpcTalkStateNotify_default_instance_);_GetQuestLackingResourceReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestLackingResourceReq_default_instance_);_GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_);_GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_);_GetQuestLackingResourceRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetQuestLackingResourceRsp_default_instance_);_GetParentQuestVideoKeyReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetParentQuestVideoKeyReq_default_instance_);_GetParentQuestVideoKeyRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetParentQuestVideoKeyRsp_default_instance_);_ParentQuestInferenceDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParentQuestInferenceDataNotify_default_instance_);_InterpretInferenceWordReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InterpretInferenceWordReq_default_instance_);_InterpretInferenceWordRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_InterpretInferenceWordRsp_default_instance_);_AssociateInferenceWordReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AssociateInferenceWordReq_default_instance_);_AssociateInferenceWordRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AssociateInferenceWordRsp_default_instance_);_SubmitInferenceWordReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubmitInferenceWordReq_default_instance_);_SubmitInferenceWordRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubmitInferenceWordRsp_default_instance_);_QuestRenameAvatarReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestRenameAvatarReq_default_instance_);_QuestRenameAvatarRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QuestRenameAvatarRsp_default_instance_);_ParentQuest_TimeVarMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ParentQuest_TimeVarMapEntry_default_instance_._instance.get_mutable());
  _ParentQuest_TimeVarMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ParentQuest_default_instance_._instance.get_mutable()->random_info_ = const_cast< ::proto::ParentQuestRandomInfo*>(
      ::proto::ParentQuestRandomInfo::internal_default_instance());
  _QuestCreateEntityReq_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _QuestCreateEntityRsp_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _ChapterStateNotify_default_instance_._instance.get_mutable()->need_player_level_ = const_cast< ::proto::ChapterStateNotify_NeedPlayerLevel*>(
      ::proto::ChapterStateNotify_NeedPlayerLevel::internal_default_instance());
  _ChapterStateNotify_default_instance_._instance.get_mutable()->need_begin_time_ = const_cast< ::proto::ChapterStateNotify_NeedBeginTime*>(
      ::proto::ChapterStateNotify_NeedBeginTime::internal_default_instance());
  _BargainStartNotify_default_instance_._instance.get_mutable()->snapshot_ = const_cast< ::proto::BargainSnapshot*>(
      ::proto::BargainSnapshot::internal_default_instance());
  _GetBargainDataRsp_default_instance_._instance.get_mutable()->snapshot_ = const_cast< ::proto::BargainSnapshot*>(
      ::proto::BargainSnapshot::internal_default_instance());
  _LockedPersonallineData_default_instance_.chapter_id_ = 0u;
  _LockedPersonallineData_default_instance_.level_ = 0u;
  _UnlockPersonalLineRsp_default_instance_.level_ = 0u;
  _UnlockPersonalLineRsp_default_instance_.chapter_id_ = 0u;
  _QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_._instance.get_mutable());
  _QuestUpdateQuestTimeVarNotify_TimeVarMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_._instance.get_mutable());
  _GetQuestLackingResourceRsp_LackedNpcMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_._instance.get_mutable());
  _GetQuestLackingResourceRsp_LackedPlaceMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023cmd/cmd_quest.proto\022\005proto\032\014define.pro"
      "to\"\202\001\n\017QuestListNotify\022 \n\nquest_list\030\r \003"
      "(\0132\014.proto.Quest\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\225\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\032\002\020\001\"\210\001\n\025QuestListUpdateNotif"
      "y\022 \n\nquest_list\030\r \003(\0132\014.proto.Quest\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\307\003\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"q\n\016Qu"
      "estDelNotify\022\020\n\010quest_id\030\017 \001(\r\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\347\003\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"F\n\nChildQu"
      "est\022\027\n\017quest_config_id\030\n \001(\r\022\r\n\005state\030\014 "
      "\001(\r\022\020\n\010quest_id\030\005 \001(\r\"V\n\025ParentQuestRand"
      "omInfo\022\023\n\013factor_list\030\003 \003(\r\022\023\n\013template_"
      "id\030\006 \001(\r\022\023\n\013entrance_id\030\001 \001(\r\"}\n\020Infernc"
      "eWordInfo\022\017\n\007word_id\030\005 \001(\r\022\024\n\014is_interpr"
      "et\030\007 \001(\010\022\021\n\tis_submit\030\004 \001(\010\022\024\n\014is_associ"
      "ate\030\003 \001(\010\022\031\n\021unlock_by_word_id\030\r \001(\r\"W\n\021"
      "InferencePageInfo\022\017\n\007page_id\030\006 \001(\r\0221\n\020un"
      "lock_word_list\030\010 \003(\0132\027.proto.InfernceWor"
      "dInfo\"\253\003\n\013ParentQuest\022\021\n\tquest_var\030\010 \003(\005"
      "\0228\n\014time_var_map\030\014 \003(\0132\".proto.ParentQue"
      "st.TimeVarMapEntry\022\032\n\022parent_quest_state"
      "\030\017 \001(\r\022\023\n\013is_finished\030\t \001(\010\0225\n\023inference"
      "_page_list\030\005 \003(\0132\030.proto.InferencePageIn"
      "fo\0221\n\013random_info\030\007 \001(\0132\034.proto.ParentQu"
      "estRandomInfo\022\027\n\017parent_quest_id\030\001 \001(\r\022\021"
      "\n\tis_random\030\013 \001(\010\022\021\n\tvideo_key\030\002 \001(\004\022\025\n\r"
      "quest_var_seq\030\004 \001(\r\022+\n\020child_quest_list\030"
      "\n \003(\0132\021.proto.ChildQuest\0321\n\017TimeVarMapEn"
      "try\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\231\001\n\031"
      "FinishedParentQuestNotify\022-\n\021parent_ques"
      "t_list\030\003 \003(\0132\022.proto.ParentQuest\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\362\003\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\237\001\n\037Fini"
      "shedParentQuestUpdateNotify\022-\n\021parent_qu"
      "est_list\030\017 \003(\0132\022.proto.ParentQuest\"M\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\244\003\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\273\001\n\032Ad"
      "dQuestContentProgressReq\022\024\n\014content_type"
      "\030\016 \001(\r\022\r\n\005param\030\t \001(\r\022\024\n\014add_progress\030\002 "
      "\001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\332\003\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\222\001\n\032AddQuestCont"
      "entProgressRsp\022\017\n\007retcode\030\010 \001(\005\022\024\n\014conte"
      "nt_type\030\r \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\340\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\032\002\020\001\"\225\001\n\026GetQuestTalkHistoryReq\022"
      "\027\n\017parent_quest_id\030\005 \001(\r\"b\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\326\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001"
      "\032\002\020\001\"\247\001\n\026GetQuestTalkHistoryRsp\022\024\n\014talk_"
      "id_list\030\007 \003(\r\022\027\n\017parent_quest_id\030\r \001(\r\022\017"
      "\n\007retcode\030\010 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\316\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\341\001\n\024QuestCreateEntityReq\022"
      "\027\n\017parent_quest_id\030\004 \001(\r\022\021\n\tis_rewind\030\014 "
      "\001(\010\022\020\n\010quest_id\030\n \001(\r\022\'\n\006entity\030\013 \001(\0132\027."
      "proto.CreateEntityInfo\"b\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\236\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002"
      "\020\001\"\360\001\n\024QuestCreateEntityRsp\022\020\n\010quest_id\030"
      "\003 \001(\r\022\017\n\007retcode\030\r \001(\005\022\021\n\tentity_id\030\006 \001("
      "\r\022\'\n\006entity\030\014 \001(\0132\027.proto.CreateEntityIn"
      "fo\022\027\n\017parent_quest_id\030\007 \001(\r\022\021\n\tis_rewind"
      "\030\016 \001(\010\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\250\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\032\002\020\001\"\262\001\n\025QuestDestroyEntityReq\022\020\n\010scene"
      "_id\030\r \001(\r\022\021\n\tentity_id\030\n \001(\r\022\020\n\010quest_id"
      "\030\014 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\255\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\256\001\n\025QuestDest"
      "royEntityRsp\022\020\n\010quest_id\030\r \001(\r\022\020\n\010scene_"
      "id\030\017 \001(\r\022\021\n\tentity_id\030\t \001(\r\022\017\n\007retcode\030\010"
      " \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\336\003\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\265\003\n\022ChapterStateNotify\022*\n\rchapter_st"
      "ate\030\r \001(\0162\023.proto.ChapterState\022D\n\021need_p"
      "layer_level\030\002 \001(\0132).proto.ChapterStateNo"
      "tify.NeedPlayerLevel\022@\n\017need_begin_time\030"
      "\t \001(\0132\'.proto.ChapterStateNotify.NeedBeg"
      "inTime\022\022\n\nchapter_id\030\017 \001(\r\032E\n\017NeedPlayer"
      "Level\022\020\n\010is_limit\030\016 \001(\010\022 \n\030config_need_p"
      "layer_level\030\004 \001(\r\032A\n\rNeedBeginTime\022\036\n\026co"
      "nfig_need_begin_time\030\005 \001(\r\022\020\n\010is_limit\030\004"
      " \001(\010\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\325\003\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\266\001\n\031QuestProgressUpdateNotify\022\020\n\010que"
      "st_id\030\t \001(\r\022\032\n\022fail_progress_list\030\013 \003(\r\022"
      "\034\n\024finish_progress_list\030\001 \003(\r\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\226\003\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\":\n\nQuestVar"
      "Op\022\r\n\005index\030\016 \001(\r\022\r\n\005value\030\006 \001(\005\022\016\n\006is_a"
      "dd\030\005 \001(\010\"\363\001\n\026QuestUpdateQuestVarReq\022\027\n\017p"
      "arent_quest_id\030\014 \001(\r\022,\n\021quest_var_op_lis"
      "t\030\004 \003(\0132\021.proto.QuestVarOp\022\020\n\010quest_id\030\003"
      " \001(\r\022\034\n\024parent_quest_var_seq\030\t \001(\r\"b\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\267\003\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLO"
      "W_CLIENT\020\001\032\002\020\001\"\301\001\n\026QuestUpdateQuestVarRs"
      "p\022\017\n\007retcode\030\002 \001(\005\022\034\n\024parent_quest_var_s"
      "eq\030\017 \001(\r\022\027\n\017parent_quest_id\030\004 \001(\r\022\020\n\010que"
      "st_id\030\t \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\276\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\032\002\020\001\"\264\001\n\031QuestUpdateQuestVarNotify"
      "\022\021\n\tquest_var\030\007 \003(\005\022\027\n\017parent_quest_id\030\013"
      " \001(\r\022\034\n\024parent_quest_var_seq\030\016 \001(\r\"M\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\364\003\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\241\001\n\022Qu"
      "estDestroyNpcReq\022\016\n\006npc_id\030\007 \001(\r\022\027\n\017pare"
      "nt_quest_id\030\004 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\354\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\235\001"
      "\n\022QuestDestroyNpcRsp\022\016\n\006npc_id\030\004 \001(\r\022\027\n\017"
      "parent_quest_id\030\006 \001(\r\022\017\n\007retcode\030\002 \001(\005\"M"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\350\003\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"h\n"
      "\017BargainSnapshot\022\026\n\016expected_price\030\006 \001(\r"
      "\022\020\n\010cur_mood\030\r \001(\005\022\027\n\017price_low_limit\030\n "
      "\001(\r\022\022\n\nbargain_id\030\007 \001(\r\"\241\001\n\022BargainStart"
      "Notify\022\022\n\nbargain_id\030\014 \001(\r\022(\n\010snapshot\030\002"
      " \001(\0132\026.proto.BargainSnapshot\"M\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\251\003\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\235\001\n\024BargainO"
      "fferPriceReq\022\022\n\nbargain_id\030\014 \001(\r\022\r\n\005pric"
      "e\030\007 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\312\003\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\320\001\n\024BargainO"
      "fferPriceRsp\022\017\n\007retcode\030\r \001(\005\022\024\n\014result_"
      "param\030\013 \001(\r\0220\n\016bargain_result\030\002 \001(\0162\030.pr"
      "oto.BargainResultType\022\020\n\010cur_mood\030\007 \001(\005\""
      "M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\242\003\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"{"
      "\n\026BargainTerminateNotify\022\022\n\nbargain_id\030\016"
      " \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\333\003\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\213\001\n\021GetBargainDataReq\022\022\n\nbargain_id\030"
      "\016 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\254\003\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\261\001\n\021GetBargain"
      "DataRsp\022\017\n\007retcode\030\016 \001(\005\022\022\n\nbargain_id\030\010"
      " \001(\r\022(\n\010snapshot\030\r \001(\0132\026.proto.BargainSn"
      "apshot\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\331\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\032\002\020\001\"\203\001\n\035GetAllActivatedBargainDataReq\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\246\003\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"\256\001\n\035GetAllActivatedB"
      "argainDataRsp\022-\n\rsnapshot_list\030\002 \003(\0132\026.p"
      "roto.BargainSnapshot\022\017\n\007retcode\030\016 \001(\005\"M\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\275\003\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\252\001\n"
      "#ServerCondMeetQuestListUpdateNotify\022\031\n\021"
      "del_quest_id_list\030\007 \003(\r\022\031\n\021add_quest_id_"
      "list\030\002 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\345\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\032\002\020\001\",\n\016QuestGlobalVar\022\r\n\005value\030\016 \001"
      "(\005\022\013\n\003key\030\t \001(\r\"\216\001\n\024QuestGlobalVarNotify"
      "\022\'\n\010var_list\030\014 \003(\0132\025.proto.QuestGlobalVa"
      "r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\303\003\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\232\001\n\020QuestTransmitReq\022\020\n\010point_id\030\003 \001(\r\022"
      "\020\n\010quest_id\030\n \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\272\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\226\001"
      "\n\020QuestTransmitRsp\022\020\n\010point_id\030\010 \001(\r\022\017\n\007"
      "retcode\030\007 \001(\005\022\020\n\010quest_id\030\005 \001(\r\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\302\003\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"|\n\026Person"
      "alLineAllDataReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\256\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\305\001\n"
      "\026LockedPersonallineData\022=\n\013lock_reason\030\004"
      " \001(\0162(.proto.LockedPersonallineData.Lock"
      "Reason\022\030\n\020personal_line_id\030\006 \001(\r\022\024\n\nchap"
      "ter_id\030\005 \001(\rH\000\022\017\n\005level\030\r \001(\rH\000\"\"\n\nLockR"
      "eason\022\t\n\005LEVEL\020\000\022\t\n\005QUEST\020\001B\007\n\005param\"\316\002\n"
      "\026PersonalLineAllDataRsp\022%\n\035cur_finished_"
      "daily_task_count\030\002 \001(\r\022*\n\"can_be_unlocke"
      "d_personal_line_list\030\004 \003(\r\022\017\n\007retcode\030\013 "
      "\001(\005\022\"\n\032ongoing_personal_line_list\030\005 \003(\r\022"
      "\033\n\023legendary_key_count\030\007 \001(\r\022@\n\031locked_p"
      "ersonal_line_list\030\n \003(\0132\035.proto.LockedPe"
      "rsonallineData\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\273\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\032\002\020\001\"{\n\025RedeemLegendaryKeyReq\"b"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\263\003\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_"
      "ALLOW_CLIENT\020\001\032\002\020\001\"\224\001\n\025RedeemLegendaryKe"
      "yRsp\022\033\n\023legendary_key_count\030\004 \001(\r\022\017\n\007ret"
      "code\030\006 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\227\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\032\002\020\001\"\225\001\n\025UnlockPersonalLineReq\022\030\n\020p"
      "ersonal_line_id\030\007 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\304\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020"
      "\001\"\301\001\n\025UnlockPersonalLineRsp\022\017\n\007retcode\030\005"
      " \001(\005\022\030\n\020personal_line_id\030\006 \001(\r\022\017\n\005level\030"
      "\003 \001(\rH\000\022\024\n\nchapter_id\030\016 \001(\rH\000\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\223\003\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001B\007\n\005param\"\207\001"
      "\n\035CancelFinishParentQuestNotify\022\027\n\017paren"
      "t_quest_id\030\n \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\305\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\032\002\020\001\"\206\002\n\035QuestUpdateQuestTime"
      "VarNotify\022J\n\014time_var_map\030\010 \003(\01324.proto."
      "QuestUpdateQuestTimeVarNotify.TimeVarMap"
      "Entry\022\027\n\017parent_quest_id\030\005 \001(\r\0321\n\017TimeVa"
      "rMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028"
      "\001\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\264\003\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\213\001\n\033PersonalLineNewUnlockNotify\022\035\n\025pers"
      "onal_line_id_list\030\013 \003(\r\"M\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\356\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\032\002\020\001\"s\n\022NpcTalkStateNo"
      "tify\022\016\n\006is_ban\030\001 \001(\010\"M\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\341\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\032\002\020\001\"\222\001\n\032GetQuestLackingR"
      "esourceReq\022\020\n\010quest_id\030\017 \001(\r\"b\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\320\003\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIE"
      "NT\020\001\032\002\020\001\"\314\003\n\032GetQuestLackingResourceRsp\022"
      "\020\n\010quest_id\030\006 \001(\r\022\017\n\007retcode\030\016 \001(\005\022\027\n\017la"
      "cked_npc_list\030\017 \003(\r\022\031\n\021lacked_place_list"
      "\030\t \003(\r\022K\n\016lacked_npc_map\030\003 \003(\01323.proto.G"
      "etQuestLackingResourceRsp.LackedNpcMapEn"
      "try\022O\n\020lacked_place_map\030\001 \003(\01325.proto.Ge"
      "tQuestLackingResourceRsp.LackedPlaceMapE"
      "ntry\0323\n\021LackedNpcMapEntry\022\013\n\003key\030\001 \001(\r\022\r"
      "\n\005value\030\002 \001(\r:\0028\001\0325\n\023LackedPlaceMapEntry"
      "\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\343\003\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\230\001\n\031GetP"
      "arentQuestVideoKeyReq\022\027\n\017parent_quest_id"
      "\030\016 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\337\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\247\001\n\031GetParent"
      "QuestVideoKeyRsp\022\017\n\007retcode\030\t \001(\005\022\021\n\tvid"
      "eo_key\030\002 \001(\004\022\027\n\017parent_quest_id\030\013 \001(\r\"M\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\253\003\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\277\001\n"
      "\036ParentQuestInferenceDataNotify\022\027\n\017paren"
      "t_quest_id\030\010 \001(\r\0225\n\023inference_page_list\030"
      "\013 \003(\0132\030.proto.InferencePageInfo\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\317\003\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\241\001\n\031Inter"
      "pretInferenceWordReq\022\017\n\007word_id\030\014 \001(\r\022\017\n"
      "\007page_id\030\n \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\247\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\235\001\n\031I"
      "nterpretInferenceWordRsp\022\017\n\007retcode\030\r \001("
      "\005\022\017\n\007word_id\030\006 \001(\r\022\017\n\007page_id\030\002 \001(\r\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\237\003\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\301\001\n\031A"
      "ssociateInferenceWordReq\022\024\n\014base_word_id"
      "\030\013 \001(\r\022\017\n\007page_id\030\003 \001(\r\022\031\n\021associate_wor"
      "d_id\030\r \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\310\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\275\001\n\031Assoc"
      "iateInferenceWordRsp\022\017\n\007retcode\030\r \001(\005\022\024\n"
      "\014base_word_id\030\005 \001(\r\022\031\n\021associate_word_id"
      "\030\016 \001(\r\022\017\n\007page_id\030\013 \001(\r\"M\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\352\003\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\032\002\020\001\"\236\001\n\026SubmitInferen"
      "ceWordReq\022\017\n\007word_id\030\t \001(\r\022\017\n\007page_id\030\r "
      "\001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\306\003\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\261\001\n\026SubmitInfere"
      "nceWordRsp\022\017\n\007word_id\030\006 \001(\r\022\017\n\007page_id\030\r"
      " \001(\r\022\025\n\rconclusion_id\030\007 \001(\r\022\017\n\007retcode\030\010"
      " \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\357\003\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\264\001\n\024QuestRenameAvatarReq\022\021\n\trename_i"
      "d\030\t \001(\r\022\020\n\010is_check\030\006 \001(\010\022\023\n\013avatar_name"
      "\030\013 \001(\t\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\323\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\260\001\n\024QuestRena"
      "meAvatarRsp\022\023\n\013avatar_name\030\017 \001(\t\022\020\n\010is_c"
      "heck\030\002 \001(\010\022\021\n\trename_id\030\r \001(\r\022\017\n\007retcode"
      "\030\n \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\221\003\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\032\002\020\001*|\n\014ChapterState\022\031\n\025CHAPTER_STATE_I"
      "NVALID\020\000\022!\n\035CHAPTER_STATE_UNABLE_TO_BEGI"
      "N\020\001\022\027\n\023CHAPTER_STATE_BEGIN\020\002\022\025\n\021CHAPTER_"
      "STATE_END\020\003*b\n\021BargainResultType\022\031\n\025BARG"
      "AIN_COMPLETE_SUCC\020\000\022\027\n\023BARGAIN_SINGLE_FA"
      "IL\020\001\022\031\n\025BARGAIN_COMPLETE_FAIL\020\002B\nZ\010./;pr"
      "otob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 11491);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_quest.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fquest_2eproto

const ::google::protobuf::EnumDescriptor* QuestListNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[0];
}
bool QuestListNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 405:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestListNotify_CmdId QuestListNotify::NONE;
const QuestListNotify_CmdId QuestListNotify::CMD_ID;
const QuestListNotify_CmdId QuestListNotify::ENET_CHANNEL_ID;
const QuestListNotify_CmdId QuestListNotify::ENET_IS_RELIABLE;
const QuestListNotify_CmdId QuestListNotify::CmdId_MIN;
const QuestListNotify_CmdId QuestListNotify::CmdId_MAX;
const int QuestListNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestListUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[1];
}
bool QuestListUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 455:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::NONE;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CMD_ID;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::ENET_CHANNEL_ID;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::ENET_IS_RELIABLE;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CmdId_MIN;
const QuestListUpdateNotify_CmdId QuestListUpdateNotify::CmdId_MAX;
const int QuestListUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDelNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[2];
}
bool QuestDelNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 487:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDelNotify_CmdId QuestDelNotify::NONE;
const QuestDelNotify_CmdId QuestDelNotify::CMD_ID;
const QuestDelNotify_CmdId QuestDelNotify::ENET_CHANNEL_ID;
const QuestDelNotify_CmdId QuestDelNotify::ENET_IS_RELIABLE;
const QuestDelNotify_CmdId QuestDelNotify::CmdId_MIN;
const QuestDelNotify_CmdId QuestDelNotify::CmdId_MAX;
const int QuestDelNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FinishedParentQuestNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[3];
}
bool FinishedParentQuestNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 498:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::NONE;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CMD_ID;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::ENET_CHANNEL_ID;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::ENET_IS_RELIABLE;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CmdId_MIN;
const FinishedParentQuestNotify_CmdId FinishedParentQuestNotify::CmdId_MAX;
const int FinishedParentQuestNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FinishedParentQuestUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[4];
}
bool FinishedParentQuestUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 420:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::NONE;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CMD_ID;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::ENET_CHANNEL_ID;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::ENET_IS_RELIABLE;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CmdId_MIN;
const FinishedParentQuestUpdateNotify_CmdId FinishedParentQuestUpdateNotify::CmdId_MAX;
const int FinishedParentQuestUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddQuestContentProgressReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[5];
}
bool AddQuestContentProgressReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 474:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::NONE;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CMD_ID;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::ENET_CHANNEL_ID;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::ENET_IS_RELIABLE;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::IS_ALLOW_CLIENT;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CmdId_MIN;
const AddQuestContentProgressReq_CmdId AddQuestContentProgressReq::CmdId_MAX;
const int AddQuestContentProgressReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddQuestContentProgressRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[6];
}
bool AddQuestContentProgressRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 480:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::NONE;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CMD_ID;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::ENET_CHANNEL_ID;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::ENET_IS_RELIABLE;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CmdId_MIN;
const AddQuestContentProgressRsp_CmdId AddQuestContentProgressRsp::CmdId_MAX;
const int AddQuestContentProgressRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestTalkHistoryReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[7];
}
bool GetQuestTalkHistoryReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 470:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::NONE;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CMD_ID;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::ENET_CHANNEL_ID;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::ENET_IS_RELIABLE;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::IS_ALLOW_CLIENT;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CmdId_MIN;
const GetQuestTalkHistoryReq_CmdId GetQuestTalkHistoryReq::CmdId_MAX;
const int GetQuestTalkHistoryReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestTalkHistoryRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[8];
}
bool GetQuestTalkHistoryRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 462:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::NONE;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CMD_ID;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::ENET_CHANNEL_ID;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::ENET_IS_RELIABLE;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CmdId_MIN;
const GetQuestTalkHistoryRsp_CmdId GetQuestTalkHistoryRsp::CmdId_MAX;
const int GetQuestTalkHistoryRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestCreateEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[9];
}
bool QuestCreateEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 414:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::NONE;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CMD_ID;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::ENET_CHANNEL_ID;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::ENET_IS_RELIABLE;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::IS_ALLOW_CLIENT;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CmdId_MIN;
const QuestCreateEntityReq_CmdId QuestCreateEntityReq::CmdId_MAX;
const int QuestCreateEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestCreateEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[10];
}
bool QuestCreateEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 424:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::NONE;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CMD_ID;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::ENET_CHANNEL_ID;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::ENET_IS_RELIABLE;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CmdId_MIN;
const QuestCreateEntityRsp_CmdId QuestCreateEntityRsp::CmdId_MAX;
const int QuestCreateEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[11];
}
bool QuestDestroyEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 429:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::NONE;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CMD_ID;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::ENET_CHANNEL_ID;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::ENET_IS_RELIABLE;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::IS_ALLOW_CLIENT;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CmdId_MIN;
const QuestDestroyEntityReq_CmdId QuestDestroyEntityReq::CmdId_MAX;
const int QuestDestroyEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[12];
}
bool QuestDestroyEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 478:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::NONE;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CMD_ID;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::ENET_CHANNEL_ID;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::ENET_IS_RELIABLE;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CmdId_MIN;
const QuestDestroyEntityRsp_CmdId QuestDestroyEntityRsp::CmdId_MAX;
const int QuestDestroyEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChapterStateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[13];
}
bool ChapterStateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 469:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChapterStateNotify_CmdId ChapterStateNotify::NONE;
const ChapterStateNotify_CmdId ChapterStateNotify::CMD_ID;
const ChapterStateNotify_CmdId ChapterStateNotify::ENET_CHANNEL_ID;
const ChapterStateNotify_CmdId ChapterStateNotify::ENET_IS_RELIABLE;
const ChapterStateNotify_CmdId ChapterStateNotify::CmdId_MIN;
const ChapterStateNotify_CmdId ChapterStateNotify::CmdId_MAX;
const int ChapterStateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestProgressUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[14];
}
bool QuestProgressUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 406:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::NONE;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CMD_ID;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::ENET_CHANNEL_ID;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::ENET_IS_RELIABLE;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CmdId_MIN;
const QuestProgressUpdateNotify_CmdId QuestProgressUpdateNotify::CmdId_MAX;
const int QuestProgressUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[15];
}
bool QuestUpdateQuestVarReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 439:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::NONE;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CMD_ID;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::ENET_CHANNEL_ID;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::ENET_IS_RELIABLE;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::IS_ALLOW_CLIENT;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CmdId_MIN;
const QuestUpdateQuestVarReq_CmdId QuestUpdateQuestVarReq::CmdId_MAX;
const int QuestUpdateQuestVarReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[16];
}
bool QuestUpdateQuestVarRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 446:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::NONE;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CMD_ID;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::ENET_CHANNEL_ID;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::ENET_IS_RELIABLE;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CmdId_MIN;
const QuestUpdateQuestVarRsp_CmdId QuestUpdateQuestVarRsp::CmdId_MAX;
const int QuestUpdateQuestVarRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestVarNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[17];
}
bool QuestUpdateQuestVarNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 500:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::NONE;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CMD_ID;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::ENET_CHANNEL_ID;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::ENET_IS_RELIABLE;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CmdId_MIN;
const QuestUpdateQuestVarNotify_CmdId QuestUpdateQuestVarNotify::CmdId_MAX;
const int QuestUpdateQuestVarNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyNpcReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[18];
}
bool QuestDestroyNpcReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 492:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::NONE;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CMD_ID;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::ENET_CHANNEL_ID;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::ENET_IS_RELIABLE;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::IS_ALLOW_CLIENT;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CmdId_MIN;
const QuestDestroyNpcReq_CmdId QuestDestroyNpcReq::CmdId_MAX;
const int QuestDestroyNpcReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestDestroyNpcRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[19];
}
bool QuestDestroyNpcRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 488:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::NONE;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CMD_ID;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::ENET_CHANNEL_ID;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::ENET_IS_RELIABLE;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CmdId_MIN;
const QuestDestroyNpcRsp_CmdId QuestDestroyNpcRsp::CmdId_MAX;
const int QuestDestroyNpcRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainStartNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[20];
}
bool BargainStartNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 425:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainStartNotify_CmdId BargainStartNotify::NONE;
const BargainStartNotify_CmdId BargainStartNotify::CMD_ID;
const BargainStartNotify_CmdId BargainStartNotify::ENET_CHANNEL_ID;
const BargainStartNotify_CmdId BargainStartNotify::ENET_IS_RELIABLE;
const BargainStartNotify_CmdId BargainStartNotify::CmdId_MIN;
const BargainStartNotify_CmdId BargainStartNotify::CmdId_MAX;
const int BargainStartNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainOfferPriceReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[21];
}
bool BargainOfferPriceReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 458:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::NONE;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CMD_ID;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::ENET_CHANNEL_ID;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::ENET_IS_RELIABLE;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::IS_ALLOW_CLIENT;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CmdId_MIN;
const BargainOfferPriceReq_CmdId BargainOfferPriceReq::CmdId_MAX;
const int BargainOfferPriceReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainOfferPriceRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[22];
}
bool BargainOfferPriceRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 418:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::NONE;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CMD_ID;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::ENET_CHANNEL_ID;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::ENET_IS_RELIABLE;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CmdId_MIN;
const BargainOfferPriceRsp_CmdId BargainOfferPriceRsp::CmdId_MAX;
const int BargainOfferPriceRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BargainTerminateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[23];
}
bool BargainTerminateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 475:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BargainTerminateNotify_CmdId BargainTerminateNotify::NONE;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CMD_ID;
const BargainTerminateNotify_CmdId BargainTerminateNotify::ENET_CHANNEL_ID;
const BargainTerminateNotify_CmdId BargainTerminateNotify::ENET_IS_RELIABLE;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CmdId_MIN;
const BargainTerminateNotify_CmdId BargainTerminateNotify::CmdId_MAX;
const int BargainTerminateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetBargainDataReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[24];
}
bool GetBargainDataReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 428:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetBargainDataReq_CmdId GetBargainDataReq::NONE;
const GetBargainDataReq_CmdId GetBargainDataReq::CMD_ID;
const GetBargainDataReq_CmdId GetBargainDataReq::ENET_CHANNEL_ID;
const GetBargainDataReq_CmdId GetBargainDataReq::ENET_IS_RELIABLE;
const GetBargainDataReq_CmdId GetBargainDataReq::IS_ALLOW_CLIENT;
const GetBargainDataReq_CmdId GetBargainDataReq::CmdId_MIN;
const GetBargainDataReq_CmdId GetBargainDataReq::CmdId_MAX;
const int GetBargainDataReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetBargainDataRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[25];
}
bool GetBargainDataRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 473:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetBargainDataRsp_CmdId GetBargainDataRsp::NONE;
const GetBargainDataRsp_CmdId GetBargainDataRsp::CMD_ID;
const GetBargainDataRsp_CmdId GetBargainDataRsp::ENET_CHANNEL_ID;
const GetBargainDataRsp_CmdId GetBargainDataRsp::ENET_IS_RELIABLE;
const GetBargainDataRsp_CmdId GetBargainDataRsp::CmdId_MIN;
const GetBargainDataRsp_CmdId GetBargainDataRsp::CmdId_MAX;
const int GetBargainDataRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetAllActivatedBargainDataReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[26];
}
bool GetAllActivatedBargainDataReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 422:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::NONE;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::CMD_ID;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::ENET_CHANNEL_ID;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::ENET_IS_RELIABLE;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::IS_ALLOW_CLIENT;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::CmdId_MIN;
const GetAllActivatedBargainDataReq_CmdId GetAllActivatedBargainDataReq::CmdId_MAX;
const int GetAllActivatedBargainDataReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetAllActivatedBargainDataRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[27];
}
bool GetAllActivatedBargainDataRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 445:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::NONE;
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::CMD_ID;
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::ENET_CHANNEL_ID;
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::ENET_IS_RELIABLE;
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::CmdId_MIN;
const GetAllActivatedBargainDataRsp_CmdId GetAllActivatedBargainDataRsp::CmdId_MAX;
const int GetAllActivatedBargainDataRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerCondMeetQuestListUpdateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[28];
}
bool ServerCondMeetQuestListUpdateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 485:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::NONE;
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::CMD_ID;
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::ENET_CHANNEL_ID;
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::ENET_IS_RELIABLE;
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::CmdId_MIN;
const ServerCondMeetQuestListUpdateNotify_CmdId ServerCondMeetQuestListUpdateNotify::CmdId_MAX;
const int ServerCondMeetQuestListUpdateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestGlobalVarNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[29];
}
bool QuestGlobalVarNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 451:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::NONE;
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::CMD_ID;
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::ENET_CHANNEL_ID;
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::ENET_IS_RELIABLE;
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::CmdId_MIN;
const QuestGlobalVarNotify_CmdId QuestGlobalVarNotify::CmdId_MAX;
const int QuestGlobalVarNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestTransmitReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[30];
}
bool QuestTransmitReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 442:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestTransmitReq_CmdId QuestTransmitReq::NONE;
const QuestTransmitReq_CmdId QuestTransmitReq::CMD_ID;
const QuestTransmitReq_CmdId QuestTransmitReq::ENET_CHANNEL_ID;
const QuestTransmitReq_CmdId QuestTransmitReq::ENET_IS_RELIABLE;
const QuestTransmitReq_CmdId QuestTransmitReq::IS_ALLOW_CLIENT;
const QuestTransmitReq_CmdId QuestTransmitReq::CmdId_MIN;
const QuestTransmitReq_CmdId QuestTransmitReq::CmdId_MAX;
const int QuestTransmitReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestTransmitRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[31];
}
bool QuestTransmitRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 450:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestTransmitRsp_CmdId QuestTransmitRsp::NONE;
const QuestTransmitRsp_CmdId QuestTransmitRsp::CMD_ID;
const QuestTransmitRsp_CmdId QuestTransmitRsp::ENET_CHANNEL_ID;
const QuestTransmitRsp_CmdId QuestTransmitRsp::ENET_IS_RELIABLE;
const QuestTransmitRsp_CmdId QuestTransmitRsp::CmdId_MIN;
const QuestTransmitRsp_CmdId QuestTransmitRsp::CmdId_MAX;
const int QuestTransmitRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PersonalLineAllDataReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[32];
}
bool PersonalLineAllDataReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 430:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::NONE;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::CMD_ID;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::ENET_CHANNEL_ID;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::ENET_IS_RELIABLE;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::IS_ALLOW_CLIENT;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::CmdId_MIN;
const PersonalLineAllDataReq_CmdId PersonalLineAllDataReq::CmdId_MAX;
const int PersonalLineAllDataReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LockedPersonallineData_LockReason_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[33];
}
bool LockedPersonallineData_LockReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LockedPersonallineData_LockReason LockedPersonallineData::LEVEL;
const LockedPersonallineData_LockReason LockedPersonallineData::QUEST;
const LockedPersonallineData_LockReason LockedPersonallineData::LockReason_MIN;
const LockedPersonallineData_LockReason LockedPersonallineData::LockReason_MAX;
const int LockedPersonallineData::LockReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PersonalLineAllDataRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[34];
}
bool PersonalLineAllDataRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 443:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::NONE;
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::CMD_ID;
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::ENET_CHANNEL_ID;
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::ENET_IS_RELIABLE;
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::CmdId_MIN;
const PersonalLineAllDataRsp_CmdId PersonalLineAllDataRsp::CmdId_MAX;
const int PersonalLineAllDataRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RedeemLegendaryKeyReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[35];
}
bool RedeemLegendaryKeyReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 435:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::NONE;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::CMD_ID;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::ENET_CHANNEL_ID;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::ENET_IS_RELIABLE;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::IS_ALLOW_CLIENT;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::CmdId_MIN;
const RedeemLegendaryKeyReq_CmdId RedeemLegendaryKeyReq::CmdId_MAX;
const int RedeemLegendaryKeyReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RedeemLegendaryKeyRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[36];
}
bool RedeemLegendaryKeyRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 407:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::NONE;
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::CMD_ID;
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::ENET_CHANNEL_ID;
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::ENET_IS_RELIABLE;
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::CmdId_MIN;
const RedeemLegendaryKeyRsp_CmdId RedeemLegendaryKeyRsp::CmdId_MAX;
const int RedeemLegendaryKeyRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnlockPersonalLineReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[37];
}
bool UnlockPersonalLineReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 452:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::NONE;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::CMD_ID;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::ENET_CHANNEL_ID;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::ENET_IS_RELIABLE;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::IS_ALLOW_CLIENT;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::CmdId_MIN;
const UnlockPersonalLineReq_CmdId UnlockPersonalLineReq::CmdId_MAX;
const int UnlockPersonalLineReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnlockPersonalLineRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[38];
}
bool UnlockPersonalLineRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 403:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::NONE;
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::CMD_ID;
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::ENET_CHANNEL_ID;
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::ENET_IS_RELIABLE;
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::CmdId_MIN;
const UnlockPersonalLineRsp_CmdId UnlockPersonalLineRsp::CmdId_MAX;
const int UnlockPersonalLineRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CancelFinishParentQuestNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[39];
}
bool CancelFinishParentQuestNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 453:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::NONE;
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::CMD_ID;
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::ENET_CHANNEL_ID;
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::ENET_IS_RELIABLE;
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::CmdId_MIN;
const CancelFinishParentQuestNotify_CmdId CancelFinishParentQuestNotify::CmdId_MAX;
const int CancelFinishParentQuestNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestUpdateQuestTimeVarNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[40];
}
bool QuestUpdateQuestTimeVarNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 436:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::NONE;
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::CMD_ID;
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::ENET_CHANNEL_ID;
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::ENET_IS_RELIABLE;
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::CmdId_MIN;
const QuestUpdateQuestTimeVarNotify_CmdId QuestUpdateQuestTimeVarNotify::CmdId_MAX;
const int QuestUpdateQuestTimeVarNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PersonalLineNewUnlockNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[41];
}
bool PersonalLineNewUnlockNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 494:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::NONE;
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::CMD_ID;
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::ENET_CHANNEL_ID;
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::ENET_IS_RELIABLE;
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::CmdId_MIN;
const PersonalLineNewUnlockNotify_CmdId PersonalLineNewUnlockNotify::CmdId_MAX;
const int PersonalLineNewUnlockNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NpcTalkStateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[42];
}
bool NpcTalkStateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 481:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::NONE;
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::CMD_ID;
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::ENET_CHANNEL_ID;
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::ENET_IS_RELIABLE;
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::CmdId_MIN;
const NpcTalkStateNotify_CmdId NpcTalkStateNotify::CmdId_MAX;
const int NpcTalkStateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestLackingResourceReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[43];
}
bool GetQuestLackingResourceReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 464:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::NONE;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::CMD_ID;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::ENET_CHANNEL_ID;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::ENET_IS_RELIABLE;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::IS_ALLOW_CLIENT;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::CmdId_MIN;
const GetQuestLackingResourceReq_CmdId GetQuestLackingResourceReq::CmdId_MAX;
const int GetQuestLackingResourceReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetQuestLackingResourceRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[44];
}
bool GetQuestLackingResourceRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 483:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::NONE;
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::CMD_ID;
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::ENET_CHANNEL_ID;
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::ENET_IS_RELIABLE;
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::CmdId_MIN;
const GetQuestLackingResourceRsp_CmdId GetQuestLackingResourceRsp::CmdId_MAX;
const int GetQuestLackingResourceRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetParentQuestVideoKeyReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[45];
}
bool GetParentQuestVideoKeyReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 479:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::NONE;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::CMD_ID;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::ENET_CHANNEL_ID;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::ENET_IS_RELIABLE;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::IS_ALLOW_CLIENT;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::CmdId_MIN;
const GetParentQuestVideoKeyReq_CmdId GetParentQuestVideoKeyReq::CmdId_MAX;
const int GetParentQuestVideoKeyReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetParentQuestVideoKeyRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[46];
}
bool GetParentQuestVideoKeyRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 427:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::NONE;
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::CMD_ID;
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::ENET_CHANNEL_ID;
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::ENET_IS_RELIABLE;
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::CmdId_MIN;
const GetParentQuestVideoKeyRsp_CmdId GetParentQuestVideoKeyRsp::CmdId_MAX;
const int GetParentQuestVideoKeyRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ParentQuestInferenceDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[47];
}
bool ParentQuestInferenceDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 463:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::NONE;
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::CMD_ID;
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::ENET_CHANNEL_ID;
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::ENET_IS_RELIABLE;
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::CmdId_MIN;
const ParentQuestInferenceDataNotify_CmdId ParentQuestInferenceDataNotify::CmdId_MAX;
const int ParentQuestInferenceDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InterpretInferenceWordReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[48];
}
bool InterpretInferenceWordReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 423:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::NONE;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::CMD_ID;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::ENET_CHANNEL_ID;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::ENET_IS_RELIABLE;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::IS_ALLOW_CLIENT;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::CmdId_MIN;
const InterpretInferenceWordReq_CmdId InterpretInferenceWordReq::CmdId_MAX;
const int InterpretInferenceWordReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InterpretInferenceWordRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[49];
}
bool InterpretInferenceWordRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 415:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::NONE;
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::CMD_ID;
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::ENET_CHANNEL_ID;
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::ENET_IS_RELIABLE;
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::CmdId_MIN;
const InterpretInferenceWordRsp_CmdId InterpretInferenceWordRsp::CmdId_MAX;
const int InterpretInferenceWordRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AssociateInferenceWordReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[50];
}
bool AssociateInferenceWordReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 456:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::NONE;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::CMD_ID;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::ENET_CHANNEL_ID;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::ENET_IS_RELIABLE;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::IS_ALLOW_CLIENT;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::CmdId_MIN;
const AssociateInferenceWordReq_CmdId AssociateInferenceWordReq::CmdId_MAX;
const int AssociateInferenceWordReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AssociateInferenceWordRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[51];
}
bool AssociateInferenceWordRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 490:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::NONE;
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::CMD_ID;
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::ENET_CHANNEL_ID;
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::ENET_IS_RELIABLE;
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::CmdId_MIN;
const AssociateInferenceWordRsp_CmdId AssociateInferenceWordRsp::CmdId_MAX;
const int AssociateInferenceWordRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SubmitInferenceWordReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[52];
}
bool SubmitInferenceWordReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 454:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::NONE;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::CMD_ID;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::ENET_CHANNEL_ID;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::ENET_IS_RELIABLE;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::IS_ALLOW_CLIENT;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::CmdId_MIN;
const SubmitInferenceWordReq_CmdId SubmitInferenceWordReq::CmdId_MAX;
const int SubmitInferenceWordReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SubmitInferenceWordRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[53];
}
bool SubmitInferenceWordRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 495:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::NONE;
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::CMD_ID;
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::ENET_CHANNEL_ID;
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::ENET_IS_RELIABLE;
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::CmdId_MIN;
const SubmitInferenceWordRsp_CmdId SubmitInferenceWordRsp::CmdId_MAX;
const int SubmitInferenceWordRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestRenameAvatarReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[54];
}
bool QuestRenameAvatarReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 467:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::NONE;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::CMD_ID;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::ENET_CHANNEL_ID;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::ENET_IS_RELIABLE;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::IS_ALLOW_CLIENT;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::CmdId_MIN;
const QuestRenameAvatarReq_CmdId QuestRenameAvatarReq::CmdId_MAX;
const int QuestRenameAvatarReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuestRenameAvatarRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[55];
}
bool QuestRenameAvatarRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 401:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::NONE;
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::CMD_ID;
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::ENET_CHANNEL_ID;
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::ENET_IS_RELIABLE;
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::CmdId_MIN;
const QuestRenameAvatarRsp_CmdId QuestRenameAvatarRsp::CmdId_MAX;
const int QuestRenameAvatarRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChapterState_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[56];
}
bool ChapterState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BargainResultType_descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_enum_descriptors[57];
}
bool BargainResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestListNotify::kQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestListNotify::QuestListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestListNotify)
}
QuestListNotify::QuestListNotify(const QuestListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_list_(from.quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.QuestListNotify)
}

void QuestListNotify::SharedCtor() {
  _cached_size_ = 0;
}

QuestListNotify::~QuestListNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestListNotify)
  SharedDtor();
}

void QuestListNotify::SharedDtor() {
}

void QuestListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestListNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestListNotify& QuestListNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestListNotify* QuestListNotify::New(::google::protobuf::Arena* arena) const {
  QuestListNotify* n = new QuestListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool QuestListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Quest quest_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestListNotify)
  return false;
#undef DO_
}

void QuestListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestListNotify)
}

::google::protobuf::uint8* QuestListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestListNotify)
  return target;
}

size_t QuestListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestListNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Quest quest_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestListNotify)
    MergeFrom(*source);
  }
}

void QuestListNotify::MergeFrom(const QuestListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_list_.MergeFrom(from.quest_list_);
}

void QuestListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestListNotify::CopyFrom(const QuestListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestListNotify::IsInitialized() const {
  return true;
}

void QuestListNotify::Swap(QuestListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestListNotify::InternalSwap(QuestListNotify* other) {
  using std::swap;
  quest_list_.InternalSwap(&other->quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestListNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestListNotify

// repeated .proto.Quest quest_list = 13;
int QuestListNotify::quest_list_size() const {
  return quest_list_.size();
}
void QuestListNotify::clear_quest_list() {
  quest_list_.Clear();
}
const ::proto::Quest& QuestListNotify::quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestListNotify.quest_list)
  return quest_list_.Get(index);
}
::proto::Quest* QuestListNotify::mutable_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestListNotify.quest_list)
  return quest_list_.Mutable(index);
}
::proto::Quest* QuestListNotify::add_quest_list() {
  // @@protoc_insertion_point(field_add:proto.QuestListNotify.quest_list)
  return quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Quest >*
QuestListNotify::mutable_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestListNotify.quest_list)
  return &quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Quest >&
QuestListNotify::quest_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestListNotify.quest_list)
  return quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestListUpdateNotify::kQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestListUpdateNotify::QuestListUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestListUpdateNotify)
}
QuestListUpdateNotify::QuestListUpdateNotify(const QuestListUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_list_(from.quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.QuestListUpdateNotify)
}

void QuestListUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

QuestListUpdateNotify::~QuestListUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestListUpdateNotify)
  SharedDtor();
}

void QuestListUpdateNotify::SharedDtor() {
}

void QuestListUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestListUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestListUpdateNotify& QuestListUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestListUpdateNotify* QuestListUpdateNotify::New(::google::protobuf::Arena* arena) const {
  QuestListUpdateNotify* n = new QuestListUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestListUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool QuestListUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestListUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Quest quest_list = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestListUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestListUpdateNotify)
  return false;
#undef DO_
}

void QuestListUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestListUpdateNotify)
}

::google::protobuf::uint8* QuestListUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Quest quest_list = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestListUpdateNotify)
  return target;
}

size_t QuestListUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestListUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Quest quest_list = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestListUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestListUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestListUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestListUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestListUpdateNotify)
    MergeFrom(*source);
  }
}

void QuestListUpdateNotify::MergeFrom(const QuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_list_.MergeFrom(from.quest_list_);
}

void QuestListUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestListUpdateNotify::CopyFrom(const QuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestListUpdateNotify::IsInitialized() const {
  return true;
}

void QuestListUpdateNotify::Swap(QuestListUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestListUpdateNotify::InternalSwap(QuestListUpdateNotify* other) {
  using std::swap;
  quest_list_.InternalSwap(&other->quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestListUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestListUpdateNotify

// repeated .proto.Quest quest_list = 13;
int QuestListUpdateNotify::quest_list_size() const {
  return quest_list_.size();
}
void QuestListUpdateNotify::clear_quest_list() {
  quest_list_.Clear();
}
const ::proto::Quest& QuestListUpdateNotify::quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Get(index);
}
::proto::Quest* QuestListUpdateNotify::mutable_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Mutable(index);
}
::proto::Quest* QuestListUpdateNotify::add_quest_list() {
  // @@protoc_insertion_point(field_add:proto.QuestListUpdateNotify.quest_list)
  return quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Quest >*
QuestListUpdateNotify::mutable_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestListUpdateNotify.quest_list)
  return &quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Quest >&
QuestListUpdateNotify::quest_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestListUpdateNotify.quest_list)
  return quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDelNotify::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDelNotify::QuestDelNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDelNotify)
}
QuestDelNotify::QuestDelNotify(const QuestDelNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestDelNotify)
}

void QuestDelNotify::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestDelNotify::~QuestDelNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestDelNotify)
  SharedDtor();
}

void QuestDelNotify::SharedDtor() {
}

void QuestDelNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDelNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDelNotify& QuestDelNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDelNotify* QuestDelNotify::New(::google::protobuf::Arena* arena) const {
  QuestDelNotify* n = new QuestDelNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDelNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestDelNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDelNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDelNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDelNotify)
  return false;
#undef DO_
}

void QuestDelNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDelNotify)
}

::google::protobuf::uint8* QuestDelNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDelNotify)
  return target;
}

size_t QuestDelNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDelNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDelNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDelNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDelNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDelNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDelNotify)
    MergeFrom(*source);
  }
}

void QuestDelNotify::MergeFrom(const QuestDelNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestDelNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDelNotify::CopyFrom(const QuestDelNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDelNotify::IsInitialized() const {
  return true;
}

void QuestDelNotify::Swap(QuestDelNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDelNotify::InternalSwap(QuestDelNotify* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDelNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDelNotify

// uint32 quest_id = 15;
void QuestDelNotify::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDelNotify::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDelNotify.quest_id)
  return quest_id_;
}
void QuestDelNotify::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDelNotify.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildQuest::kQuestConfigIdFieldNumber;
const int ChildQuest::kStateFieldNumber;
const int ChildQuest::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildQuest::ChildQuest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChildQuest)
}
ChildQuest::ChildQuest(const ChildQuest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_config_id_) -
    reinterpret_cast<char*>(&state_)) + sizeof(quest_config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ChildQuest)
}

void ChildQuest::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_config_id_) -
      reinterpret_cast<char*>(&state_)) + sizeof(quest_config_id_));
  _cached_size_ = 0;
}

ChildQuest::~ChildQuest() {
  // @@protoc_insertion_point(destructor:proto.ChildQuest)
  SharedDtor();
}

void ChildQuest::SharedDtor() {
}

void ChildQuest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChildQuest::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChildQuest& ChildQuest::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChildQuest* ChildQuest::New(::google::protobuf::Arena* arena) const {
  ChildQuest* n = new ChildQuest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChildQuest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_config_id_) -
      reinterpret_cast<char*>(&state_)) + sizeof(quest_config_id_));
  _internal_metadata_.Clear();
}

bool ChildQuest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChildQuest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_config_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChildQuest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChildQuest)
  return false;
#undef DO_
}

void ChildQuest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quest_id(), output);
  }

  // uint32 quest_config_id = 10;
  if (this->quest_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->quest_config_id(), output);
  }

  // uint32 state = 12;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChildQuest)
}

::google::protobuf::uint8* ChildQuest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChildQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quest_id(), target);
  }

  // uint32 quest_config_id = 10;
  if (this->quest_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->quest_config_id(), target);
  }

  // uint32 state = 12;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChildQuest)
  return target;
}

size_t ChildQuest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChildQuest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 state = 12;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 quest_config_id = 10;
  if (this->quest_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChildQuest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChildQuest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChildQuest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildQuest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChildQuest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChildQuest)
    MergeFrom(*source);
  }
}

void ChildQuest::MergeFrom(const ChildQuest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChildQuest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.quest_config_id() != 0) {
    set_quest_config_id(from.quest_config_id());
  }
}

void ChildQuest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChildQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildQuest::CopyFrom(const ChildQuest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChildQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildQuest::IsInitialized() const {
  return true;
}

void ChildQuest::Swap(ChildQuest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildQuest::InternalSwap(ChildQuest* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(quest_id_, other->quest_id_);
  swap(quest_config_id_, other->quest_config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChildQuest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChildQuest

// uint32 quest_config_id = 10;
void ChildQuest::clear_quest_config_id() {
  quest_config_id_ = 0u;
}
::google::protobuf::uint32 ChildQuest::quest_config_id() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.quest_config_id)
  return quest_config_id_;
}
void ChildQuest::set_quest_config_id(::google::protobuf::uint32 value) {
  
  quest_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.quest_config_id)
}

// uint32 state = 12;
void ChildQuest::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 ChildQuest::state() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.state)
  return state_;
}
void ChildQuest::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.state)
}

// uint32 quest_id = 5;
void ChildQuest::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 ChildQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ChildQuest.quest_id)
  return quest_id_;
}
void ChildQuest::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChildQuest.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentQuestRandomInfo::kFactorListFieldNumber;
const int ParentQuestRandomInfo::kTemplateIdFieldNumber;
const int ParentQuestRandomInfo::kEntranceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentQuestRandomInfo::ParentQuestRandomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParentQuestRandomInfo)
}
ParentQuestRandomInfo::ParentQuestRandomInfo(const ParentQuestRandomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      factor_list_(from.factor_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entrance_id_, &from.entrance_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&template_id_) -
    reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ParentQuestRandomInfo)
}

void ParentQuestRandomInfo::SharedCtor() {
  ::memset(&entrance_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template_id_) -
      reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  _cached_size_ = 0;
}

ParentQuestRandomInfo::~ParentQuestRandomInfo() {
  // @@protoc_insertion_point(destructor:proto.ParentQuestRandomInfo)
  SharedDtor();
}

void ParentQuestRandomInfo::SharedDtor() {
}

void ParentQuestRandomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentQuestRandomInfo::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentQuestRandomInfo& ParentQuestRandomInfo::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentQuestRandomInfo* ParentQuestRandomInfo::New(::google::protobuf::Arena* arena) const {
  ParentQuestRandomInfo* n = new ParentQuestRandomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentQuestRandomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  factor_list_.Clear();
  ::memset(&entrance_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template_id_) -
      reinterpret_cast<char*>(&entrance_id_)) + sizeof(template_id_));
  _internal_metadata_.Clear();
}

bool ParentQuestRandomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParentQuestRandomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entrance_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entrance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 factor_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_factor_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_factor_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 template_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParentQuestRandomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParentQuestRandomInfo)
  return false;
#undef DO_
}

void ParentQuestRandomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entrance_id(), output);
  }

  // repeated uint32 factor_list = 3;
  if (this->factor_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _factor_list_cached_byte_size_));
  }
  for (int i = 0, n = this->factor_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->factor_list(i), output);
  }

  // uint32 template_id = 6;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->template_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParentQuestRandomInfo)
}

::google::protobuf::uint8* ParentQuestRandomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParentQuestRandomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entrance_id(), target);
  }

  // repeated uint32 factor_list = 3;
  if (this->factor_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _factor_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->factor_list_, target);
  }

  // uint32 template_id = 6;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->template_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParentQuestRandomInfo)
  return target;
}

size_t ParentQuestRandomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParentQuestRandomInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 factor_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->factor_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _factor_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 entrance_id = 1;
  if (this->entrance_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entrance_id());
  }

  // uint32 template_id = 6;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->template_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentQuestRandomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParentQuestRandomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentQuestRandomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentQuestRandomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParentQuestRandomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParentQuestRandomInfo)
    MergeFrom(*source);
  }
}

void ParentQuestRandomInfo::MergeFrom(const ParentQuestRandomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParentQuestRandomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  factor_list_.MergeFrom(from.factor_list_);
  if (from.entrance_id() != 0) {
    set_entrance_id(from.entrance_id());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
}

void ParentQuestRandomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParentQuestRandomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentQuestRandomInfo::CopyFrom(const ParentQuestRandomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParentQuestRandomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentQuestRandomInfo::IsInitialized() const {
  return true;
}

void ParentQuestRandomInfo::Swap(ParentQuestRandomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentQuestRandomInfo::InternalSwap(ParentQuestRandomInfo* other) {
  using std::swap;
  factor_list_.InternalSwap(&other->factor_list_);
  swap(entrance_id_, other->entrance_id_);
  swap(template_id_, other->template_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentQuestRandomInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentQuestRandomInfo

// repeated uint32 factor_list = 3;
int ParentQuestRandomInfo::factor_list_size() const {
  return factor_list_.size();
}
void ParentQuestRandomInfo::clear_factor_list() {
  factor_list_.Clear();
}
::google::protobuf::uint32 ParentQuestRandomInfo::factor_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.factor_list)
  return factor_list_.Get(index);
}
void ParentQuestRandomInfo::set_factor_list(int index, ::google::protobuf::uint32 value) {
  factor_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.factor_list)
}
void ParentQuestRandomInfo::add_factor_list(::google::protobuf::uint32 value) {
  factor_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParentQuestRandomInfo.factor_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ParentQuestRandomInfo::factor_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuestRandomInfo.factor_list)
  return factor_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ParentQuestRandomInfo::mutable_factor_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuestRandomInfo.factor_list)
  return &factor_list_;
}

// uint32 template_id = 6;
void ParentQuestRandomInfo::clear_template_id() {
  template_id_ = 0u;
}
::google::protobuf::uint32 ParentQuestRandomInfo::template_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.template_id)
  return template_id_;
}
void ParentQuestRandomInfo::set_template_id(::google::protobuf::uint32 value) {
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.template_id)
}

// uint32 entrance_id = 1;
void ParentQuestRandomInfo::clear_entrance_id() {
  entrance_id_ = 0u;
}
::google::protobuf::uint32 ParentQuestRandomInfo::entrance_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestRandomInfo.entrance_id)
  return entrance_id_;
}
void ParentQuestRandomInfo::set_entrance_id(::google::protobuf::uint32 value) {
  
  entrance_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuestRandomInfo.entrance_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfernceWordInfo::kWordIdFieldNumber;
const int InfernceWordInfo::kIsInterpretFieldNumber;
const int InfernceWordInfo::kIsSubmitFieldNumber;
const int InfernceWordInfo::kIsAssociateFieldNumber;
const int InfernceWordInfo::kUnlockByWordIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfernceWordInfo::InfernceWordInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InfernceWordInfo)
}
InfernceWordInfo::InfernceWordInfo(const InfernceWordInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_interpret_, &from.is_interpret_,
    static_cast<size_t>(reinterpret_cast<char*>(&unlock_by_word_id_) -
    reinterpret_cast<char*>(&is_interpret_)) + sizeof(unlock_by_word_id_));
  // @@protoc_insertion_point(copy_constructor:proto.InfernceWordInfo)
}

void InfernceWordInfo::SharedCtor() {
  ::memset(&is_interpret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlock_by_word_id_) -
      reinterpret_cast<char*>(&is_interpret_)) + sizeof(unlock_by_word_id_));
  _cached_size_ = 0;
}

InfernceWordInfo::~InfernceWordInfo() {
  // @@protoc_insertion_point(destructor:proto.InfernceWordInfo)
  SharedDtor();
}

void InfernceWordInfo::SharedDtor() {
}

void InfernceWordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfernceWordInfo::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfernceWordInfo& InfernceWordInfo::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InfernceWordInfo* InfernceWordInfo::New(::google::protobuf::Arena* arena) const {
  InfernceWordInfo* n = new InfernceWordInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfernceWordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InfernceWordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_interpret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlock_by_word_id_) -
      reinterpret_cast<char*>(&is_interpret_)) + sizeof(unlock_by_word_id_));
  _internal_metadata_.Clear();
}

bool InfernceWordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InfernceWordInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_associate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_associate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_submit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_submit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 word_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_interpret = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_interpret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unlock_by_word_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlock_by_word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InfernceWordInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InfernceWordInfo)
  return false;
#undef DO_
}

void InfernceWordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InfernceWordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_associate = 3;
  if (this->is_associate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_associate(), output);
  }

  // bool is_submit = 4;
  if (this->is_submit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_submit(), output);
  }

  // uint32 word_id = 5;
  if (this->word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->word_id(), output);
  }

  // bool is_interpret = 7;
  if (this->is_interpret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_interpret(), output);
  }

  // uint32 unlock_by_word_id = 13;
  if (this->unlock_by_word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->unlock_by_word_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InfernceWordInfo)
}

::google::protobuf::uint8* InfernceWordInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InfernceWordInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_associate = 3;
  if (this->is_associate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_associate(), target);
  }

  // bool is_submit = 4;
  if (this->is_submit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_submit(), target);
  }

  // uint32 word_id = 5;
  if (this->word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->word_id(), target);
  }

  // bool is_interpret = 7;
  if (this->is_interpret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_interpret(), target);
  }

  // uint32 unlock_by_word_id = 13;
  if (this->unlock_by_word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->unlock_by_word_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InfernceWordInfo)
  return target;
}

size_t InfernceWordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InfernceWordInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_interpret = 7;
  if (this->is_interpret() != 0) {
    total_size += 1 + 1;
  }

  // bool is_submit = 4;
  if (this->is_submit() != 0) {
    total_size += 1 + 1;
  }

  // bool is_associate = 3;
  if (this->is_associate() != 0) {
    total_size += 1 + 1;
  }

  // uint32 word_id = 5;
  if (this->word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->word_id());
  }

  // uint32 unlock_by_word_id = 13;
  if (this->unlock_by_word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unlock_by_word_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfernceWordInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InfernceWordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InfernceWordInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfernceWordInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InfernceWordInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InfernceWordInfo)
    MergeFrom(*source);
  }
}

void InfernceWordInfo::MergeFrom(const InfernceWordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InfernceWordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_interpret() != 0) {
    set_is_interpret(from.is_interpret());
  }
  if (from.is_submit() != 0) {
    set_is_submit(from.is_submit());
  }
  if (from.is_associate() != 0) {
    set_is_associate(from.is_associate());
  }
  if (from.word_id() != 0) {
    set_word_id(from.word_id());
  }
  if (from.unlock_by_word_id() != 0) {
    set_unlock_by_word_id(from.unlock_by_word_id());
  }
}

void InfernceWordInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InfernceWordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfernceWordInfo::CopyFrom(const InfernceWordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InfernceWordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfernceWordInfo::IsInitialized() const {
  return true;
}

void InfernceWordInfo::Swap(InfernceWordInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfernceWordInfo::InternalSwap(InfernceWordInfo* other) {
  using std::swap;
  swap(is_interpret_, other->is_interpret_);
  swap(is_submit_, other->is_submit_);
  swap(is_associate_, other->is_associate_);
  swap(word_id_, other->word_id_);
  swap(unlock_by_word_id_, other->unlock_by_word_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfernceWordInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfernceWordInfo

// uint32 word_id = 5;
void InfernceWordInfo::clear_word_id() {
  word_id_ = 0u;
}
::google::protobuf::uint32 InfernceWordInfo::word_id() const {
  // @@protoc_insertion_point(field_get:proto.InfernceWordInfo.word_id)
  return word_id_;
}
void InfernceWordInfo::set_word_id(::google::protobuf::uint32 value) {
  
  word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InfernceWordInfo.word_id)
}

// bool is_interpret = 7;
void InfernceWordInfo::clear_is_interpret() {
  is_interpret_ = false;
}
bool InfernceWordInfo::is_interpret() const {
  // @@protoc_insertion_point(field_get:proto.InfernceWordInfo.is_interpret)
  return is_interpret_;
}
void InfernceWordInfo::set_is_interpret(bool value) {
  
  is_interpret_ = value;
  // @@protoc_insertion_point(field_set:proto.InfernceWordInfo.is_interpret)
}

// bool is_submit = 4;
void InfernceWordInfo::clear_is_submit() {
  is_submit_ = false;
}
bool InfernceWordInfo::is_submit() const {
  // @@protoc_insertion_point(field_get:proto.InfernceWordInfo.is_submit)
  return is_submit_;
}
void InfernceWordInfo::set_is_submit(bool value) {
  
  is_submit_ = value;
  // @@protoc_insertion_point(field_set:proto.InfernceWordInfo.is_submit)
}

// bool is_associate = 3;
void InfernceWordInfo::clear_is_associate() {
  is_associate_ = false;
}
bool InfernceWordInfo::is_associate() const {
  // @@protoc_insertion_point(field_get:proto.InfernceWordInfo.is_associate)
  return is_associate_;
}
void InfernceWordInfo::set_is_associate(bool value) {
  
  is_associate_ = value;
  // @@protoc_insertion_point(field_set:proto.InfernceWordInfo.is_associate)
}

// uint32 unlock_by_word_id = 13;
void InfernceWordInfo::clear_unlock_by_word_id() {
  unlock_by_word_id_ = 0u;
}
::google::protobuf::uint32 InfernceWordInfo::unlock_by_word_id() const {
  // @@protoc_insertion_point(field_get:proto.InfernceWordInfo.unlock_by_word_id)
  return unlock_by_word_id_;
}
void InfernceWordInfo::set_unlock_by_word_id(::google::protobuf::uint32 value) {
  
  unlock_by_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InfernceWordInfo.unlock_by_word_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferencePageInfo::kPageIdFieldNumber;
const int InferencePageInfo::kUnlockWordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferencePageInfo::InferencePageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InferencePageInfo)
}
InferencePageInfo::InferencePageInfo(const InferencePageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlock_word_list_(from.unlock_word_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_id_ = from.page_id_;
  // @@protoc_insertion_point(copy_constructor:proto.InferencePageInfo)
}

void InferencePageInfo::SharedCtor() {
  page_id_ = 0u;
  _cached_size_ = 0;
}

InferencePageInfo::~InferencePageInfo() {
  // @@protoc_insertion_point(destructor:proto.InferencePageInfo)
  SharedDtor();
}

void InferencePageInfo::SharedDtor() {
}

void InferencePageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InferencePageInfo::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferencePageInfo& InferencePageInfo::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InferencePageInfo* InferencePageInfo::New(::google::protobuf::Arena* arena) const {
  InferencePageInfo* n = new InferencePageInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InferencePageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InferencePageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlock_word_list_.Clear();
  page_id_ = 0u;
  _internal_metadata_.Clear();
}

bool InferencePageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InferencePageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.InfernceWordInfo unlock_word_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unlock_word_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InferencePageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InferencePageInfo)
  return false;
#undef DO_
}

void InferencePageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InferencePageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 6;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->page_id(), output);
  }

  // repeated .proto.InfernceWordInfo unlock_word_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unlock_word_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->unlock_word_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InferencePageInfo)
}

::google::protobuf::uint8* InferencePageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InferencePageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 6;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->page_id(), target);
  }

  // repeated .proto.InfernceWordInfo unlock_word_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unlock_word_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->unlock_word_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InferencePageInfo)
  return target;
}

size_t InferencePageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InferencePageInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InfernceWordInfo unlock_word_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->unlock_word_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unlock_word_list(static_cast<int>(i)));
    }
  }

  // uint32 page_id = 6;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InferencePageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InferencePageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InferencePageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferencePageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InferencePageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InferencePageInfo)
    MergeFrom(*source);
  }
}

void InferencePageInfo::MergeFrom(const InferencePageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InferencePageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlock_word_list_.MergeFrom(from.unlock_word_list_);
  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
}

void InferencePageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InferencePageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferencePageInfo::CopyFrom(const InferencePageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InferencePageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferencePageInfo::IsInitialized() const {
  return true;
}

void InferencePageInfo::Swap(InferencePageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferencePageInfo::InternalSwap(InferencePageInfo* other) {
  using std::swap;
  unlock_word_list_.InternalSwap(&other->unlock_word_list_);
  swap(page_id_, other->page_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InferencePageInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InferencePageInfo

// uint32 page_id = 6;
void InferencePageInfo::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 InferencePageInfo::page_id() const {
  // @@protoc_insertion_point(field_get:proto.InferencePageInfo.page_id)
  return page_id_;
}
void InferencePageInfo::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InferencePageInfo.page_id)
}

// repeated .proto.InfernceWordInfo unlock_word_list = 8;
int InferencePageInfo::unlock_word_list_size() const {
  return unlock_word_list_.size();
}
void InferencePageInfo::clear_unlock_word_list() {
  unlock_word_list_.Clear();
}
const ::proto::InfernceWordInfo& InferencePageInfo::unlock_word_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.InferencePageInfo.unlock_word_list)
  return unlock_word_list_.Get(index);
}
::proto::InfernceWordInfo* InferencePageInfo::mutable_unlock_word_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.InferencePageInfo.unlock_word_list)
  return unlock_word_list_.Mutable(index);
}
::proto::InfernceWordInfo* InferencePageInfo::add_unlock_word_list() {
  // @@protoc_insertion_point(field_add:proto.InferencePageInfo.unlock_word_list)
  return unlock_word_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InfernceWordInfo >*
InferencePageInfo::mutable_unlock_word_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.InferencePageInfo.unlock_word_list)
  return &unlock_word_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InfernceWordInfo >&
InferencePageInfo::unlock_word_list() const {
  // @@protoc_insertion_point(field_list:proto.InferencePageInfo.unlock_word_list)
  return unlock_word_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ParentQuest::ParentQuest_TimeVarMapEntry::ParentQuest_TimeVarMapEntry() {}
ParentQuest::ParentQuest_TimeVarMapEntry::ParentQuest_TimeVarMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ParentQuest::ParentQuest_TimeVarMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[7];
}
void ParentQuest::ParentQuest_TimeVarMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ParentQuest::ParentQuest_TimeVarMapEntry::MergeFrom(const ParentQuest_TimeVarMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentQuest::kQuestVarFieldNumber;
const int ParentQuest::kTimeVarMapFieldNumber;
const int ParentQuest::kParentQuestStateFieldNumber;
const int ParentQuest::kIsFinishedFieldNumber;
const int ParentQuest::kInferencePageListFieldNumber;
const int ParentQuest::kRandomInfoFieldNumber;
const int ParentQuest::kParentQuestIdFieldNumber;
const int ParentQuest::kIsRandomFieldNumber;
const int ParentQuest::kVideoKeyFieldNumber;
const int ParentQuest::kQuestVarSeqFieldNumber;
const int ParentQuest::kChildQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentQuest::ParentQuest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParentQuest)
}
ParentQuest::ParentQuest(const ParentQuest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inference_page_list_(from.inference_page_list_),
      quest_var_(from.quest_var_),
      child_quest_list_(from.child_quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_var_map_.MergeFrom(from.time_var_map_);
  if (from.has_random_info()) {
    random_info_ = new ::proto::ParentQuestRandomInfo(*from.random_info_);
  } else {
    random_info_ = NULL;
  }
  ::memcpy(&video_key_, &from.video_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_state_) -
    reinterpret_cast<char*>(&video_key_)) + sizeof(parent_quest_state_));
  // @@protoc_insertion_point(copy_constructor:proto.ParentQuest)
}

void ParentQuest::SharedCtor() {
  ::memset(&random_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_state_) -
      reinterpret_cast<char*>(&random_info_)) + sizeof(parent_quest_state_));
  _cached_size_ = 0;
}

ParentQuest::~ParentQuest() {
  // @@protoc_insertion_point(destructor:proto.ParentQuest)
  SharedDtor();
}

void ParentQuest::SharedDtor() {
  if (this != internal_default_instance()) delete random_info_;
}

void ParentQuest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentQuest::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentQuest& ParentQuest::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentQuest* ParentQuest::New(::google::protobuf::Arena* arena) const {
  ParentQuest* n = new ParentQuest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentQuest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inference_page_list_.Clear();
  quest_var_.Clear();
  child_quest_list_.Clear();
  time_var_map_.Clear();
  if (GetArenaNoVirtual() == NULL && random_info_ != NULL) {
    delete random_info_;
  }
  random_info_ = NULL;
  ::memset(&video_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_state_) -
      reinterpret_cast<char*>(&video_key_)) + sizeof(parent_quest_state_));
  _internal_metadata_.Clear();
}

bool ParentQuest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParentQuest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 video_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &video_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_var_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_var_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.InferencePageInfo inference_page_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inference_page_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ParentQuestRandomInfo random_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_random_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 quest_var = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quest_var())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_quest_var())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_finished = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChildQuest child_quest_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_child_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_random = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> time_var_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          ParentQuest_TimeVarMapEntry::Parser< ::google::protobuf::internal::MapField<
              ParentQuest_TimeVarMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&time_var_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_state = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParentQuest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParentQuest)
  return false;
#undef DO_
}

void ParentQuest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->parent_quest_id(), output);
  }

  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->video_key(), output);
  }

  // uint32 quest_var_seq = 4;
  if (this->quest_var_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->quest_var_seq(), output);
  }

  // repeated .proto.InferencePageInfo inference_page_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_page_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->inference_page_list(static_cast<int>(i)), output);
  }

  // .proto.ParentQuestRandomInfo random_info = 7;
  if (this->has_random_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->random_info_, output);
  }

  // repeated int32 quest_var = 8;
  if (this->quest_var_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _quest_var_cached_byte_size_));
  }
  for (int i = 0, n = this->quest_var_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->quest_var(i), output);
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_finished(), output);
  }

  // repeated .proto.ChildQuest child_quest_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->child_quest_list(static_cast<int>(i)), output);
  }

  // bool is_random = 11;
  if (this->is_random() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_random(), output);
  }

  // map<uint32, uint32> time_var_map = 12;
  if (!this->time_var_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->time_var_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->time_var_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ParentQuest_TimeVarMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(time_var_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ParentQuest_TimeVarMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it) {
        entry.reset(time_var_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
      }
    }
  }

  // uint32 parent_quest_state = 15;
  if (this->parent_quest_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->parent_quest_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParentQuest)
}

::google::protobuf::uint8* ParentQuest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParentQuest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->parent_quest_id(), target);
  }

  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->video_key(), target);
  }

  // uint32 quest_var_seq = 4;
  if (this->quest_var_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->quest_var_seq(), target);
  }

  // repeated .proto.InferencePageInfo inference_page_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_page_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->inference_page_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.ParentQuestRandomInfo random_info = 7;
  if (this->has_random_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->random_info_, deterministic, target);
  }

  // repeated int32 quest_var = 8;
  if (this->quest_var_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _quest_var_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->quest_var_, target);
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_finished(), target);
  }

  // repeated .proto.ChildQuest child_quest_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->child_quest_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_random = 11;
  if (this->is_random() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_random(), target);
  }

  // map<uint32, uint32> time_var_map = 12;
  if (!this->time_var_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->time_var_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->time_var_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ParentQuest_TimeVarMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(time_var_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ParentQuest_TimeVarMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it) {
        entry.reset(time_var_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 parent_quest_state = 15;
  if (this->parent_quest_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->parent_quest_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParentQuest)
  return target;
}

size_t ParentQuest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParentQuest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InferencePageInfo inference_page_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->inference_page_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inference_page_list(static_cast<int>(i)));
    }
  }

  // repeated int32 quest_var = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->quest_var_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _quest_var_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ChildQuest child_quest_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->child_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->child_quest_list(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> time_var_map = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->time_var_map_size());
  {
    ::google::protobuf::scoped_ptr<ParentQuest_TimeVarMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->time_var_map().begin();
        it != this->time_var_map().end(); ++it) {
      entry.reset(time_var_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.ParentQuestRandomInfo random_info = 7;
  if (this->has_random_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->random_info_);
  }

  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->video_key());
  }

  // uint32 parent_quest_id = 1;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_var_seq = 4;
  if (this->quest_var_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_var_seq());
  }

  // bool is_finished = 9;
  if (this->is_finished() != 0) {
    total_size += 1 + 1;
  }

  // bool is_random = 11;
  if (this->is_random() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_state = 15;
  if (this->parent_quest_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentQuest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParentQuest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentQuest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentQuest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParentQuest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParentQuest)
    MergeFrom(*source);
  }
}

void ParentQuest::MergeFrom(const ParentQuest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParentQuest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inference_page_list_.MergeFrom(from.inference_page_list_);
  quest_var_.MergeFrom(from.quest_var_);
  child_quest_list_.MergeFrom(from.child_quest_list_);
  time_var_map_.MergeFrom(from.time_var_map_);
  if (from.has_random_info()) {
    mutable_random_info()->::proto::ParentQuestRandomInfo::MergeFrom(from.random_info());
  }
  if (from.video_key() != 0) {
    set_video_key(from.video_key());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_var_seq() != 0) {
    set_quest_var_seq(from.quest_var_seq());
  }
  if (from.is_finished() != 0) {
    set_is_finished(from.is_finished());
  }
  if (from.is_random() != 0) {
    set_is_random(from.is_random());
  }
  if (from.parent_quest_state() != 0) {
    set_parent_quest_state(from.parent_quest_state());
  }
}

void ParentQuest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParentQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentQuest::CopyFrom(const ParentQuest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParentQuest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentQuest::IsInitialized() const {
  return true;
}

void ParentQuest::Swap(ParentQuest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentQuest::InternalSwap(ParentQuest* other) {
  using std::swap;
  inference_page_list_.InternalSwap(&other->inference_page_list_);
  quest_var_.InternalSwap(&other->quest_var_);
  child_quest_list_.InternalSwap(&other->child_quest_list_);
  time_var_map_.Swap(&other->time_var_map_);
  swap(random_info_, other->random_info_);
  swap(video_key_, other->video_key_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_var_seq_, other->quest_var_seq_);
  swap(is_finished_, other->is_finished_);
  swap(is_random_, other->is_random_);
  swap(parent_quest_state_, other->parent_quest_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentQuest::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentQuest

// repeated int32 quest_var = 8;
int ParentQuest::quest_var_size() const {
  return quest_var_.size();
}
void ParentQuest::clear_quest_var() {
  quest_var_.Clear();
}
::google::protobuf::int32 ParentQuest::quest_var(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.quest_var)
  return quest_var_.Get(index);
}
void ParentQuest::set_quest_var(int index, ::google::protobuf::int32 value) {
  quest_var_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParentQuest.quest_var)
}
void ParentQuest::add_quest_var(::google::protobuf::int32 value) {
  quest_var_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParentQuest.quest_var)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ParentQuest::quest_var() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuest.quest_var)
  return quest_var_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ParentQuest::mutable_quest_var() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuest.quest_var)
  return &quest_var_;
}

// map<uint32, uint32> time_var_map = 12;
int ParentQuest::time_var_map_size() const {
  return time_var_map_.size();
}
void ParentQuest::clear_time_var_map() {
  time_var_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ParentQuest::time_var_map() const {
  // @@protoc_insertion_point(field_map:proto.ParentQuest.time_var_map)
  return time_var_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ParentQuest::mutable_time_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ParentQuest.time_var_map)
  return time_var_map_.MutableMap();
}

// uint32 parent_quest_state = 15;
void ParentQuest::clear_parent_quest_state() {
  parent_quest_state_ = 0u;
}
::google::protobuf::uint32 ParentQuest::parent_quest_state() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.parent_quest_state)
  return parent_quest_state_;
}
void ParentQuest::set_parent_quest_state(::google::protobuf::uint32 value) {
  
  parent_quest_state_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.parent_quest_state)
}

// bool is_finished = 9;
void ParentQuest::clear_is_finished() {
  is_finished_ = false;
}
bool ParentQuest::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.is_finished)
  return is_finished_;
}
void ParentQuest::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.is_finished)
}

// repeated .proto.InferencePageInfo inference_page_list = 5;
int ParentQuest::inference_page_list_size() const {
  return inference_page_list_.size();
}
void ParentQuest::clear_inference_page_list() {
  inference_page_list_.Clear();
}
const ::proto::InferencePageInfo& ParentQuest::inference_page_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.inference_page_list)
  return inference_page_list_.Get(index);
}
::proto::InferencePageInfo* ParentQuest::mutable_inference_page_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ParentQuest.inference_page_list)
  return inference_page_list_.Mutable(index);
}
::proto::InferencePageInfo* ParentQuest::add_inference_page_list() {
  // @@protoc_insertion_point(field_add:proto.ParentQuest.inference_page_list)
  return inference_page_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InferencePageInfo >*
ParentQuest::mutable_inference_page_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuest.inference_page_list)
  return &inference_page_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InferencePageInfo >&
ParentQuest::inference_page_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuest.inference_page_list)
  return inference_page_list_;
}

// .proto.ParentQuestRandomInfo random_info = 7;
bool ParentQuest::has_random_info() const {
  return this != internal_default_instance() && random_info_ != NULL;
}
void ParentQuest::clear_random_info() {
  if (GetArenaNoVirtual() == NULL && random_info_ != NULL) delete random_info_;
  random_info_ = NULL;
}
const ::proto::ParentQuestRandomInfo& ParentQuest::random_info() const {
  const ::proto::ParentQuestRandomInfo* p = random_info_;
  // @@protoc_insertion_point(field_get:proto.ParentQuest.random_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ParentQuestRandomInfo*>(
      &::proto::_ParentQuestRandomInfo_default_instance_);
}
::proto::ParentQuestRandomInfo* ParentQuest::mutable_random_info() {
  
  if (random_info_ == NULL) {
    random_info_ = new ::proto::ParentQuestRandomInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ParentQuest.random_info)
  return random_info_;
}
::proto::ParentQuestRandomInfo* ParentQuest::release_random_info() {
  // @@protoc_insertion_point(field_release:proto.ParentQuest.random_info)
  
  ::proto::ParentQuestRandomInfo* temp = random_info_;
  random_info_ = NULL;
  return temp;
}
void ParentQuest::set_allocated_random_info(::proto::ParentQuestRandomInfo* random_info) {
  delete random_info_;
  random_info_ = random_info;
  if (random_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ParentQuest.random_info)
}

// uint32 parent_quest_id = 1;
void ParentQuest::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 ParentQuest::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.parent_quest_id)
  return parent_quest_id_;
}
void ParentQuest::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.parent_quest_id)
}

// bool is_random = 11;
void ParentQuest::clear_is_random() {
  is_random_ = false;
}
bool ParentQuest::is_random() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.is_random)
  return is_random_;
}
void ParentQuest::set_is_random(bool value) {
  
  is_random_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.is_random)
}

// uint64 video_key = 2;
void ParentQuest::clear_video_key() {
  video_key_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ParentQuest::video_key() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.video_key)
  return video_key_;
}
void ParentQuest::set_video_key(::google::protobuf::uint64 value) {
  
  video_key_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.video_key)
}

// uint32 quest_var_seq = 4;
void ParentQuest::clear_quest_var_seq() {
  quest_var_seq_ = 0u;
}
::google::protobuf::uint32 ParentQuest::quest_var_seq() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.quest_var_seq)
  return quest_var_seq_;
}
void ParentQuest::set_quest_var_seq(::google::protobuf::uint32 value) {
  
  quest_var_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuest.quest_var_seq)
}

// repeated .proto.ChildQuest child_quest_list = 10;
int ParentQuest::child_quest_list_size() const {
  return child_quest_list_.size();
}
void ParentQuest::clear_child_quest_list() {
  child_quest_list_.Clear();
}
const ::proto::ChildQuest& ParentQuest::child_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Get(index);
}
::proto::ChildQuest* ParentQuest::mutable_child_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Mutable(index);
}
::proto::ChildQuest* ParentQuest::add_child_quest_list() {
  // @@protoc_insertion_point(field_add:proto.ParentQuest.child_quest_list)
  return child_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChildQuest >*
ParentQuest::mutable_child_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuest.child_quest_list)
  return &child_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChildQuest >&
ParentQuest::child_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuest.child_quest_list)
  return child_quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishedParentQuestNotify::kParentQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishedParentQuestNotify::FinishedParentQuestNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishedParentQuestNotify)
}
FinishedParentQuestNotify::FinishedParentQuestNotify(const FinishedParentQuestNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parent_quest_list_(from.parent_quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FinishedParentQuestNotify)
}

void FinishedParentQuestNotify::SharedCtor() {
  _cached_size_ = 0;
}

FinishedParentQuestNotify::~FinishedParentQuestNotify() {
  // @@protoc_insertion_point(destructor:proto.FinishedParentQuestNotify)
  SharedDtor();
}

void FinishedParentQuestNotify::SharedDtor() {
}

void FinishedParentQuestNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishedParentQuestNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishedParentQuestNotify& FinishedParentQuestNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishedParentQuestNotify* FinishedParentQuestNotify::New(::google::protobuf::Arena* arena) const {
  FinishedParentQuestNotify* n = new FinishedParentQuestNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishedParentQuestNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool FinishedParentQuestNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishedParentQuestNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ParentQuest parent_quest_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parent_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishedParentQuestNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishedParentQuestNotify)
  return false;
#undef DO_
}

void FinishedParentQuestNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parent_quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishedParentQuestNotify)
}

::google::protobuf::uint8* FinishedParentQuestNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishedParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->parent_quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishedParentQuestNotify)
  return target;
}

size_t FinishedParentQuestNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishedParentQuestNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ParentQuest parent_quest_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->parent_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent_quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishedParentQuestNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishedParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishedParentQuestNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishedParentQuestNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishedParentQuestNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishedParentQuestNotify)
    MergeFrom(*source);
  }
}

void FinishedParentQuestNotify::MergeFrom(const FinishedParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishedParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parent_quest_list_.MergeFrom(from.parent_quest_list_);
}

void FinishedParentQuestNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishedParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishedParentQuestNotify::CopyFrom(const FinishedParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishedParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishedParentQuestNotify::IsInitialized() const {
  return true;
}

void FinishedParentQuestNotify::Swap(FinishedParentQuestNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishedParentQuestNotify::InternalSwap(FinishedParentQuestNotify* other) {
  using std::swap;
  parent_quest_list_.InternalSwap(&other->parent_quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishedParentQuestNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishedParentQuestNotify

// repeated .proto.ParentQuest parent_quest_list = 3;
int FinishedParentQuestNotify::parent_quest_list_size() const {
  return parent_quest_list_.size();
}
void FinishedParentQuestNotify::clear_parent_quest_list() {
  parent_quest_list_.Clear();
}
const ::proto::ParentQuest& FinishedParentQuestNotify::parent_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Get(index);
}
::proto::ParentQuest* FinishedParentQuestNotify::mutable_parent_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Mutable(index);
}
::proto::ParentQuest* FinishedParentQuestNotify::add_parent_quest_list() {
  // @@protoc_insertion_point(field_add:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >*
FinishedParentQuestNotify::mutable_parent_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FinishedParentQuestNotify.parent_quest_list)
  return &parent_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >&
FinishedParentQuestNotify::parent_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.FinishedParentQuestNotify.parent_quest_list)
  return parent_quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishedParentQuestUpdateNotify::kParentQuestListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishedParentQuestUpdateNotify::FinishedParentQuestUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FinishedParentQuestUpdateNotify)
}
FinishedParentQuestUpdateNotify::FinishedParentQuestUpdateNotify(const FinishedParentQuestUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parent_quest_list_(from.parent_quest_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FinishedParentQuestUpdateNotify)
}

void FinishedParentQuestUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

FinishedParentQuestUpdateNotify::~FinishedParentQuestUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.FinishedParentQuestUpdateNotify)
  SharedDtor();
}

void FinishedParentQuestUpdateNotify::SharedDtor() {
}

void FinishedParentQuestUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishedParentQuestUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishedParentQuestUpdateNotify& FinishedParentQuestUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinishedParentQuestUpdateNotify* FinishedParentQuestUpdateNotify::New(::google::protobuf::Arena* arena) const {
  FinishedParentQuestUpdateNotify* n = new FinishedParentQuestUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinishedParentQuestUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_list_.Clear();
  _internal_metadata_.Clear();
}

bool FinishedParentQuestUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FinishedParentQuestUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ParentQuest parent_quest_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parent_quest_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FinishedParentQuestUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FinishedParentQuestUpdateNotify)
  return false;
#undef DO_
}

void FinishedParentQuestUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->parent_quest_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FinishedParentQuestUpdateNotify)
}

::google::protobuf::uint8* FinishedParentQuestUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FinishedParentQuestUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ParentQuest parent_quest_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parent_quest_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->parent_quest_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FinishedParentQuestUpdateNotify)
  return target;
}

size_t FinishedParentQuestUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FinishedParentQuestUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ParentQuest parent_quest_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->parent_quest_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parent_quest_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishedParentQuestUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FinishedParentQuestUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishedParentQuestUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishedParentQuestUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FinishedParentQuestUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FinishedParentQuestUpdateNotify)
    MergeFrom(*source);
  }
}

void FinishedParentQuestUpdateNotify::MergeFrom(const FinishedParentQuestUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FinishedParentQuestUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parent_quest_list_.MergeFrom(from.parent_quest_list_);
}

void FinishedParentQuestUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FinishedParentQuestUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishedParentQuestUpdateNotify::CopyFrom(const FinishedParentQuestUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FinishedParentQuestUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishedParentQuestUpdateNotify::IsInitialized() const {
  return true;
}

void FinishedParentQuestUpdateNotify::Swap(FinishedParentQuestUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishedParentQuestUpdateNotify::InternalSwap(FinishedParentQuestUpdateNotify* other) {
  using std::swap;
  parent_quest_list_.InternalSwap(&other->parent_quest_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinishedParentQuestUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinishedParentQuestUpdateNotify

// repeated .proto.ParentQuest parent_quest_list = 15;
int FinishedParentQuestUpdateNotify::parent_quest_list_size() const {
  return parent_quest_list_.size();
}
void FinishedParentQuestUpdateNotify::clear_parent_quest_list() {
  parent_quest_list_.Clear();
}
const ::proto::ParentQuest& FinishedParentQuestUpdateNotify::parent_quest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Get(index);
}
::proto::ParentQuest* FinishedParentQuestUpdateNotify::mutable_parent_quest_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Mutable(index);
}
::proto::ParentQuest* FinishedParentQuestUpdateNotify::add_parent_quest_list() {
  // @@protoc_insertion_point(field_add:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >*
FinishedParentQuestUpdateNotify::mutable_parent_quest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return &parent_quest_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ParentQuest >&
FinishedParentQuestUpdateNotify::parent_quest_list() const {
  // @@protoc_insertion_point(field_list:proto.FinishedParentQuestUpdateNotify.parent_quest_list)
  return parent_quest_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddQuestContentProgressReq::kContentTypeFieldNumber;
const int AddQuestContentProgressReq::kParamFieldNumber;
const int AddQuestContentProgressReq::kAddProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddQuestContentProgressReq::AddQuestContentProgressReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddQuestContentProgressReq)
}
AddQuestContentProgressReq::AddQuestContentProgressReq(const AddQuestContentProgressReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&content_type_, &from.content_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&content_type_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.AddQuestContentProgressReq)
}

void AddQuestContentProgressReq::SharedCtor() {
  ::memset(&content_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&content_type_)) + sizeof(param_));
  _cached_size_ = 0;
}

AddQuestContentProgressReq::~AddQuestContentProgressReq() {
  // @@protoc_insertion_point(destructor:proto.AddQuestContentProgressReq)
  SharedDtor();
}

void AddQuestContentProgressReq::SharedDtor() {
}

void AddQuestContentProgressReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddQuestContentProgressReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddQuestContentProgressReq& AddQuestContentProgressReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddQuestContentProgressReq* AddQuestContentProgressReq::New(::google::protobuf::Arena* arena) const {
  AddQuestContentProgressReq* n = new AddQuestContentProgressReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddQuestContentProgressReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&content_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&content_type_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool AddQuestContentProgressReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddQuestContentProgressReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 add_progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 content_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddQuestContentProgressReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddQuestContentProgressReq)
  return false;
#undef DO_
}

void AddQuestContentProgressReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 add_progress = 2;
  if (this->add_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->add_progress(), output);
  }

  // uint32 param = 9;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->param(), output);
  }

  // uint32 content_type = 14;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->content_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddQuestContentProgressReq)
}

::google::protobuf::uint8* AddQuestContentProgressReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddQuestContentProgressReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 add_progress = 2;
  if (this->add_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->add_progress(), target);
  }

  // uint32 param = 9;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->param(), target);
  }

  // uint32 content_type = 14;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->content_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddQuestContentProgressReq)
  return target;
}

size_t AddQuestContentProgressReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddQuestContentProgressReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 content_type = 14;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->content_type());
  }

  // uint32 add_progress = 2;
  if (this->add_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->add_progress());
  }

  // uint32 param = 9;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddQuestContentProgressReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddQuestContentProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddQuestContentProgressReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddQuestContentProgressReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddQuestContentProgressReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddQuestContentProgressReq)
    MergeFrom(*source);
  }
}

void AddQuestContentProgressReq::MergeFrom(const AddQuestContentProgressReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddQuestContentProgressReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
  if (from.add_progress() != 0) {
    set_add_progress(from.add_progress());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void AddQuestContentProgressReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddQuestContentProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddQuestContentProgressReq::CopyFrom(const AddQuestContentProgressReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddQuestContentProgressReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddQuestContentProgressReq::IsInitialized() const {
  return true;
}

void AddQuestContentProgressReq::Swap(AddQuestContentProgressReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddQuestContentProgressReq::InternalSwap(AddQuestContentProgressReq* other) {
  using std::swap;
  swap(content_type_, other->content_type_);
  swap(add_progress_, other->add_progress_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddQuestContentProgressReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddQuestContentProgressReq

// uint32 content_type = 14;
void AddQuestContentProgressReq::clear_content_type() {
  content_type_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::content_type() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.content_type)
  return content_type_;
}
void AddQuestContentProgressReq::set_content_type(::google::protobuf::uint32 value) {
  
  content_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.content_type)
}

// uint32 param = 9;
void AddQuestContentProgressReq::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::param() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.param)
  return param_;
}
void AddQuestContentProgressReq::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.param)
}

// uint32 add_progress = 2;
void AddQuestContentProgressReq::clear_add_progress() {
  add_progress_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressReq::add_progress() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressReq.add_progress)
  return add_progress_;
}
void AddQuestContentProgressReq::set_add_progress(::google::protobuf::uint32 value) {
  
  add_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressReq.add_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddQuestContentProgressRsp::kRetcodeFieldNumber;
const int AddQuestContentProgressRsp::kContentTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddQuestContentProgressRsp::AddQuestContentProgressRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddQuestContentProgressRsp)
}
AddQuestContentProgressRsp::AddQuestContentProgressRsp(const AddQuestContentProgressRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&content_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AddQuestContentProgressRsp)
}

void AddQuestContentProgressRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  _cached_size_ = 0;
}

AddQuestContentProgressRsp::~AddQuestContentProgressRsp() {
  // @@protoc_insertion_point(destructor:proto.AddQuestContentProgressRsp)
  SharedDtor();
}

void AddQuestContentProgressRsp::SharedDtor() {
}

void AddQuestContentProgressRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddQuestContentProgressRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddQuestContentProgressRsp& AddQuestContentProgressRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddQuestContentProgressRsp* AddQuestContentProgressRsp::New(::google::protobuf::Arena* arena) const {
  AddQuestContentProgressRsp* n = new AddQuestContentProgressRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddQuestContentProgressRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(content_type_));
  _internal_metadata_.Clear();
}

bool AddQuestContentProgressRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddQuestContentProgressRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 content_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddQuestContentProgressRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddQuestContentProgressRsp)
  return false;
#undef DO_
}

void AddQuestContentProgressRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 content_type = 13;
  if (this->content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->content_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddQuestContentProgressRsp)
}

::google::protobuf::uint8* AddQuestContentProgressRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddQuestContentProgressRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 content_type = 13;
  if (this->content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->content_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddQuestContentProgressRsp)
  return target;
}

size_t AddQuestContentProgressRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddQuestContentProgressRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 content_type = 13;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddQuestContentProgressRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddQuestContentProgressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddQuestContentProgressRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddQuestContentProgressRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddQuestContentProgressRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddQuestContentProgressRsp)
    MergeFrom(*source);
  }
}

void AddQuestContentProgressRsp::MergeFrom(const AddQuestContentProgressRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddQuestContentProgressRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.content_type() != 0) {
    set_content_type(from.content_type());
  }
}

void AddQuestContentProgressRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddQuestContentProgressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddQuestContentProgressRsp::CopyFrom(const AddQuestContentProgressRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddQuestContentProgressRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddQuestContentProgressRsp::IsInitialized() const {
  return true;
}

void AddQuestContentProgressRsp::Swap(AddQuestContentProgressRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddQuestContentProgressRsp::InternalSwap(AddQuestContentProgressRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(content_type_, other->content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddQuestContentProgressRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddQuestContentProgressRsp

// int32 retcode = 8;
void AddQuestContentProgressRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddQuestContentProgressRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressRsp.retcode)
  return retcode_;
}
void AddQuestContentProgressRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressRsp.retcode)
}

// uint32 content_type = 13;
void AddQuestContentProgressRsp::clear_content_type() {
  content_type_ = 0u;
}
::google::protobuf::uint32 AddQuestContentProgressRsp::content_type() const {
  // @@protoc_insertion_point(field_get:proto.AddQuestContentProgressRsp.content_type)
  return content_type_;
}
void AddQuestContentProgressRsp::set_content_type(::google::protobuf::uint32 value) {
  
  content_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddQuestContentProgressRsp.content_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestTalkHistoryReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestTalkHistoryReq::GetQuestTalkHistoryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestTalkHistoryReq)
}
GetQuestTalkHistoryReq::GetQuestTalkHistoryReq(const GetQuestTalkHistoryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestTalkHistoryReq)
}

void GetQuestTalkHistoryReq::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

GetQuestTalkHistoryReq::~GetQuestTalkHistoryReq() {
  // @@protoc_insertion_point(destructor:proto.GetQuestTalkHistoryReq)
  SharedDtor();
}

void GetQuestTalkHistoryReq::SharedDtor() {
}

void GetQuestTalkHistoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestTalkHistoryReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestTalkHistoryReq& GetQuestTalkHistoryReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestTalkHistoryReq* GetQuestTalkHistoryReq::New(::google::protobuf::Arena* arena) const {
  GetQuestTalkHistoryReq* n = new GetQuestTalkHistoryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestTalkHistoryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetQuestTalkHistoryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestTalkHistoryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestTalkHistoryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestTalkHistoryReq)
  return false;
#undef DO_
}

void GetQuestTalkHistoryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestTalkHistoryReq)
}

::google::protobuf::uint8* GetQuestTalkHistoryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestTalkHistoryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestTalkHistoryReq)
  return target;
}

size_t GetQuestTalkHistoryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestTalkHistoryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestTalkHistoryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestTalkHistoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestTalkHistoryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestTalkHistoryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestTalkHistoryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestTalkHistoryReq)
    MergeFrom(*source);
  }
}

void GetQuestTalkHistoryReq::MergeFrom(const GetQuestTalkHistoryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestTalkHistoryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetQuestTalkHistoryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestTalkHistoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestTalkHistoryReq::CopyFrom(const GetQuestTalkHistoryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestTalkHistoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestTalkHistoryReq::IsInitialized() const {
  return true;
}

void GetQuestTalkHistoryReq::Swap(GetQuestTalkHistoryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestTalkHistoryReq::InternalSwap(GetQuestTalkHistoryReq* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestTalkHistoryReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestTalkHistoryReq

// uint32 parent_quest_id = 5;
void GetQuestTalkHistoryReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestTalkHistoryReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryReq.parent_quest_id)
  return parent_quest_id_;
}
void GetQuestTalkHistoryReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestTalkHistoryRsp::kTalkIdListFieldNumber;
const int GetQuestTalkHistoryRsp::kParentQuestIdFieldNumber;
const int GetQuestTalkHistoryRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestTalkHistoryRsp::GetQuestTalkHistoryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestTalkHistoryRsp)
}
GetQuestTalkHistoryRsp::GetQuestTalkHistoryRsp(const GetQuestTalkHistoryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      talk_id_list_(from.talk_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestTalkHistoryRsp)
}

void GetQuestTalkHistoryRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

GetQuestTalkHistoryRsp::~GetQuestTalkHistoryRsp() {
  // @@protoc_insertion_point(destructor:proto.GetQuestTalkHistoryRsp)
  SharedDtor();
}

void GetQuestTalkHistoryRsp::SharedDtor() {
}

void GetQuestTalkHistoryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestTalkHistoryRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestTalkHistoryRsp& GetQuestTalkHistoryRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestTalkHistoryRsp* GetQuestTalkHistoryRsp::New(::google::protobuf::Arena* arena) const {
  GetQuestTalkHistoryRsp* n = new GetQuestTalkHistoryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestTalkHistoryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talk_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool GetQuestTalkHistoryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestTalkHistoryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 talk_id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_talk_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_talk_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestTalkHistoryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestTalkHistoryRsp)
  return false;
#undef DO_
}

void GetQuestTalkHistoryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 talk_id_list = 7;
  if (this->talk_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _talk_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->talk_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->talk_id_list(i), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 parent_quest_id = 13;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestTalkHistoryRsp)
}

::google::protobuf::uint8* GetQuestTalkHistoryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestTalkHistoryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 talk_id_list = 7;
  if (this->talk_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _talk_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->talk_id_list_, target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 parent_quest_id = 13;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestTalkHistoryRsp)
  return target;
}

size_t GetQuestTalkHistoryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestTalkHistoryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 talk_id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->talk_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _talk_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 parent_quest_id = 13;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestTalkHistoryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestTalkHistoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestTalkHistoryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestTalkHistoryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestTalkHistoryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestTalkHistoryRsp)
    MergeFrom(*source);
  }
}

void GetQuestTalkHistoryRsp::MergeFrom(const GetQuestTalkHistoryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestTalkHistoryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  talk_id_list_.MergeFrom(from.talk_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetQuestTalkHistoryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestTalkHistoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestTalkHistoryRsp::CopyFrom(const GetQuestTalkHistoryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestTalkHistoryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestTalkHistoryRsp::IsInitialized() const {
  return true;
}

void GetQuestTalkHistoryRsp::Swap(GetQuestTalkHistoryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestTalkHistoryRsp::InternalSwap(GetQuestTalkHistoryRsp* other) {
  using std::swap;
  talk_id_list_.InternalSwap(&other->talk_id_list_);
  swap(retcode_, other->retcode_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestTalkHistoryRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestTalkHistoryRsp

// repeated uint32 talk_id_list = 7;
int GetQuestTalkHistoryRsp::talk_id_list_size() const {
  return talk_id_list_.size();
}
void GetQuestTalkHistoryRsp::clear_talk_id_list() {
  talk_id_list_.Clear();
}
::google::protobuf::uint32 GetQuestTalkHistoryRsp::talk_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return talk_id_list_.Get(index);
}
void GetQuestTalkHistoryRsp::set_talk_id_list(int index, ::google::protobuf::uint32 value) {
  talk_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.talk_id_list)
}
void GetQuestTalkHistoryRsp::add_talk_id_list(::google::protobuf::uint32 value) {
  talk_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetQuestTalkHistoryRsp.talk_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetQuestTalkHistoryRsp::talk_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return talk_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetQuestTalkHistoryRsp::mutable_talk_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetQuestTalkHistoryRsp.talk_id_list)
  return &talk_id_list_;
}

// uint32 parent_quest_id = 13;
void GetQuestTalkHistoryRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestTalkHistoryRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.parent_quest_id)
  return parent_quest_id_;
}
void GetQuestTalkHistoryRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.parent_quest_id)
}

// int32 retcode = 8;
void GetQuestTalkHistoryRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetQuestTalkHistoryRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestTalkHistoryRsp.retcode)
  return retcode_;
}
void GetQuestTalkHistoryRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestTalkHistoryRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestCreateEntityReq::kParentQuestIdFieldNumber;
const int QuestCreateEntityReq::kIsRewindFieldNumber;
const int QuestCreateEntityReq::kQuestIdFieldNumber;
const int QuestCreateEntityReq::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestCreateEntityReq::QuestCreateEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestCreateEntityReq)
}
QuestCreateEntityReq::QuestCreateEntityReq(const QuestCreateEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&is_rewind_, &from.is_rewind_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_id_) -
    reinterpret_cast<char*>(&is_rewind_)) + sizeof(quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestCreateEntityReq)
}

void QuestCreateEntityReq::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(quest_id_));
  _cached_size_ = 0;
}

QuestCreateEntityReq::~QuestCreateEntityReq() {
  // @@protoc_insertion_point(destructor:proto.QuestCreateEntityReq)
  SharedDtor();
}

void QuestCreateEntityReq::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void QuestCreateEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestCreateEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestCreateEntityReq& QuestCreateEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestCreateEntityReq* QuestCreateEntityReq::New(::google::protobuf::Arena* arena) const {
  QuestCreateEntityReq* n = new QuestCreateEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestCreateEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&is_rewind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&is_rewind_)) + sizeof(quest_id_));
  _internal_metadata_.Clear();
}

bool QuestCreateEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestCreateEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateEntityInfo entity = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_rewind = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rewind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestCreateEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestCreateEntityReq)
  return false;
#undef DO_
}

void QuestCreateEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent_quest_id(), output);
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->quest_id(), output);
  }

  // .proto.CreateEntityInfo entity = 11;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->entity_, output);
  }

  // bool is_rewind = 12;
  if (this->is_rewind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_rewind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestCreateEntityReq)
}

::google::protobuf::uint8* QuestCreateEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent_quest_id(), target);
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->quest_id(), target);
  }

  // .proto.CreateEntityInfo entity = 11;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->entity_, deterministic, target);
  }

  // bool is_rewind = 12;
  if (this->is_rewind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_rewind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestCreateEntityReq)
  return target;
}

size_t QuestCreateEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestCreateEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 11;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // bool is_rewind = 12;
  if (this->is_rewind() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestCreateEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestCreateEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestCreateEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestCreateEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestCreateEntityReq)
    MergeFrom(*source);
  }
}

void QuestCreateEntityReq::MergeFrom(const QuestCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.is_rewind() != 0) {
    set_is_rewind(from.is_rewind());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestCreateEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestCreateEntityReq::CopyFrom(const QuestCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestCreateEntityReq::IsInitialized() const {
  return true;
}

void QuestCreateEntityReq::Swap(QuestCreateEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestCreateEntityReq::InternalSwap(QuestCreateEntityReq* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(is_rewind_, other->is_rewind_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestCreateEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestCreateEntityReq

// uint32 parent_quest_id = 4;
void QuestCreateEntityReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestCreateEntityReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.parent_quest_id)
}

// bool is_rewind = 12;
void QuestCreateEntityReq::clear_is_rewind() {
  is_rewind_ = false;
}
bool QuestCreateEntityReq::is_rewind() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.is_rewind)
  return is_rewind_;
}
void QuestCreateEntityReq::set_is_rewind(bool value) {
  
  is_rewind_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.is_rewind)
}

// uint32 quest_id = 10;
void QuestCreateEntityReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.quest_id)
  return quest_id_;
}
void QuestCreateEntityReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityReq.quest_id)
}

// .proto.CreateEntityInfo entity = 11;
bool QuestCreateEntityReq::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void QuestCreateEntityReq::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& QuestCreateEntityReq::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityReq.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* QuestCreateEntityReq::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuestCreateEntityReq.entity)
  return entity_;
}
::proto::CreateEntityInfo* QuestCreateEntityReq::release_entity() {
  // @@protoc_insertion_point(field_release:proto.QuestCreateEntityReq.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void QuestCreateEntityReq::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuestCreateEntityReq.entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestCreateEntityRsp::kQuestIdFieldNumber;
const int QuestCreateEntityRsp::kRetcodeFieldNumber;
const int QuestCreateEntityRsp::kEntityIdFieldNumber;
const int QuestCreateEntityRsp::kEntityFieldNumber;
const int QuestCreateEntityRsp::kParentQuestIdFieldNumber;
const int QuestCreateEntityRsp::kIsRewindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestCreateEntityRsp::QuestCreateEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestCreateEntityRsp)
}
QuestCreateEntityRsp::QuestCreateEntityRsp(const QuestCreateEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestCreateEntityRsp)
}

void QuestCreateEntityRsp::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

QuestCreateEntityRsp::~QuestCreateEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestCreateEntityRsp)
  SharedDtor();
}

void QuestCreateEntityRsp::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void QuestCreateEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestCreateEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestCreateEntityRsp& QuestCreateEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestCreateEntityRsp* QuestCreateEntityRsp::New(::google::protobuf::Arena* arena) const {
  QuestCreateEntityRsp* n = new QuestCreateEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestCreateEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool QuestCreateEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestCreateEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateEntityInfo entity = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_rewind = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rewind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestCreateEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestCreateEntityRsp)
  return false;
#undef DO_
}

void QuestCreateEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quest_id(), output);
  }

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->entity_id(), output);
  }

  // uint32 parent_quest_id = 7;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->parent_quest_id(), output);
  }

  // .proto.CreateEntityInfo entity = 12;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->entity_, output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // bool is_rewind = 14;
  if (this->is_rewind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_rewind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestCreateEntityRsp)
}

::google::protobuf::uint8* QuestCreateEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quest_id(), target);
  }

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->entity_id(), target);
  }

  // uint32 parent_quest_id = 7;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->parent_quest_id(), target);
  }

  // .proto.CreateEntityInfo entity = 12;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->entity_, deterministic, target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // bool is_rewind = 14;
  if (this->is_rewind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_rewind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestCreateEntityRsp)
  return target;
}

size_t QuestCreateEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestCreateEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 12;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 entity_id = 6;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool is_rewind = 14;
  if (this->is_rewind() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_id = 7;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestCreateEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestCreateEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestCreateEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestCreateEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestCreateEntityRsp)
    MergeFrom(*source);
  }
}

void QuestCreateEntityRsp::MergeFrom(const QuestCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.is_rewind() != 0) {
    set_is_rewind(from.is_rewind());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void QuestCreateEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestCreateEntityRsp::CopyFrom(const QuestCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestCreateEntityRsp::IsInitialized() const {
  return true;
}

void QuestCreateEntityRsp::Swap(QuestCreateEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestCreateEntityRsp::InternalSwap(QuestCreateEntityRsp* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(quest_id_, other->quest_id_);
  swap(entity_id_, other->entity_id_);
  swap(is_rewind_, other->is_rewind_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestCreateEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestCreateEntityRsp

// uint32 quest_id = 3;
void QuestCreateEntityRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.quest_id)
  return quest_id_;
}
void QuestCreateEntityRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.quest_id)
}

// int32 retcode = 13;
void QuestCreateEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestCreateEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.retcode)
  return retcode_;
}
void QuestCreateEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.retcode)
}

// uint32 entity_id = 6;
void QuestCreateEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.entity_id)
  return entity_id_;
}
void QuestCreateEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.entity_id)
}

// .proto.CreateEntityInfo entity = 12;
bool QuestCreateEntityRsp::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void QuestCreateEntityRsp::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& QuestCreateEntityRsp::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* QuestCreateEntityRsp::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QuestCreateEntityRsp.entity)
  return entity_;
}
::proto::CreateEntityInfo* QuestCreateEntityRsp::release_entity() {
  // @@protoc_insertion_point(field_release:proto.QuestCreateEntityRsp.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void QuestCreateEntityRsp::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QuestCreateEntityRsp.entity)
}

// uint32 parent_quest_id = 7;
void QuestCreateEntityRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestCreateEntityRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestCreateEntityRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.parent_quest_id)
}

// bool is_rewind = 14;
void QuestCreateEntityRsp::clear_is_rewind() {
  is_rewind_ = false;
}
bool QuestCreateEntityRsp::is_rewind() const {
  // @@protoc_insertion_point(field_get:proto.QuestCreateEntityRsp.is_rewind)
  return is_rewind_;
}
void QuestCreateEntityRsp::set_is_rewind(bool value) {
  
  is_rewind_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestCreateEntityRsp.is_rewind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyEntityReq::kSceneIdFieldNumber;
const int QuestDestroyEntityReq::kEntityIdFieldNumber;
const int QuestDestroyEntityReq::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyEntityReq::QuestDestroyEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyEntityReq)
}
QuestDestroyEntityReq::QuestDestroyEntityReq(const QuestDestroyEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyEntityReq)
}

void QuestDestroyEntityReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(quest_id_));
  _cached_size_ = 0;
}

QuestDestroyEntityReq::~QuestDestroyEntityReq() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyEntityReq)
  SharedDtor();
}

void QuestDestroyEntityReq::SharedDtor() {
}

void QuestDestroyEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyEntityReq& QuestDestroyEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyEntityReq* QuestDestroyEntityReq::New(::google::protobuf::Arena* arena) const {
  QuestDestroyEntityReq* n = new QuestDestroyEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(quest_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyEntityReq)
  return false;
#undef DO_
}

void QuestDestroyEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->entity_id(), output);
  }

  // uint32 quest_id = 12;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->quest_id(), output);
  }

  // uint32 scene_id = 13;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyEntityReq)
}

::google::protobuf::uint8* QuestDestroyEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->entity_id(), target);
  }

  // uint32 quest_id = 12;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->quest_id(), target);
  }

  // uint32 scene_id = 13;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyEntityReq)
  return target;
}

size_t QuestDestroyEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 13;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 entity_id = 10;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 quest_id = 12;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyEntityReq)
    MergeFrom(*source);
  }
}

void QuestDestroyEntityReq::MergeFrom(const QuestDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestDestroyEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyEntityReq::CopyFrom(const QuestDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyEntityReq::IsInitialized() const {
  return true;
}

void QuestDestroyEntityReq::Swap(QuestDestroyEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyEntityReq::InternalSwap(QuestDestroyEntityReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(entity_id_, other->entity_id_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyEntityReq

// uint32 scene_id = 13;
void QuestDestroyEntityReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.scene_id)
  return scene_id_;
}
void QuestDestroyEntityReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.scene_id)
}

// uint32 entity_id = 10;
void QuestDestroyEntityReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.entity_id)
  return entity_id_;
}
void QuestDestroyEntityReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.entity_id)
}

// uint32 quest_id = 12;
void QuestDestroyEntityReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityReq.quest_id)
  return quest_id_;
}
void QuestDestroyEntityReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityReq.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyEntityRsp::kQuestIdFieldNumber;
const int QuestDestroyEntityRsp::kSceneIdFieldNumber;
const int QuestDestroyEntityRsp::kEntityIdFieldNumber;
const int QuestDestroyEntityRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyEntityRsp::QuestDestroyEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyEntityRsp)
}
QuestDestroyEntityRsp::QuestDestroyEntityRsp(const QuestDestroyEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyEntityRsp)
}

void QuestDestroyEntityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

QuestDestroyEntityRsp::~QuestDestroyEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyEntityRsp)
  SharedDtor();
}

void QuestDestroyEntityRsp::SharedDtor() {
}

void QuestDestroyEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyEntityRsp& QuestDestroyEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyEntityRsp* QuestDestroyEntityRsp::New(::google::protobuf::Arena* arena) const {
  QuestDestroyEntityRsp* n = new QuestDestroyEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyEntityRsp)
  return false;
#undef DO_
}

void QuestDestroyEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->entity_id(), output);
  }

  // uint32 quest_id = 13;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->quest_id(), output);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyEntityRsp)
}

::google::protobuf::uint8* QuestDestroyEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->entity_id(), target);
  }

  // uint32 quest_id = 13;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->quest_id(), target);
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyEntityRsp)
  return target;
}

size_t QuestDestroyEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 9;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 quest_id = 13;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 scene_id = 15;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyEntityRsp)
    MergeFrom(*source);
  }
}

void QuestDestroyEntityRsp::MergeFrom(const QuestDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void QuestDestroyEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyEntityRsp::CopyFrom(const QuestDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyEntityRsp::IsInitialized() const {
  return true;
}

void QuestDestroyEntityRsp::Swap(QuestDestroyEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyEntityRsp::InternalSwap(QuestDestroyEntityRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(quest_id_, other->quest_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyEntityRsp

// uint32 quest_id = 13;
void QuestDestroyEntityRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.quest_id)
  return quest_id_;
}
void QuestDestroyEntityRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.quest_id)
}

// uint32 scene_id = 15;
void QuestDestroyEntityRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.scene_id)
  return scene_id_;
}
void QuestDestroyEntityRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.scene_id)
}

// uint32 entity_id = 9;
void QuestDestroyEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.entity_id)
  return entity_id_;
}
void QuestDestroyEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.entity_id)
}

// int32 retcode = 8;
void QuestDestroyEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestDestroyEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyEntityRsp.retcode)
  return retcode_;
}
void QuestDestroyEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyEntityRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify_NeedPlayerLevel::kIsLimitFieldNumber;
const int ChapterStateNotify_NeedPlayerLevel::kConfigNeedPlayerLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify_NeedPlayerLevel::ChapterStateNotify_NeedPlayerLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify.NeedPlayerLevel)
}
ChapterStateNotify_NeedPlayerLevel::ChapterStateNotify_NeedPlayerLevel(const ChapterStateNotify_NeedPlayerLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&config_need_player_level_, &from.config_need_player_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_limit_) -
    reinterpret_cast<char*>(&config_need_player_level_)) + sizeof(is_limit_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify.NeedPlayerLevel)
}

void ChapterStateNotify_NeedPlayerLevel::SharedCtor() {
  ::memset(&config_need_player_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_limit_) -
      reinterpret_cast<char*>(&config_need_player_level_)) + sizeof(is_limit_));
  _cached_size_ = 0;
}

ChapterStateNotify_NeedPlayerLevel::~ChapterStateNotify_NeedPlayerLevel() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify.NeedPlayerLevel)
  SharedDtor();
}

void ChapterStateNotify_NeedPlayerLevel::SharedDtor() {
}

void ChapterStateNotify_NeedPlayerLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify_NeedPlayerLevel::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify_NeedPlayerLevel& ChapterStateNotify_NeedPlayerLevel::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify_NeedPlayerLevel::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify_NeedPlayerLevel* n = new ChapterStateNotify_NeedPlayerLevel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify_NeedPlayerLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&config_need_player_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_limit_) -
      reinterpret_cast<char*>(&config_need_player_level_)) + sizeof(is_limit_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify_NeedPlayerLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify.NeedPlayerLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_need_player_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_need_player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_limit = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify.NeedPlayerLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify.NeedPlayerLevel)
  return false;
#undef DO_
}

void ChapterStateNotify_NeedPlayerLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_need_player_level = 4;
  if (this->config_need_player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->config_need_player_level(), output);
  }

  // bool is_limit = 14;
  if (this->is_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify.NeedPlayerLevel)
}

::google::protobuf::uint8* ChapterStateNotify_NeedPlayerLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify.NeedPlayerLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_need_player_level = 4;
  if (this->config_need_player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->config_need_player_level(), target);
  }

  // bool is_limit = 14;
  if (this->is_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify.NeedPlayerLevel)
  return target;
}

size_t ChapterStateNotify_NeedPlayerLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify.NeedPlayerLevel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 config_need_player_level = 4;
  if (this->config_need_player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_need_player_level());
  }

  // bool is_limit = 14;
  if (this->is_limit() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify_NeedPlayerLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify_NeedPlayerLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify_NeedPlayerLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify.NeedPlayerLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify.NeedPlayerLevel)
    MergeFrom(*source);
  }
}

void ChapterStateNotify_NeedPlayerLevel::MergeFrom(const ChapterStateNotify_NeedPlayerLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_need_player_level() != 0) {
    set_config_need_player_level(from.config_need_player_level());
  }
  if (from.is_limit() != 0) {
    set_is_limit(from.is_limit());
  }
}

void ChapterStateNotify_NeedPlayerLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify_NeedPlayerLevel::CopyFrom(const ChapterStateNotify_NeedPlayerLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify.NeedPlayerLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify_NeedPlayerLevel::IsInitialized() const {
  return true;
}

void ChapterStateNotify_NeedPlayerLevel::Swap(ChapterStateNotify_NeedPlayerLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify_NeedPlayerLevel::InternalSwap(ChapterStateNotify_NeedPlayerLevel* other) {
  using std::swap;
  swap(config_need_player_level_, other->config_need_player_level_);
  swap(is_limit_, other->is_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify_NeedPlayerLevel::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify_NeedPlayerLevel

// bool is_limit = 14;
void ChapterStateNotify_NeedPlayerLevel::clear_is_limit() {
  is_limit_ = false;
}
bool ChapterStateNotify_NeedPlayerLevel::is_limit() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedPlayerLevel.is_limit)
  return is_limit_;
}
void ChapterStateNotify_NeedPlayerLevel::set_is_limit(bool value) {
  
  is_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedPlayerLevel.is_limit)
}

// uint32 config_need_player_level = 4;
void ChapterStateNotify_NeedPlayerLevel::clear_config_need_player_level() {
  config_need_player_level_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify_NeedPlayerLevel::config_need_player_level() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedPlayerLevel.config_need_player_level)
  return config_need_player_level_;
}
void ChapterStateNotify_NeedPlayerLevel::set_config_need_player_level(::google::protobuf::uint32 value) {
  
  config_need_player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedPlayerLevel.config_need_player_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify_NeedBeginTime::kConfigNeedBeginTimeFieldNumber;
const int ChapterStateNotify_NeedBeginTime::kIsLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify_NeedBeginTime::ChapterStateNotify_NeedBeginTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify.NeedBeginTime)
}
ChapterStateNotify_NeedBeginTime::ChapterStateNotify_NeedBeginTime(const ChapterStateNotify_NeedBeginTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_limit_, &from.is_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_need_begin_time_) -
    reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify.NeedBeginTime)
}

void ChapterStateNotify_NeedBeginTime::SharedCtor() {
  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_begin_time_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  _cached_size_ = 0;
}

ChapterStateNotify_NeedBeginTime::~ChapterStateNotify_NeedBeginTime() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify.NeedBeginTime)
  SharedDtor();
}

void ChapterStateNotify_NeedBeginTime::SharedDtor() {
}

void ChapterStateNotify_NeedBeginTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify_NeedBeginTime::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify_NeedBeginTime& ChapterStateNotify_NeedBeginTime::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify_NeedBeginTime* ChapterStateNotify_NeedBeginTime::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify_NeedBeginTime* n = new ChapterStateNotify_NeedBeginTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify_NeedBeginTime::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_need_begin_time_) -
      reinterpret_cast<char*>(&is_limit_)) + sizeof(config_need_begin_time_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify_NeedBeginTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify.NeedBeginTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_need_begin_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_need_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify.NeedBeginTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify.NeedBeginTime)
  return false;
#undef DO_
}

void ChapterStateNotify_NeedBeginTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 4;
  if (this->is_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_limit(), output);
  }

  // uint32 config_need_begin_time = 5;
  if (this->config_need_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->config_need_begin_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify.NeedBeginTime)
}

::google::protobuf::uint8* ChapterStateNotify_NeedBeginTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify.NeedBeginTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_limit = 4;
  if (this->is_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_limit(), target);
  }

  // uint32 config_need_begin_time = 5;
  if (this->config_need_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->config_need_begin_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify.NeedBeginTime)
  return target;
}

size_t ChapterStateNotify_NeedBeginTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify.NeedBeginTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_limit = 4;
  if (this->is_limit() != 0) {
    total_size += 1 + 1;
  }

  // uint32 config_need_begin_time = 5;
  if (this->config_need_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_need_begin_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify_NeedBeginTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify.NeedBeginTime)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify_NeedBeginTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify_NeedBeginTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify.NeedBeginTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify.NeedBeginTime)
    MergeFrom(*source);
  }
}

void ChapterStateNotify_NeedBeginTime::MergeFrom(const ChapterStateNotify_NeedBeginTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify.NeedBeginTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_limit() != 0) {
    set_is_limit(from.is_limit());
  }
  if (from.config_need_begin_time() != 0) {
    set_config_need_begin_time(from.config_need_begin_time());
  }
}

void ChapterStateNotify_NeedBeginTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify.NeedBeginTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify_NeedBeginTime::CopyFrom(const ChapterStateNotify_NeedBeginTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify.NeedBeginTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify_NeedBeginTime::IsInitialized() const {
  return true;
}

void ChapterStateNotify_NeedBeginTime::Swap(ChapterStateNotify_NeedBeginTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify_NeedBeginTime::InternalSwap(ChapterStateNotify_NeedBeginTime* other) {
  using std::swap;
  swap(is_limit_, other->is_limit_);
  swap(config_need_begin_time_, other->config_need_begin_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify_NeedBeginTime::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify_NeedBeginTime

// uint32 config_need_begin_time = 5;
void ChapterStateNotify_NeedBeginTime::clear_config_need_begin_time() {
  config_need_begin_time_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify_NeedBeginTime::config_need_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedBeginTime.config_need_begin_time)
  return config_need_begin_time_;
}
void ChapterStateNotify_NeedBeginTime::set_config_need_begin_time(::google::protobuf::uint32 value) {
  
  config_need_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedBeginTime.config_need_begin_time)
}

// bool is_limit = 4;
void ChapterStateNotify_NeedBeginTime::clear_is_limit() {
  is_limit_ = false;
}
bool ChapterStateNotify_NeedBeginTime::is_limit() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.NeedBeginTime.is_limit)
  return is_limit_;
}
void ChapterStateNotify_NeedBeginTime::set_is_limit(bool value) {
  
  is_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.NeedBeginTime.is_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChapterStateNotify::kChapterStateFieldNumber;
const int ChapterStateNotify::kNeedPlayerLevelFieldNumber;
const int ChapterStateNotify::kNeedBeginTimeFieldNumber;
const int ChapterStateNotify::kChapterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChapterStateNotify::ChapterStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChapterStateNotify)
}
ChapterStateNotify::ChapterStateNotify(const ChapterStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_need_player_level()) {
    need_player_level_ = new ::proto::ChapterStateNotify_NeedPlayerLevel(*from.need_player_level_);
  } else {
    need_player_level_ = NULL;
  }
  if (from.has_need_begin_time()) {
    need_begin_time_ = new ::proto::ChapterStateNotify_NeedBeginTime(*from.need_begin_time_);
  } else {
    need_begin_time_ = NULL;
  }
  ::memcpy(&chapter_state_, &from.chapter_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&chapter_id_) -
    reinterpret_cast<char*>(&chapter_state_)) + sizeof(chapter_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ChapterStateNotify)
}

void ChapterStateNotify::SharedCtor() {
  ::memset(&need_player_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_id_) -
      reinterpret_cast<char*>(&need_player_level_)) + sizeof(chapter_id_));
  _cached_size_ = 0;
}

ChapterStateNotify::~ChapterStateNotify() {
  // @@protoc_insertion_point(destructor:proto.ChapterStateNotify)
  SharedDtor();
}

void ChapterStateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete need_player_level_;
  if (this != internal_default_instance()) delete need_begin_time_;
}

void ChapterStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChapterStateNotify& ChapterStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChapterStateNotify* ChapterStateNotify::New(::google::protobuf::Arena* arena) const {
  ChapterStateNotify* n = new ChapterStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChapterStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && need_player_level_ != NULL) {
    delete need_player_level_;
  }
  need_player_level_ = NULL;
  if (GetArenaNoVirtual() == NULL && need_begin_time_ != NULL) {
    delete need_begin_time_;
  }
  need_begin_time_ = NULL;
  ::memset(&chapter_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chapter_id_) -
      reinterpret_cast<char*>(&chapter_state_)) + sizeof(chapter_id_));
  _internal_metadata_.Clear();
}

bool ChapterStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChapterStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_need_player_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_need_begin_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChapterState chapter_state = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_chapter_state(static_cast< ::proto::ChapterState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chapter_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChapterStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChapterStateNotify)
  return false;
#undef DO_
}

void ChapterStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 2;
  if (this->has_need_player_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->need_player_level_, output);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 9;
  if (this->has_need_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->need_begin_time_, output);
  }

  // .proto.ChapterState chapter_state = 13;
  if (this->chapter_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->chapter_state(), output);
  }

  // uint32 chapter_id = 15;
  if (this->chapter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->chapter_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChapterStateNotify)
}

::google::protobuf::uint8* ChapterStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChapterStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 2;
  if (this->has_need_player_level()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->need_player_level_, deterministic, target);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 9;
  if (this->has_need_begin_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->need_begin_time_, deterministic, target);
  }

  // .proto.ChapterState chapter_state = 13;
  if (this->chapter_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->chapter_state(), target);
  }

  // uint32 chapter_id = 15;
  if (this->chapter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->chapter_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChapterStateNotify)
  return target;
}

size_t ChapterStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChapterStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 2;
  if (this->has_need_player_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->need_player_level_);
  }

  // .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 9;
  if (this->has_need_begin_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->need_begin_time_);
  }

  // .proto.ChapterState chapter_state = 13;
  if (this->chapter_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->chapter_state());
  }

  // uint32 chapter_id = 15;
  if (this->chapter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chapter_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChapterStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChapterStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChapterStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChapterStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChapterStateNotify)
    MergeFrom(*source);
  }
}

void ChapterStateNotify::MergeFrom(const ChapterStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChapterStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_need_player_level()) {
    mutable_need_player_level()->::proto::ChapterStateNotify_NeedPlayerLevel::MergeFrom(from.need_player_level());
  }
  if (from.has_need_begin_time()) {
    mutable_need_begin_time()->::proto::ChapterStateNotify_NeedBeginTime::MergeFrom(from.need_begin_time());
  }
  if (from.chapter_state() != 0) {
    set_chapter_state(from.chapter_state());
  }
  if (from.chapter_id() != 0) {
    set_chapter_id(from.chapter_id());
  }
}

void ChapterStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChapterStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStateNotify::CopyFrom(const ChapterStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChapterStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStateNotify::IsInitialized() const {
  return true;
}

void ChapterStateNotify::Swap(ChapterStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChapterStateNotify::InternalSwap(ChapterStateNotify* other) {
  using std::swap;
  swap(need_player_level_, other->need_player_level_);
  swap(need_begin_time_, other->need_begin_time_);
  swap(chapter_state_, other->chapter_state_);
  swap(chapter_id_, other->chapter_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChapterStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChapterStateNotify

// .proto.ChapterState chapter_state = 13;
void ChapterStateNotify::clear_chapter_state() {
  chapter_state_ = 0;
}
::proto::ChapterState ChapterStateNotify::chapter_state() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.chapter_state)
  return static_cast< ::proto::ChapterState >(chapter_state_);
}
void ChapterStateNotify::set_chapter_state(::proto::ChapterState value) {
  
  chapter_state_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.chapter_state)
}

// .proto.ChapterStateNotify.NeedPlayerLevel need_player_level = 2;
bool ChapterStateNotify::has_need_player_level() const {
  return this != internal_default_instance() && need_player_level_ != NULL;
}
void ChapterStateNotify::clear_need_player_level() {
  if (GetArenaNoVirtual() == NULL && need_player_level_ != NULL) delete need_player_level_;
  need_player_level_ = NULL;
}
const ::proto::ChapterStateNotify_NeedPlayerLevel& ChapterStateNotify::need_player_level() const {
  const ::proto::ChapterStateNotify_NeedPlayerLevel* p = need_player_level_;
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.need_player_level)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChapterStateNotify_NeedPlayerLevel*>(
      &::proto::_ChapterStateNotify_NeedPlayerLevel_default_instance_);
}
::proto::ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify::mutable_need_player_level() {
  
  if (need_player_level_ == NULL) {
    need_player_level_ = new ::proto::ChapterStateNotify_NeedPlayerLevel;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChapterStateNotify.need_player_level)
  return need_player_level_;
}
::proto::ChapterStateNotify_NeedPlayerLevel* ChapterStateNotify::release_need_player_level() {
  // @@protoc_insertion_point(field_release:proto.ChapterStateNotify.need_player_level)
  
  ::proto::ChapterStateNotify_NeedPlayerLevel* temp = need_player_level_;
  need_player_level_ = NULL;
  return temp;
}
void ChapterStateNotify::set_allocated_need_player_level(::proto::ChapterStateNotify_NeedPlayerLevel* need_player_level) {
  delete need_player_level_;
  need_player_level_ = need_player_level;
  if (need_player_level) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChapterStateNotify.need_player_level)
}

// .proto.ChapterStateNotify.NeedBeginTime need_begin_time = 9;
bool ChapterStateNotify::has_need_begin_time() const {
  return this != internal_default_instance() && need_begin_time_ != NULL;
}
void ChapterStateNotify::clear_need_begin_time() {
  if (GetArenaNoVirtual() == NULL && need_begin_time_ != NULL) delete need_begin_time_;
  need_begin_time_ = NULL;
}
const ::proto::ChapterStateNotify_NeedBeginTime& ChapterStateNotify::need_begin_time() const {
  const ::proto::ChapterStateNotify_NeedBeginTime* p = need_begin_time_;
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.need_begin_time)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChapterStateNotify_NeedBeginTime*>(
      &::proto::_ChapterStateNotify_NeedBeginTime_default_instance_);
}
::proto::ChapterStateNotify_NeedBeginTime* ChapterStateNotify::mutable_need_begin_time() {
  
  if (need_begin_time_ == NULL) {
    need_begin_time_ = new ::proto::ChapterStateNotify_NeedBeginTime;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChapterStateNotify.need_begin_time)
  return need_begin_time_;
}
::proto::ChapterStateNotify_NeedBeginTime* ChapterStateNotify::release_need_begin_time() {
  // @@protoc_insertion_point(field_release:proto.ChapterStateNotify.need_begin_time)
  
  ::proto::ChapterStateNotify_NeedBeginTime* temp = need_begin_time_;
  need_begin_time_ = NULL;
  return temp;
}
void ChapterStateNotify::set_allocated_need_begin_time(::proto::ChapterStateNotify_NeedBeginTime* need_begin_time) {
  delete need_begin_time_;
  need_begin_time_ = need_begin_time;
  if (need_begin_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChapterStateNotify.need_begin_time)
}

// uint32 chapter_id = 15;
void ChapterStateNotify::clear_chapter_id() {
  chapter_id_ = 0u;
}
::google::protobuf::uint32 ChapterStateNotify::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.ChapterStateNotify.chapter_id)
  return chapter_id_;
}
void ChapterStateNotify::set_chapter_id(::google::protobuf::uint32 value) {
  
  chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChapterStateNotify.chapter_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestProgressUpdateNotify::kQuestIdFieldNumber;
const int QuestProgressUpdateNotify::kFailProgressListFieldNumber;
const int QuestProgressUpdateNotify::kFinishProgressListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestProgressUpdateNotify::QuestProgressUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestProgressUpdateNotify)
}
QuestProgressUpdateNotify::QuestProgressUpdateNotify(const QuestProgressUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      finish_progress_list_(from.finish_progress_list_),
      fail_progress_list_(from.fail_progress_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestProgressUpdateNotify)
}

void QuestProgressUpdateNotify::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestProgressUpdateNotify::~QuestProgressUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestProgressUpdateNotify)
  SharedDtor();
}

void QuestProgressUpdateNotify::SharedDtor() {
}

void QuestProgressUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestProgressUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestProgressUpdateNotify& QuestProgressUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestProgressUpdateNotify* QuestProgressUpdateNotify::New(::google::protobuf::Arena* arena) const {
  QuestProgressUpdateNotify* n = new QuestProgressUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestProgressUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finish_progress_list_.Clear();
  fail_progress_list_.Clear();
  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestProgressUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestProgressUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 finish_progress_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finish_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_finish_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fail_progress_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fail_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_fail_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestProgressUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestProgressUpdateNotify)
  return false;
#undef DO_
}

void QuestProgressUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 finish_progress_list = 1;
  if (this->finish_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finish_progress_list(i), output);
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->quest_id(), output);
  }

  // repeated uint32 fail_progress_list = 11;
  if (this->fail_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fail_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fail_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fail_progress_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestProgressUpdateNotify)
}

::google::protobuf::uint8* QuestProgressUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestProgressUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 finish_progress_list = 1;
  if (this->finish_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finish_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finish_progress_list_, target);
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->quest_id(), target);
  }

  // repeated uint32 fail_progress_list = 11;
  if (this->fail_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fail_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fail_progress_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestProgressUpdateNotify)
  return target;
}

size_t QuestProgressUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestProgressUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 finish_progress_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finish_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 fail_progress_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fail_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fail_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestProgressUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestProgressUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestProgressUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestProgressUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestProgressUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestProgressUpdateNotify)
    MergeFrom(*source);
  }
}

void QuestProgressUpdateNotify::MergeFrom(const QuestProgressUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestProgressUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finish_progress_list_.MergeFrom(from.finish_progress_list_);
  fail_progress_list_.MergeFrom(from.fail_progress_list_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestProgressUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestProgressUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestProgressUpdateNotify::CopyFrom(const QuestProgressUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestProgressUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestProgressUpdateNotify::IsInitialized() const {
  return true;
}

void QuestProgressUpdateNotify::Swap(QuestProgressUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestProgressUpdateNotify::InternalSwap(QuestProgressUpdateNotify* other) {
  using std::swap;
  finish_progress_list_.InternalSwap(&other->finish_progress_list_);
  fail_progress_list_.InternalSwap(&other->fail_progress_list_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestProgressUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestProgressUpdateNotify

// uint32 quest_id = 9;
void QuestProgressUpdateNotify::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestProgressUpdateNotify::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.quest_id)
  return quest_id_;
}
void QuestProgressUpdateNotify::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.quest_id)
}

// repeated uint32 fail_progress_list = 11;
int QuestProgressUpdateNotify::fail_progress_list_size() const {
  return fail_progress_list_.size();
}
void QuestProgressUpdateNotify::clear_fail_progress_list() {
  fail_progress_list_.Clear();
}
::google::protobuf::uint32 QuestProgressUpdateNotify::fail_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.fail_progress_list)
  return fail_progress_list_.Get(index);
}
void QuestProgressUpdateNotify::set_fail_progress_list(int index, ::google::protobuf::uint32 value) {
  fail_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.fail_progress_list)
}
void QuestProgressUpdateNotify::add_fail_progress_list(::google::protobuf::uint32 value) {
  fail_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestProgressUpdateNotify.fail_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestProgressUpdateNotify::fail_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestProgressUpdateNotify.fail_progress_list)
  return fail_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestProgressUpdateNotify::mutable_fail_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestProgressUpdateNotify.fail_progress_list)
  return &fail_progress_list_;
}

// repeated uint32 finish_progress_list = 1;
int QuestProgressUpdateNotify::finish_progress_list_size() const {
  return finish_progress_list_.size();
}
void QuestProgressUpdateNotify::clear_finish_progress_list() {
  finish_progress_list_.Clear();
}
::google::protobuf::uint32 QuestProgressUpdateNotify::finish_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestProgressUpdateNotify.finish_progress_list)
  return finish_progress_list_.Get(index);
}
void QuestProgressUpdateNotify::set_finish_progress_list(int index, ::google::protobuf::uint32 value) {
  finish_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestProgressUpdateNotify.finish_progress_list)
}
void QuestProgressUpdateNotify::add_finish_progress_list(::google::protobuf::uint32 value) {
  finish_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestProgressUpdateNotify.finish_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QuestProgressUpdateNotify::finish_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestProgressUpdateNotify.finish_progress_list)
  return finish_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QuestProgressUpdateNotify::mutable_finish_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestProgressUpdateNotify.finish_progress_list)
  return &finish_progress_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestVarOp::kIndexFieldNumber;
const int QuestVarOp::kValueFieldNumber;
const int QuestVarOp::kIsAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestVarOp::QuestVarOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestVarOp)
}
QuestVarOp::QuestVarOp(const QuestVarOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestVarOp)
}

void QuestVarOp::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
  _cached_size_ = 0;
}

QuestVarOp::~QuestVarOp() {
  // @@protoc_insertion_point(destructor:proto.QuestVarOp)
  SharedDtor();
}

void QuestVarOp::SharedDtor() {
}

void QuestVarOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestVarOp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestVarOp& QuestVarOp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestVarOp* QuestVarOp::New(::google::protobuf::Arena* arena) const {
  QuestVarOp* n = new QuestVarOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestVarOp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool QuestVarOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestVarOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_add = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestVarOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestVarOp)
  return false;
#undef DO_
}

void QuestVarOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_add = 5;
  if (this->is_add() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_add(), output);
  }

  // int32 value = 6;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->value(), output);
  }

  // uint32 index = 14;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestVarOp)
}

::google::protobuf::uint8* QuestVarOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestVarOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_add = 5;
  if (this->is_add() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_add(), target);
  }

  // int32 value = 6;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->value(), target);
  }

  // uint32 index = 14;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestVarOp)
  return target;
}

size_t QuestVarOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestVarOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 index = 14;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // bool is_add = 5;
  if (this->is_add() != 0) {
    total_size += 1 + 1;
  }

  // int32 value = 6;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestVarOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestVarOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestVarOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestVarOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestVarOp)
    MergeFrom(*source);
  }
}

void QuestVarOp::MergeFrom(const QuestVarOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestVarOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.is_add() != 0) {
    set_is_add(from.is_add());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void QuestVarOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestVarOp::CopyFrom(const QuestVarOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestVarOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestVarOp::IsInitialized() const {
  return true;
}

void QuestVarOp::Swap(QuestVarOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestVarOp::InternalSwap(QuestVarOp* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(is_add_, other->is_add_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestVarOp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestVarOp

// uint32 index = 14;
void QuestVarOp::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 QuestVarOp::index() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.index)
  return index_;
}
void QuestVarOp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.index)
}

// int32 value = 6;
void QuestVarOp::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 QuestVarOp::value() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.value)
  return value_;
}
void QuestVarOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.value)
}

// bool is_add = 5;
void QuestVarOp::clear_is_add() {
  is_add_ = false;
}
bool QuestVarOp::is_add() const {
  // @@protoc_insertion_point(field_get:proto.QuestVarOp.is_add)
  return is_add_;
}
void QuestVarOp::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestVarOp.is_add)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarReq::kParentQuestIdFieldNumber;
const int QuestUpdateQuestVarReq::kQuestVarOpListFieldNumber;
const int QuestUpdateQuestVarReq::kQuestIdFieldNumber;
const int QuestUpdateQuestVarReq::kParentQuestVarSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarReq::QuestUpdateQuestVarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarReq)
}
QuestUpdateQuestVarReq::QuestUpdateQuestVarReq(const QuestUpdateQuestVarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_var_op_list_(from.quest_var_op_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parent_quest_id_, &from.parent_quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_var_seq_) -
    reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarReq)
}

void QuestUpdateQuestVarReq::SharedCtor() {
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  _cached_size_ = 0;
}

QuestUpdateQuestVarReq::~QuestUpdateQuestVarReq() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarReq)
  SharedDtor();
}

void QuestUpdateQuestVarReq::SharedDtor() {
}

void QuestUpdateQuestVarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarReq& QuestUpdateQuestVarReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarReq* QuestUpdateQuestVarReq::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarReq* n = new QuestUpdateQuestVarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_var_op_list_.Clear();
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.QuestVarOp quest_var_op_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quest_var_op_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_var_seq = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_var_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarReq)
  return false;
#undef DO_
}

void QuestUpdateQuestVarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quest_id(), output);
  }

  // repeated .proto.QuestVarOp quest_var_op_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_var_op_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->quest_var_op_list(static_cast<int>(i)), output);
  }

  // uint32 parent_quest_var_seq = 9;
  if (this->parent_quest_var_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->parent_quest_var_seq(), output);
  }

  // uint32 parent_quest_id = 12;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarReq)
}

::google::protobuf::uint8* QuestUpdateQuestVarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quest_id(), target);
  }

  // repeated .proto.QuestVarOp quest_var_op_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quest_var_op_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->quest_var_op_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 parent_quest_var_seq = 9;
  if (this->parent_quest_var_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->parent_quest_var_seq(), target);
  }

  // uint32 parent_quest_id = 12;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarReq)
  return target;
}

size_t QuestUpdateQuestVarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.QuestVarOp quest_var_op_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->quest_var_op_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quest_var_op_list(static_cast<int>(i)));
    }
  }

  // uint32 parent_quest_id = 12;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_id = 3;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 parent_quest_var_seq = 9;
  if (this->parent_quest_var_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_var_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarReq)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarReq::MergeFrom(const QuestUpdateQuestVarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_var_op_list_.MergeFrom(from.quest_var_op_list_);
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.parent_quest_var_seq() != 0) {
    set_parent_quest_var_seq(from.parent_quest_var_seq());
  }
}

void QuestUpdateQuestVarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarReq::CopyFrom(const QuestUpdateQuestVarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarReq::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarReq::Swap(QuestUpdateQuestVarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarReq::InternalSwap(QuestUpdateQuestVarReq* other) {
  using std::swap;
  quest_var_op_list_.InternalSwap(&other->quest_var_op_list_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_id_, other->quest_id_);
  swap(parent_quest_var_seq_, other->parent_quest_var_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarReq

// uint32 parent_quest_id = 12;
void QuestUpdateQuestVarReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarReq.parent_quest_id)
}

// repeated .proto.QuestVarOp quest_var_op_list = 4;
int QuestUpdateQuestVarReq::quest_var_op_list_size() const {
  return quest_var_op_list_.size();
}
void QuestUpdateQuestVarReq::clear_quest_var_op_list() {
  quest_var_op_list_.Clear();
}
const ::proto::QuestVarOp& QuestUpdateQuestVarReq::quest_var_op_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Get(index);
}
::proto::QuestVarOp* QuestUpdateQuestVarReq::mutable_quest_var_op_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Mutable(index);
}
::proto::QuestVarOp* QuestUpdateQuestVarReq::add_quest_var_op_list() {
  // @@protoc_insertion_point(field_add:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::QuestVarOp >*
QuestUpdateQuestVarReq::mutable_quest_var_op_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return &quest_var_op_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::QuestVarOp >&
QuestUpdateQuestVarReq::quest_var_op_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestUpdateQuestVarReq.quest_var_op_list)
  return quest_var_op_list_;
}

// uint32 quest_id = 3;
void QuestUpdateQuestVarReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.quest_id)
  return quest_id_;
}
void QuestUpdateQuestVarReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarReq.quest_id)
}

// uint32 parent_quest_var_seq = 9;
void QuestUpdateQuestVarReq::clear_parent_quest_var_seq() {
  parent_quest_var_seq_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarReq::parent_quest_var_seq() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarReq.parent_quest_var_seq)
  return parent_quest_var_seq_;
}
void QuestUpdateQuestVarReq::set_parent_quest_var_seq(::google::protobuf::uint32 value) {
  
  parent_quest_var_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarReq.parent_quest_var_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarRsp::kRetcodeFieldNumber;
const int QuestUpdateQuestVarRsp::kParentQuestVarSeqFieldNumber;
const int QuestUpdateQuestVarRsp::kParentQuestIdFieldNumber;
const int QuestUpdateQuestVarRsp::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarRsp::QuestUpdateQuestVarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarRsp)
}
QuestUpdateQuestVarRsp::QuestUpdateQuestVarRsp(const QuestUpdateQuestVarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_var_seq_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_var_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarRsp)
}

void QuestUpdateQuestVarRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_var_seq_));
  _cached_size_ = 0;
}

QuestUpdateQuestVarRsp::~QuestUpdateQuestVarRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarRsp)
  SharedDtor();
}

void QuestUpdateQuestVarRsp::SharedDtor() {
}

void QuestUpdateQuestVarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarRsp& QuestUpdateQuestVarRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarRsp* QuestUpdateQuestVarRsp::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarRsp* n = new QuestUpdateQuestVarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_var_seq_));
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_var_seq = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_var_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarRsp)
  return false;
#undef DO_
}

void QuestUpdateQuestVarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent_quest_id(), output);
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->quest_id(), output);
  }

  // uint32 parent_quest_var_seq = 15;
  if (this->parent_quest_var_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->parent_quest_var_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarRsp)
}

::google::protobuf::uint8* QuestUpdateQuestVarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent_quest_id(), target);
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->quest_id(), target);
  }

  // uint32 parent_quest_var_seq = 15;
  if (this->parent_quest_var_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->parent_quest_var_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarRsp)
  return target;
}

size_t QuestUpdateQuestVarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_id = 9;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 parent_quest_var_seq = 15;
  if (this->parent_quest_var_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_var_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarRsp)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarRsp::MergeFrom(const QuestUpdateQuestVarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.parent_quest_var_seq() != 0) {
    set_parent_quest_var_seq(from.parent_quest_var_seq());
  }
}

void QuestUpdateQuestVarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarRsp::CopyFrom(const QuestUpdateQuestVarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarRsp::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarRsp::Swap(QuestUpdateQuestVarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarRsp::InternalSwap(QuestUpdateQuestVarRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_id_, other->quest_id_);
  swap(parent_quest_var_seq_, other->parent_quest_var_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarRsp

// int32 retcode = 2;
void QuestUpdateQuestVarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestUpdateQuestVarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.retcode)
  return retcode_;
}
void QuestUpdateQuestVarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.retcode)
}

// uint32 parent_quest_var_seq = 15;
void QuestUpdateQuestVarRsp::clear_parent_quest_var_seq() {
  parent_quest_var_seq_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarRsp::parent_quest_var_seq() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.parent_quest_var_seq)
  return parent_quest_var_seq_;
}
void QuestUpdateQuestVarRsp::set_parent_quest_var_seq(::google::protobuf::uint32 value) {
  
  parent_quest_var_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.parent_quest_var_seq)
}

// uint32 parent_quest_id = 4;
void QuestUpdateQuestVarRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.parent_quest_id)
}

// uint32 quest_id = 9;
void QuestUpdateQuestVarRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarRsp.quest_id)
  return quest_id_;
}
void QuestUpdateQuestVarRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarRsp.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestVarNotify::kQuestVarFieldNumber;
const int QuestUpdateQuestVarNotify::kParentQuestIdFieldNumber;
const int QuestUpdateQuestVarNotify::kParentQuestVarSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestVarNotify::QuestUpdateQuestVarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestVarNotify)
}
QuestUpdateQuestVarNotify::QuestUpdateQuestVarNotify(const QuestUpdateQuestVarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quest_var_(from.quest_var_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parent_quest_id_, &from.parent_quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_var_seq_) -
    reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestVarNotify)
}

void QuestUpdateQuestVarNotify::SharedCtor() {
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  _cached_size_ = 0;
}

QuestUpdateQuestVarNotify::~QuestUpdateQuestVarNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestVarNotify)
  SharedDtor();
}

void QuestUpdateQuestVarNotify::SharedDtor() {
}

void QuestUpdateQuestVarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestVarNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestVarNotify& QuestUpdateQuestVarNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestVarNotify* QuestUpdateQuestVarNotify::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestVarNotify* n = new QuestUpdateQuestVarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestVarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_var_.Clear();
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_var_seq_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(parent_quest_var_seq_));
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestVarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestVarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 quest_var = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_quest_var())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_quest_var())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_var_seq = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_var_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestVarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestVarNotify)
  return false;
#undef DO_
}

void QuestUpdateQuestVarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 quest_var = 7;
  if (this->quest_var_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _quest_var_cached_byte_size_));
  }
  for (int i = 0, n = this->quest_var_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->quest_var(i), output);
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->parent_quest_id(), output);
  }

  // uint32 parent_quest_var_seq = 14;
  if (this->parent_quest_var_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->parent_quest_var_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestVarNotify)
}

::google::protobuf::uint8* QuestUpdateQuestVarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 quest_var = 7;
  if (this->quest_var_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _quest_var_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->quest_var_, target);
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->parent_quest_id(), target);
  }

  // uint32 parent_quest_var_seq = 14;
  if (this->parent_quest_var_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->parent_quest_var_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestVarNotify)
  return target;
}

size_t QuestUpdateQuestVarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestVarNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 quest_var = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->quest_var_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _quest_var_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 parent_quest_var_seq = 14;
  if (this->parent_quest_var_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_var_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestVarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestVarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestVarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestVarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestVarNotify)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestVarNotify::MergeFrom(const QuestUpdateQuestVarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quest_var_.MergeFrom(from.quest_var_);
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.parent_quest_var_seq() != 0) {
    set_parent_quest_var_seq(from.parent_quest_var_seq());
  }
}

void QuestUpdateQuestVarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestVarNotify::CopyFrom(const QuestUpdateQuestVarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestVarNotify::IsInitialized() const {
  return true;
}

void QuestUpdateQuestVarNotify::Swap(QuestUpdateQuestVarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestVarNotify::InternalSwap(QuestUpdateQuestVarNotify* other) {
  using std::swap;
  quest_var_.InternalSwap(&other->quest_var_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(parent_quest_var_seq_, other->parent_quest_var_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestVarNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestVarNotify

// repeated int32 quest_var = 7;
int QuestUpdateQuestVarNotify::quest_var_size() const {
  return quest_var_.size();
}
void QuestUpdateQuestVarNotify::clear_quest_var() {
  quest_var_.Clear();
}
::google::protobuf::int32 QuestUpdateQuestVarNotify::quest_var(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarNotify.quest_var)
  return quest_var_.Get(index);
}
void QuestUpdateQuestVarNotify::set_quest_var(int index, ::google::protobuf::int32 value) {
  quest_var_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarNotify.quest_var)
}
void QuestUpdateQuestVarNotify::add_quest_var(::google::protobuf::int32 value) {
  quest_var_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QuestUpdateQuestVarNotify.quest_var)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
QuestUpdateQuestVarNotify::quest_var() const {
  // @@protoc_insertion_point(field_list:proto.QuestUpdateQuestVarNotify.quest_var)
  return quest_var_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
QuestUpdateQuestVarNotify::mutable_quest_var() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestUpdateQuestVarNotify.quest_var)
  return &quest_var_;
}

// uint32 parent_quest_id = 11;
void QuestUpdateQuestVarNotify::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarNotify::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarNotify.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestVarNotify::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarNotify.parent_quest_id)
}

// uint32 parent_quest_var_seq = 14;
void QuestUpdateQuestVarNotify::clear_parent_quest_var_seq() {
  parent_quest_var_seq_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestVarNotify::parent_quest_var_seq() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestVarNotify.parent_quest_var_seq)
  return parent_quest_var_seq_;
}
void QuestUpdateQuestVarNotify::set_parent_quest_var_seq(::google::protobuf::uint32 value) {
  
  parent_quest_var_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestVarNotify.parent_quest_var_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyNpcReq::kNpcIdFieldNumber;
const int QuestDestroyNpcReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyNpcReq::QuestDestroyNpcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyNpcReq)
}
QuestDestroyNpcReq::QuestDestroyNpcReq(const QuestDestroyNpcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parent_quest_id_, &from.parent_quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&npc_id_) -
    reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(npc_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyNpcReq)
}

void QuestDestroyNpcReq::SharedCtor() {
  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&npc_id_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(npc_id_));
  _cached_size_ = 0;
}

QuestDestroyNpcReq::~QuestDestroyNpcReq() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyNpcReq)
  SharedDtor();
}

void QuestDestroyNpcReq::SharedDtor() {
}

void QuestDestroyNpcReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyNpcReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyNpcReq& QuestDestroyNpcReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyNpcReq* QuestDestroyNpcReq::New(::google::protobuf::Arena* arena) const {
  QuestDestroyNpcReq* n = new QuestDestroyNpcReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyNpcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&parent_quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&npc_id_) -
      reinterpret_cast<char*>(&parent_quest_id_)) + sizeof(npc_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyNpcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyNpcReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 npc_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyNpcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyNpcReq)
  return false;
#undef DO_
}

void QuestDestroyNpcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent_quest_id(), output);
  }

  // uint32 npc_id = 7;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->npc_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyNpcReq)
}

::google::protobuf::uint8* QuestDestroyNpcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyNpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent_quest_id(), target);
  }

  // uint32 npc_id = 7;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->npc_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyNpcReq)
  return target;
}

size_t QuestDestroyNpcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyNpcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 4;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 npc_id = 7;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyNpcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyNpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyNpcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyNpcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyNpcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyNpcReq)
    MergeFrom(*source);
  }
}

void QuestDestroyNpcReq::MergeFrom(const QuestDestroyNpcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyNpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
}

void QuestDestroyNpcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyNpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyNpcReq::CopyFrom(const QuestDestroyNpcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyNpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyNpcReq::IsInitialized() const {
  return true;
}

void QuestDestroyNpcReq::Swap(QuestDestroyNpcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyNpcReq::InternalSwap(QuestDestroyNpcReq* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(npc_id_, other->npc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyNpcReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyNpcReq

// uint32 npc_id = 7;
void QuestDestroyNpcReq::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcReq::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcReq.npc_id)
  return npc_id_;
}
void QuestDestroyNpcReq::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcReq.npc_id)
}

// uint32 parent_quest_id = 4;
void QuestDestroyNpcReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcReq.parent_quest_id)
  return parent_quest_id_;
}
void QuestDestroyNpcReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestDestroyNpcRsp::kNpcIdFieldNumber;
const int QuestDestroyNpcRsp::kParentQuestIdFieldNumber;
const int QuestDestroyNpcRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestDestroyNpcRsp::QuestDestroyNpcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestDestroyNpcRsp)
}
QuestDestroyNpcRsp::QuestDestroyNpcRsp(const QuestDestroyNpcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestDestroyNpcRsp)
}

void QuestDestroyNpcRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

QuestDestroyNpcRsp::~QuestDestroyNpcRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestDestroyNpcRsp)
  SharedDtor();
}

void QuestDestroyNpcRsp::SharedDtor() {
}

void QuestDestroyNpcRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestDestroyNpcRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestDestroyNpcRsp& QuestDestroyNpcRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestDestroyNpcRsp* QuestDestroyNpcRsp::New(::google::protobuf::Arena* arena) const {
  QuestDestroyNpcRsp* n = new QuestDestroyNpcRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestDestroyNpcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool QuestDestroyNpcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestDestroyNpcRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 npc_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestDestroyNpcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestDestroyNpcRsp)
  return false;
#undef DO_
}

void QuestDestroyNpcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // uint32 npc_id = 4;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->npc_id(), output);
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestDestroyNpcRsp)
}

::google::protobuf::uint8* QuestDestroyNpcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestDestroyNpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // uint32 npc_id = 4;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->npc_id(), target);
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestDestroyNpcRsp)
  return target;
}

size_t QuestDestroyNpcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestDestroyNpcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 npc_id = 4;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestDestroyNpcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestDestroyNpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestDestroyNpcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestDestroyNpcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestDestroyNpcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestDestroyNpcRsp)
    MergeFrom(*source);
  }
}

void QuestDestroyNpcRsp::MergeFrom(const QuestDestroyNpcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestDestroyNpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestDestroyNpcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestDestroyNpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestDestroyNpcRsp::CopyFrom(const QuestDestroyNpcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestDestroyNpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestDestroyNpcRsp::IsInitialized() const {
  return true;
}

void QuestDestroyNpcRsp::Swap(QuestDestroyNpcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestDestroyNpcRsp::InternalSwap(QuestDestroyNpcRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(npc_id_, other->npc_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestDestroyNpcRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestDestroyNpcRsp

// uint32 npc_id = 4;
void QuestDestroyNpcRsp::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcRsp::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.npc_id)
  return npc_id_;
}
void QuestDestroyNpcRsp::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.npc_id)
}

// uint32 parent_quest_id = 6;
void QuestDestroyNpcRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestDestroyNpcRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.parent_quest_id)
  return parent_quest_id_;
}
void QuestDestroyNpcRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.parent_quest_id)
}

// int32 retcode = 2;
void QuestDestroyNpcRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestDestroyNpcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestDestroyNpcRsp.retcode)
  return retcode_;
}
void QuestDestroyNpcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestDestroyNpcRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainSnapshot::kExpectedPriceFieldNumber;
const int BargainSnapshot::kCurMoodFieldNumber;
const int BargainSnapshot::kPriceLowLimitFieldNumber;
const int BargainSnapshot::kBargainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainSnapshot::BargainSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainSnapshot)
}
BargainSnapshot::BargainSnapshot(const BargainSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&expected_price_, &from.expected_price_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_mood_) -
    reinterpret_cast<char*>(&expected_price_)) + sizeof(cur_mood_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainSnapshot)
}

void BargainSnapshot::SharedCtor() {
  ::memset(&expected_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_mood_) -
      reinterpret_cast<char*>(&expected_price_)) + sizeof(cur_mood_));
  _cached_size_ = 0;
}

BargainSnapshot::~BargainSnapshot() {
  // @@protoc_insertion_point(destructor:proto.BargainSnapshot)
  SharedDtor();
}

void BargainSnapshot::SharedDtor() {
}

void BargainSnapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainSnapshot::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainSnapshot& BargainSnapshot::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainSnapshot* BargainSnapshot::New(::google::protobuf::Arena* arena) const {
  BargainSnapshot* n = new BargainSnapshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&expected_price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_mood_) -
      reinterpret_cast<char*>(&expected_price_)) + sizeof(cur_mood_));
  _internal_metadata_.Clear();
}

bool BargainSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainSnapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 expected_price = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expected_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bargain_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_low_limit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_low_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cur_mood = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_mood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainSnapshot)
  return false;
#undef DO_
}

void BargainSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expected_price = 6;
  if (this->expected_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->expected_price(), output);
  }

  // uint32 bargain_id = 7;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bargain_id(), output);
  }

  // uint32 price_low_limit = 10;
  if (this->price_low_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->price_low_limit(), output);
  }

  // int32 cur_mood = 13;
  if (this->cur_mood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->cur_mood(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainSnapshot)
}

::google::protobuf::uint8* BargainSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 expected_price = 6;
  if (this->expected_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->expected_price(), target);
  }

  // uint32 bargain_id = 7;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bargain_id(), target);
  }

  // uint32 price_low_limit = 10;
  if (this->price_low_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->price_low_limit(), target);
  }

  // int32 cur_mood = 13;
  if (this->cur_mood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->cur_mood(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainSnapshot)
  return target;
}

size_t BargainSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 expected_price = 6;
  if (this->expected_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expected_price());
  }

  // uint32 bargain_id = 7;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  // uint32 price_low_limit = 10;
  if (this->price_low_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_low_limit());
  }

  // int32 cur_mood = 13;
  if (this->cur_mood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cur_mood());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainSnapshot)
    MergeFrom(*source);
  }
}

void BargainSnapshot::MergeFrom(const BargainSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expected_price() != 0) {
    set_expected_price(from.expected_price());
  }
  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
  if (from.price_low_limit() != 0) {
    set_price_low_limit(from.price_low_limit());
  }
  if (from.cur_mood() != 0) {
    set_cur_mood(from.cur_mood());
  }
}

void BargainSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainSnapshot::CopyFrom(const BargainSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainSnapshot::IsInitialized() const {
  return true;
}

void BargainSnapshot::Swap(BargainSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainSnapshot::InternalSwap(BargainSnapshot* other) {
  using std::swap;
  swap(expected_price_, other->expected_price_);
  swap(bargain_id_, other->bargain_id_);
  swap(price_low_limit_, other->price_low_limit_);
  swap(cur_mood_, other->cur_mood_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainSnapshot::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainSnapshot

// uint32 expected_price = 6;
void BargainSnapshot::clear_expected_price() {
  expected_price_ = 0u;
}
::google::protobuf::uint32 BargainSnapshot::expected_price() const {
  // @@protoc_insertion_point(field_get:proto.BargainSnapshot.expected_price)
  return expected_price_;
}
void BargainSnapshot::set_expected_price(::google::protobuf::uint32 value) {
  
  expected_price_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainSnapshot.expected_price)
}

// int32 cur_mood = 13;
void BargainSnapshot::clear_cur_mood() {
  cur_mood_ = 0;
}
::google::protobuf::int32 BargainSnapshot::cur_mood() const {
  // @@protoc_insertion_point(field_get:proto.BargainSnapshot.cur_mood)
  return cur_mood_;
}
void BargainSnapshot::set_cur_mood(::google::protobuf::int32 value) {
  
  cur_mood_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainSnapshot.cur_mood)
}

// uint32 price_low_limit = 10;
void BargainSnapshot::clear_price_low_limit() {
  price_low_limit_ = 0u;
}
::google::protobuf::uint32 BargainSnapshot::price_low_limit() const {
  // @@protoc_insertion_point(field_get:proto.BargainSnapshot.price_low_limit)
  return price_low_limit_;
}
void BargainSnapshot::set_price_low_limit(::google::protobuf::uint32 value) {
  
  price_low_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainSnapshot.price_low_limit)
}

// uint32 bargain_id = 7;
void BargainSnapshot::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainSnapshot::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainSnapshot.bargain_id)
  return bargain_id_;
}
void BargainSnapshot::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainSnapshot.bargain_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainStartNotify::kBargainIdFieldNumber;
const int BargainStartNotify::kSnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainStartNotify::BargainStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainStartNotify)
}
BargainStartNotify::BargainStartNotify(const BargainStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_snapshot()) {
    snapshot_ = new ::proto::BargainSnapshot(*from.snapshot_);
  } else {
    snapshot_ = NULL;
  }
  bargain_id_ = from.bargain_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BargainStartNotify)
}

void BargainStartNotify::SharedCtor() {
  ::memset(&snapshot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bargain_id_) -
      reinterpret_cast<char*>(&snapshot_)) + sizeof(bargain_id_));
  _cached_size_ = 0;
}

BargainStartNotify::~BargainStartNotify() {
  // @@protoc_insertion_point(destructor:proto.BargainStartNotify)
  SharedDtor();
}

void BargainStartNotify::SharedDtor() {
  if (this != internal_default_instance()) delete snapshot_;
}

void BargainStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainStartNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainStartNotify& BargainStartNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainStartNotify* BargainStartNotify::New(::google::protobuf::Arena* arena) const {
  BargainStartNotify* n = new BargainStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && snapshot_ != NULL) {
    delete snapshot_;
  }
  snapshot_ = NULL;
  bargain_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BargainStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.BargainSnapshot snapshot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bargain_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainStartNotify)
  return false;
#undef DO_
}

void BargainStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BargainSnapshot snapshot = 2;
  if (this->has_snapshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->snapshot_, output);
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->bargain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainStartNotify)
}

::google::protobuf::uint8* BargainStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BargainSnapshot snapshot = 2;
  if (this->has_snapshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->snapshot_, deterministic, target);
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->bargain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainStartNotify)
  return target;
}

size_t BargainStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BargainSnapshot snapshot = 2;
  if (this->has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snapshot_);
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainStartNotify)
    MergeFrom(*source);
  }
}

void BargainStartNotify::MergeFrom(const BargainStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_snapshot()) {
    mutable_snapshot()->::proto::BargainSnapshot::MergeFrom(from.snapshot());
  }
  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
}

void BargainStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainStartNotify::CopyFrom(const BargainStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainStartNotify::IsInitialized() const {
  return true;
}

void BargainStartNotify::Swap(BargainStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainStartNotify::InternalSwap(BargainStartNotify* other) {
  using std::swap;
  swap(snapshot_, other->snapshot_);
  swap(bargain_id_, other->bargain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainStartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainStartNotify

// uint32 bargain_id = 12;
void BargainStartNotify::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainStartNotify::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.bargain_id)
  return bargain_id_;
}
void BargainStartNotify::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainStartNotify.bargain_id)
}

// .proto.BargainSnapshot snapshot = 2;
bool BargainStartNotify::has_snapshot() const {
  return this != internal_default_instance() && snapshot_ != NULL;
}
void BargainStartNotify::clear_snapshot() {
  if (GetArenaNoVirtual() == NULL && snapshot_ != NULL) delete snapshot_;
  snapshot_ = NULL;
}
const ::proto::BargainSnapshot& BargainStartNotify::snapshot() const {
  const ::proto::BargainSnapshot* p = snapshot_;
  // @@protoc_insertion_point(field_get:proto.BargainStartNotify.snapshot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BargainSnapshot*>(
      &::proto::_BargainSnapshot_default_instance_);
}
::proto::BargainSnapshot* BargainStartNotify::mutable_snapshot() {
  
  if (snapshot_ == NULL) {
    snapshot_ = new ::proto::BargainSnapshot;
  }
  // @@protoc_insertion_point(field_mutable:proto.BargainStartNotify.snapshot)
  return snapshot_;
}
::proto::BargainSnapshot* BargainStartNotify::release_snapshot() {
  // @@protoc_insertion_point(field_release:proto.BargainStartNotify.snapshot)
  
  ::proto::BargainSnapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
void BargainStartNotify::set_allocated_snapshot(::proto::BargainSnapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BargainStartNotify.snapshot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainOfferPriceReq::kBargainIdFieldNumber;
const int BargainOfferPriceReq::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainOfferPriceReq::BargainOfferPriceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainOfferPriceReq)
}
BargainOfferPriceReq::BargainOfferPriceReq(const BargainOfferPriceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&bargain_id_) -
    reinterpret_cast<char*>(&price_)) + sizeof(bargain_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainOfferPriceReq)
}

void BargainOfferPriceReq::SharedCtor() {
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bargain_id_) -
      reinterpret_cast<char*>(&price_)) + sizeof(bargain_id_));
  _cached_size_ = 0;
}

BargainOfferPriceReq::~BargainOfferPriceReq() {
  // @@protoc_insertion_point(destructor:proto.BargainOfferPriceReq)
  SharedDtor();
}

void BargainOfferPriceReq::SharedDtor() {
}

void BargainOfferPriceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainOfferPriceReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainOfferPriceReq& BargainOfferPriceReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainOfferPriceReq* BargainOfferPriceReq::New(::google::protobuf::Arena* arena) const {
  BargainOfferPriceReq* n = new BargainOfferPriceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainOfferPriceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bargain_id_) -
      reinterpret_cast<char*>(&price_)) + sizeof(bargain_id_));
  _internal_metadata_.Clear();
}

bool BargainOfferPriceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainOfferPriceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 price = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bargain_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainOfferPriceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainOfferPriceReq)
  return false;
#undef DO_
}

void BargainOfferPriceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price = 7;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->price(), output);
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->bargain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainOfferPriceReq)
}

::google::protobuf::uint8* BargainOfferPriceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainOfferPriceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price = 7;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->price(), target);
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->bargain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainOfferPriceReq)
  return target;
}

size_t BargainOfferPriceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainOfferPriceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 price = 7;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  // uint32 bargain_id = 12;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainOfferPriceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainOfferPriceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainOfferPriceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainOfferPriceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainOfferPriceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainOfferPriceReq)
    MergeFrom(*source);
  }
}

void BargainOfferPriceReq::MergeFrom(const BargainOfferPriceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainOfferPriceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
}

void BargainOfferPriceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainOfferPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainOfferPriceReq::CopyFrom(const BargainOfferPriceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainOfferPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainOfferPriceReq::IsInitialized() const {
  return true;
}

void BargainOfferPriceReq::Swap(BargainOfferPriceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainOfferPriceReq::InternalSwap(BargainOfferPriceReq* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(bargain_id_, other->bargain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainOfferPriceReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainOfferPriceReq

// uint32 bargain_id = 12;
void BargainOfferPriceReq::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceReq::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceReq.bargain_id)
  return bargain_id_;
}
void BargainOfferPriceReq::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceReq.bargain_id)
}

// uint32 price = 7;
void BargainOfferPriceReq::clear_price() {
  price_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceReq::price() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceReq.price)
  return price_;
}
void BargainOfferPriceReq::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceReq.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainOfferPriceRsp::kRetcodeFieldNumber;
const int BargainOfferPriceRsp::kResultParamFieldNumber;
const int BargainOfferPriceRsp::kBargainResultFieldNumber;
const int BargainOfferPriceRsp::kCurMoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainOfferPriceRsp::BargainOfferPriceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainOfferPriceRsp)
}
BargainOfferPriceRsp::BargainOfferPriceRsp(const BargainOfferPriceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bargain_result_, &from.bargain_result_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&bargain_result_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.BargainOfferPriceRsp)
}

void BargainOfferPriceRsp::SharedCtor() {
  ::memset(&bargain_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&bargain_result_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

BargainOfferPriceRsp::~BargainOfferPriceRsp() {
  // @@protoc_insertion_point(destructor:proto.BargainOfferPriceRsp)
  SharedDtor();
}

void BargainOfferPriceRsp::SharedDtor() {
}

void BargainOfferPriceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainOfferPriceRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainOfferPriceRsp& BargainOfferPriceRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainOfferPriceRsp* BargainOfferPriceRsp::New(::google::protobuf::Arena* arena) const {
  BargainOfferPriceRsp* n = new BargainOfferPriceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainOfferPriceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bargain_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&bargain_result_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool BargainOfferPriceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainOfferPriceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.BargainResultType bargain_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bargain_result(static_cast< ::proto::BargainResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cur_mood = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_mood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_param = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainOfferPriceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainOfferPriceRsp)
  return false;
#undef DO_
}

void BargainOfferPriceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->bargain_result(), output);
  }

  // int32 cur_mood = 7;
  if (this->cur_mood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cur_mood(), output);
  }

  // uint32 result_param = 11;
  if (this->result_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->result_param(), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainOfferPriceRsp)
}

::google::protobuf::uint8* BargainOfferPriceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainOfferPriceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->bargain_result(), target);
  }

  // int32 cur_mood = 7;
  if (this->cur_mood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cur_mood(), target);
  }

  // uint32 result_param = 11;
  if (this->result_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->result_param(), target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainOfferPriceRsp)
  return target;
}

size_t BargainOfferPriceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainOfferPriceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BargainResultType bargain_result = 2;
  if (this->bargain_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bargain_result());
  }

  // int32 cur_mood = 7;
  if (this->cur_mood() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cur_mood());
  }

  // uint32 result_param = 11;
  if (this->result_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_param());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainOfferPriceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainOfferPriceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainOfferPriceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainOfferPriceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainOfferPriceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainOfferPriceRsp)
    MergeFrom(*source);
  }
}

void BargainOfferPriceRsp::MergeFrom(const BargainOfferPriceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainOfferPriceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_result() != 0) {
    set_bargain_result(from.bargain_result());
  }
  if (from.cur_mood() != 0) {
    set_cur_mood(from.cur_mood());
  }
  if (from.result_param() != 0) {
    set_result_param(from.result_param());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void BargainOfferPriceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainOfferPriceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainOfferPriceRsp::CopyFrom(const BargainOfferPriceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainOfferPriceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainOfferPriceRsp::IsInitialized() const {
  return true;
}

void BargainOfferPriceRsp::Swap(BargainOfferPriceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainOfferPriceRsp::InternalSwap(BargainOfferPriceRsp* other) {
  using std::swap;
  swap(bargain_result_, other->bargain_result_);
  swap(cur_mood_, other->cur_mood_);
  swap(result_param_, other->result_param_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainOfferPriceRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainOfferPriceRsp

// int32 retcode = 13;
void BargainOfferPriceRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 BargainOfferPriceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.retcode)
  return retcode_;
}
void BargainOfferPriceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.retcode)
}

// uint32 result_param = 11;
void BargainOfferPriceRsp::clear_result_param() {
  result_param_ = 0u;
}
::google::protobuf::uint32 BargainOfferPriceRsp::result_param() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.result_param)
  return result_param_;
}
void BargainOfferPriceRsp::set_result_param(::google::protobuf::uint32 value) {
  
  result_param_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.result_param)
}

// .proto.BargainResultType bargain_result = 2;
void BargainOfferPriceRsp::clear_bargain_result() {
  bargain_result_ = 0;
}
::proto::BargainResultType BargainOfferPriceRsp::bargain_result() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.bargain_result)
  return static_cast< ::proto::BargainResultType >(bargain_result_);
}
void BargainOfferPriceRsp::set_bargain_result(::proto::BargainResultType value) {
  
  bargain_result_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.bargain_result)
}

// int32 cur_mood = 7;
void BargainOfferPriceRsp::clear_cur_mood() {
  cur_mood_ = 0;
}
::google::protobuf::int32 BargainOfferPriceRsp::cur_mood() const {
  // @@protoc_insertion_point(field_get:proto.BargainOfferPriceRsp.cur_mood)
  return cur_mood_;
}
void BargainOfferPriceRsp::set_cur_mood(::google::protobuf::int32 value) {
  
  cur_mood_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainOfferPriceRsp.cur_mood)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BargainTerminateNotify::kBargainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BargainTerminateNotify::BargainTerminateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BargainTerminateNotify)
}
BargainTerminateNotify::BargainTerminateNotify(const BargainTerminateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bargain_id_ = from.bargain_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BargainTerminateNotify)
}

void BargainTerminateNotify::SharedCtor() {
  bargain_id_ = 0u;
  _cached_size_ = 0;
}

BargainTerminateNotify::~BargainTerminateNotify() {
  // @@protoc_insertion_point(destructor:proto.BargainTerminateNotify)
  SharedDtor();
}

void BargainTerminateNotify::SharedDtor() {
}

void BargainTerminateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BargainTerminateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BargainTerminateNotify& BargainTerminateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

BargainTerminateNotify* BargainTerminateNotify::New(::google::protobuf::Arena* arena) const {
  BargainTerminateNotify* n = new BargainTerminateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BargainTerminateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bargain_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BargainTerminateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BargainTerminateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BargainTerminateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BargainTerminateNotify)
  return false;
#undef DO_
}

void BargainTerminateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->bargain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BargainTerminateNotify)
}

::google::protobuf::uint8* BargainTerminateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BargainTerminateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->bargain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BargainTerminateNotify)
  return target;
}

size_t BargainTerminateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BargainTerminateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BargainTerminateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BargainTerminateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BargainTerminateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BargainTerminateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BargainTerminateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BargainTerminateNotify)
    MergeFrom(*source);
  }
}

void BargainTerminateNotify::MergeFrom(const BargainTerminateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BargainTerminateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
}

void BargainTerminateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BargainTerminateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BargainTerminateNotify::CopyFrom(const BargainTerminateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BargainTerminateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BargainTerminateNotify::IsInitialized() const {
  return true;
}

void BargainTerminateNotify::Swap(BargainTerminateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BargainTerminateNotify::InternalSwap(BargainTerminateNotify* other) {
  using std::swap;
  swap(bargain_id_, other->bargain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BargainTerminateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BargainTerminateNotify

// uint32 bargain_id = 14;
void BargainTerminateNotify::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 BargainTerminateNotify::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.BargainTerminateNotify.bargain_id)
  return bargain_id_;
}
void BargainTerminateNotify::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BargainTerminateNotify.bargain_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBargainDataReq::kBargainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBargainDataReq::GetBargainDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBargainDataReq)
}
GetBargainDataReq::GetBargainDataReq(const GetBargainDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bargain_id_ = from.bargain_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetBargainDataReq)
}

void GetBargainDataReq::SharedCtor() {
  bargain_id_ = 0u;
  _cached_size_ = 0;
}

GetBargainDataReq::~GetBargainDataReq() {
  // @@protoc_insertion_point(destructor:proto.GetBargainDataReq)
  SharedDtor();
}

void GetBargainDataReq::SharedDtor() {
}

void GetBargainDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBargainDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBargainDataReq& GetBargainDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBargainDataReq* GetBargainDataReq::New(::google::protobuf::Arena* arena) const {
  GetBargainDataReq* n = new GetBargainDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBargainDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bargain_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetBargainDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBargainDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBargainDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBargainDataReq)
  return false;
#undef DO_
}

void GetBargainDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->bargain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBargainDataReq)
}

::google::protobuf::uint8* GetBargainDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->bargain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBargainDataReq)
  return target;
}

size_t GetBargainDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBargainDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 bargain_id = 14;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBargainDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBargainDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBargainDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBargainDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBargainDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBargainDataReq)
    MergeFrom(*source);
  }
}

void GetBargainDataReq::MergeFrom(const GetBargainDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBargainDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
}

void GetBargainDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBargainDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBargainDataReq::CopyFrom(const GetBargainDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBargainDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBargainDataReq::IsInitialized() const {
  return true;
}

void GetBargainDataReq::Swap(GetBargainDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBargainDataReq::InternalSwap(GetBargainDataReq* other) {
  using std::swap;
  swap(bargain_id_, other->bargain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBargainDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBargainDataReq

// uint32 bargain_id = 14;
void GetBargainDataReq::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 GetBargainDataReq::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.GetBargainDataReq.bargain_id)
  return bargain_id_;
}
void GetBargainDataReq::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBargainDataReq.bargain_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBargainDataRsp::kRetcodeFieldNumber;
const int GetBargainDataRsp::kBargainIdFieldNumber;
const int GetBargainDataRsp::kSnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBargainDataRsp::GetBargainDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBargainDataRsp)
}
GetBargainDataRsp::GetBargainDataRsp(const GetBargainDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_snapshot()) {
    snapshot_ = new ::proto::BargainSnapshot(*from.snapshot_);
  } else {
    snapshot_ = NULL;
  }
  ::memcpy(&bargain_id_, &from.bargain_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&bargain_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.GetBargainDataRsp)
}

void GetBargainDataRsp::SharedCtor() {
  ::memset(&snapshot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&snapshot_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetBargainDataRsp::~GetBargainDataRsp() {
  // @@protoc_insertion_point(destructor:proto.GetBargainDataRsp)
  SharedDtor();
}

void GetBargainDataRsp::SharedDtor() {
  if (this != internal_default_instance()) delete snapshot_;
}

void GetBargainDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBargainDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBargainDataRsp& GetBargainDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBargainDataRsp* GetBargainDataRsp::New(::google::protobuf::Arena* arena) const {
  GetBargainDataRsp* n = new GetBargainDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBargainDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && snapshot_ != NULL) {
    delete snapshot_;
  }
  snapshot_ = NULL;
  ::memset(&bargain_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&bargain_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool GetBargainDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBargainDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bargain_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BargainSnapshot snapshot = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBargainDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBargainDataRsp)
  return false;
#undef DO_
}

void GetBargainDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 8;
  if (this->bargain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bargain_id(), output);
  }

  // .proto.BargainSnapshot snapshot = 13;
  if (this->has_snapshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->snapshot_, output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBargainDataRsp)
}

::google::protobuf::uint8* GetBargainDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bargain_id = 8;
  if (this->bargain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bargain_id(), target);
  }

  // .proto.BargainSnapshot snapshot = 13;
  if (this->has_snapshot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->snapshot_, deterministic, target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBargainDataRsp)
  return target;
}

size_t GetBargainDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBargainDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BargainSnapshot snapshot = 13;
  if (this->has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snapshot_);
  }

  // uint32 bargain_id = 8;
  if (this->bargain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargain_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBargainDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBargainDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBargainDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBargainDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBargainDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBargainDataRsp)
    MergeFrom(*source);
  }
}

void GetBargainDataRsp::MergeFrom(const GetBargainDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBargainDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_snapshot()) {
    mutable_snapshot()->::proto::BargainSnapshot::MergeFrom(from.snapshot());
  }
  if (from.bargain_id() != 0) {
    set_bargain_id(from.bargain_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetBargainDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBargainDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBargainDataRsp::CopyFrom(const GetBargainDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBargainDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBargainDataRsp::IsInitialized() const {
  return true;
}

void GetBargainDataRsp::Swap(GetBargainDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBargainDataRsp::InternalSwap(GetBargainDataRsp* other) {
  using std::swap;
  swap(snapshot_, other->snapshot_);
  swap(bargain_id_, other->bargain_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBargainDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBargainDataRsp

// int32 retcode = 14;
void GetBargainDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetBargainDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBargainDataRsp.retcode)
  return retcode_;
}
void GetBargainDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBargainDataRsp.retcode)
}

// uint32 bargain_id = 8;
void GetBargainDataRsp::clear_bargain_id() {
  bargain_id_ = 0u;
}
::google::protobuf::uint32 GetBargainDataRsp::bargain_id() const {
  // @@protoc_insertion_point(field_get:proto.GetBargainDataRsp.bargain_id)
  return bargain_id_;
}
void GetBargainDataRsp::set_bargain_id(::google::protobuf::uint32 value) {
  
  bargain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBargainDataRsp.bargain_id)
}

// .proto.BargainSnapshot snapshot = 13;
bool GetBargainDataRsp::has_snapshot() const {
  return this != internal_default_instance() && snapshot_ != NULL;
}
void GetBargainDataRsp::clear_snapshot() {
  if (GetArenaNoVirtual() == NULL && snapshot_ != NULL) delete snapshot_;
  snapshot_ = NULL;
}
const ::proto::BargainSnapshot& GetBargainDataRsp::snapshot() const {
  const ::proto::BargainSnapshot* p = snapshot_;
  // @@protoc_insertion_point(field_get:proto.GetBargainDataRsp.snapshot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BargainSnapshot*>(
      &::proto::_BargainSnapshot_default_instance_);
}
::proto::BargainSnapshot* GetBargainDataRsp::mutable_snapshot() {
  
  if (snapshot_ == NULL) {
    snapshot_ = new ::proto::BargainSnapshot;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetBargainDataRsp.snapshot)
  return snapshot_;
}
::proto::BargainSnapshot* GetBargainDataRsp::release_snapshot() {
  // @@protoc_insertion_point(field_release:proto.GetBargainDataRsp.snapshot)
  
  ::proto::BargainSnapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
void GetBargainDataRsp::set_allocated_snapshot(::proto::BargainSnapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetBargainDataRsp.snapshot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllActivatedBargainDataReq::GetAllActivatedBargainDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetAllActivatedBargainDataReq)
}
GetAllActivatedBargainDataReq::GetAllActivatedBargainDataReq(const GetAllActivatedBargainDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetAllActivatedBargainDataReq)
}

void GetAllActivatedBargainDataReq::SharedCtor() {
  _cached_size_ = 0;
}

GetAllActivatedBargainDataReq::~GetAllActivatedBargainDataReq() {
  // @@protoc_insertion_point(destructor:proto.GetAllActivatedBargainDataReq)
  SharedDtor();
}

void GetAllActivatedBargainDataReq::SharedDtor() {
}

void GetAllActivatedBargainDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllActivatedBargainDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllActivatedBargainDataReq& GetAllActivatedBargainDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAllActivatedBargainDataReq* GetAllActivatedBargainDataReq::New(::google::protobuf::Arena* arena) const {
  GetAllActivatedBargainDataReq* n = new GetAllActivatedBargainDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAllActivatedBargainDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllActivatedBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetAllActivatedBargainDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetAllActivatedBargainDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetAllActivatedBargainDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetAllActivatedBargainDataReq)
  return false;
#undef DO_
}

void GetAllActivatedBargainDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetAllActivatedBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetAllActivatedBargainDataReq)
}

::google::protobuf::uint8* GetAllActivatedBargainDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllActivatedBargainDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllActivatedBargainDataReq)
  return target;
}

size_t GetAllActivatedBargainDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllActivatedBargainDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAllActivatedBargainDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetAllActivatedBargainDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActivatedBargainDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllActivatedBargainDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetAllActivatedBargainDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetAllActivatedBargainDataReq)
    MergeFrom(*source);
  }
}

void GetAllActivatedBargainDataReq::MergeFrom(const GetAllActivatedBargainDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllActivatedBargainDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllActivatedBargainDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetAllActivatedBargainDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActivatedBargainDataReq::CopyFrom(const GetAllActivatedBargainDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllActivatedBargainDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActivatedBargainDataReq::IsInitialized() const {
  return true;
}

void GetAllActivatedBargainDataReq::Swap(GetAllActivatedBargainDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllActivatedBargainDataReq::InternalSwap(GetAllActivatedBargainDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAllActivatedBargainDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAllActivatedBargainDataReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllActivatedBargainDataRsp::kSnapshotListFieldNumber;
const int GetAllActivatedBargainDataRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllActivatedBargainDataRsp::GetAllActivatedBargainDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetAllActivatedBargainDataRsp)
}
GetAllActivatedBargainDataRsp::GetAllActivatedBargainDataRsp(const GetAllActivatedBargainDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      snapshot_list_(from.snapshot_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetAllActivatedBargainDataRsp)
}

void GetAllActivatedBargainDataRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetAllActivatedBargainDataRsp::~GetAllActivatedBargainDataRsp() {
  // @@protoc_insertion_point(destructor:proto.GetAllActivatedBargainDataRsp)
  SharedDtor();
}

void GetAllActivatedBargainDataRsp::SharedDtor() {
}

void GetAllActivatedBargainDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllActivatedBargainDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllActivatedBargainDataRsp& GetAllActivatedBargainDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAllActivatedBargainDataRsp* GetAllActivatedBargainDataRsp::New(::google::protobuf::Arena* arena) const {
  GetAllActivatedBargainDataRsp* n = new GetAllActivatedBargainDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAllActivatedBargainDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllActivatedBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snapshot_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetAllActivatedBargainDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetAllActivatedBargainDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.BargainSnapshot snapshot_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_snapshot_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetAllActivatedBargainDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetAllActivatedBargainDataRsp)
  return false;
#undef DO_
}

void GetAllActivatedBargainDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetAllActivatedBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BargainSnapshot snapshot_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshot_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->snapshot_list(static_cast<int>(i)), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetAllActivatedBargainDataRsp)
}

::google::protobuf::uint8* GetAllActivatedBargainDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllActivatedBargainDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.BargainSnapshot snapshot_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshot_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->snapshot_list(static_cast<int>(i)), deterministic, target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllActivatedBargainDataRsp)
  return target;
}

size_t GetAllActivatedBargainDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllActivatedBargainDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BargainSnapshot snapshot_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->snapshot_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->snapshot_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAllActivatedBargainDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetAllActivatedBargainDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllActivatedBargainDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllActivatedBargainDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetAllActivatedBargainDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetAllActivatedBargainDataRsp)
    MergeFrom(*source);
  }
}

void GetAllActivatedBargainDataRsp::MergeFrom(const GetAllActivatedBargainDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllActivatedBargainDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snapshot_list_.MergeFrom(from.snapshot_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetAllActivatedBargainDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetAllActivatedBargainDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllActivatedBargainDataRsp::CopyFrom(const GetAllActivatedBargainDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllActivatedBargainDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllActivatedBargainDataRsp::IsInitialized() const {
  return true;
}

void GetAllActivatedBargainDataRsp::Swap(GetAllActivatedBargainDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllActivatedBargainDataRsp::InternalSwap(GetAllActivatedBargainDataRsp* other) {
  using std::swap;
  snapshot_list_.InternalSwap(&other->snapshot_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAllActivatedBargainDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAllActivatedBargainDataRsp

// repeated .proto.BargainSnapshot snapshot_list = 2;
int GetAllActivatedBargainDataRsp::snapshot_list_size() const {
  return snapshot_list_.size();
}
void GetAllActivatedBargainDataRsp::clear_snapshot_list() {
  snapshot_list_.Clear();
}
const ::proto::BargainSnapshot& GetAllActivatedBargainDataRsp::snapshot_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetAllActivatedBargainDataRsp.snapshot_list)
  return snapshot_list_.Get(index);
}
::proto::BargainSnapshot* GetAllActivatedBargainDataRsp::mutable_snapshot_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetAllActivatedBargainDataRsp.snapshot_list)
  return snapshot_list_.Mutable(index);
}
::proto::BargainSnapshot* GetAllActivatedBargainDataRsp::add_snapshot_list() {
  // @@protoc_insertion_point(field_add:proto.GetAllActivatedBargainDataRsp.snapshot_list)
  return snapshot_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BargainSnapshot >*
GetAllActivatedBargainDataRsp::mutable_snapshot_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetAllActivatedBargainDataRsp.snapshot_list)
  return &snapshot_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BargainSnapshot >&
GetAllActivatedBargainDataRsp::snapshot_list() const {
  // @@protoc_insertion_point(field_list:proto.GetAllActivatedBargainDataRsp.snapshot_list)
  return snapshot_list_;
}

// int32 retcode = 14;
void GetAllActivatedBargainDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetAllActivatedBargainDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetAllActivatedBargainDataRsp.retcode)
  return retcode_;
}
void GetAllActivatedBargainDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetAllActivatedBargainDataRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCondMeetQuestListUpdateNotify::kDelQuestIdListFieldNumber;
const int ServerCondMeetQuestListUpdateNotify::kAddQuestIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCondMeetQuestListUpdateNotify::ServerCondMeetQuestListUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCondMeetQuestListUpdateNotify)
}
ServerCondMeetQuestListUpdateNotify::ServerCondMeetQuestListUpdateNotify(const ServerCondMeetQuestListUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      add_quest_id_list_(from.add_quest_id_list_),
      del_quest_id_list_(from.del_quest_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerCondMeetQuestListUpdateNotify)
}

void ServerCondMeetQuestListUpdateNotify::SharedCtor() {
  _cached_size_ = 0;
}

ServerCondMeetQuestListUpdateNotify::~ServerCondMeetQuestListUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerCondMeetQuestListUpdateNotify)
  SharedDtor();
}

void ServerCondMeetQuestListUpdateNotify::SharedDtor() {
}

void ServerCondMeetQuestListUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCondMeetQuestListUpdateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCondMeetQuestListUpdateNotify& ServerCondMeetQuestListUpdateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCondMeetQuestListUpdateNotify* ServerCondMeetQuestListUpdateNotify::New(::google::protobuf::Arena* arena) const {
  ServerCondMeetQuestListUpdateNotify* n = new ServerCondMeetQuestListUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCondMeetQuestListUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCondMeetQuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_quest_id_list_.Clear();
  del_quest_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerCondMeetQuestListUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCondMeetQuestListUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 add_quest_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_add_quest_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_add_quest_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 del_quest_id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_quest_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_del_quest_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCondMeetQuestListUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCondMeetQuestListUpdateNotify)
  return false;
#undef DO_
}

void ServerCondMeetQuestListUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCondMeetQuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 add_quest_id_list = 2;
  if (this->add_quest_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _add_quest_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->add_quest_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->add_quest_id_list(i), output);
  }

  // repeated uint32 del_quest_id_list = 7;
  if (this->del_quest_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_quest_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_quest_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_quest_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCondMeetQuestListUpdateNotify)
}

::google::protobuf::uint8* ServerCondMeetQuestListUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCondMeetQuestListUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 add_quest_id_list = 2;
  if (this->add_quest_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _add_quest_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->add_quest_id_list_, target);
  }

  // repeated uint32 del_quest_id_list = 7;
  if (this->del_quest_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_quest_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_quest_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCondMeetQuestListUpdateNotify)
  return target;
}

size_t ServerCondMeetQuestListUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCondMeetQuestListUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 add_quest_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->add_quest_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _add_quest_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 del_quest_id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_quest_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_quest_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCondMeetQuestListUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCondMeetQuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCondMeetQuestListUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCondMeetQuestListUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCondMeetQuestListUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCondMeetQuestListUpdateNotify)
    MergeFrom(*source);
  }
}

void ServerCondMeetQuestListUpdateNotify::MergeFrom(const ServerCondMeetQuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCondMeetQuestListUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  add_quest_id_list_.MergeFrom(from.add_quest_id_list_);
  del_quest_id_list_.MergeFrom(from.del_quest_id_list_);
}

void ServerCondMeetQuestListUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCondMeetQuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCondMeetQuestListUpdateNotify::CopyFrom(const ServerCondMeetQuestListUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCondMeetQuestListUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCondMeetQuestListUpdateNotify::IsInitialized() const {
  return true;
}

void ServerCondMeetQuestListUpdateNotify::Swap(ServerCondMeetQuestListUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCondMeetQuestListUpdateNotify::InternalSwap(ServerCondMeetQuestListUpdateNotify* other) {
  using std::swap;
  add_quest_id_list_.InternalSwap(&other->add_quest_id_list_);
  del_quest_id_list_.InternalSwap(&other->del_quest_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCondMeetQuestListUpdateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCondMeetQuestListUpdateNotify

// repeated uint32 del_quest_id_list = 7;
int ServerCondMeetQuestListUpdateNotify::del_quest_id_list_size() const {
  return del_quest_id_list_.size();
}
void ServerCondMeetQuestListUpdateNotify::clear_del_quest_id_list() {
  del_quest_id_list_.Clear();
}
::google::protobuf::uint32 ServerCondMeetQuestListUpdateNotify::del_quest_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerCondMeetQuestListUpdateNotify.del_quest_id_list)
  return del_quest_id_list_.Get(index);
}
void ServerCondMeetQuestListUpdateNotify::set_del_quest_id_list(int index, ::google::protobuf::uint32 value) {
  del_quest_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerCondMeetQuestListUpdateNotify.del_quest_id_list)
}
void ServerCondMeetQuestListUpdateNotify::add_del_quest_id_list(::google::protobuf::uint32 value) {
  del_quest_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerCondMeetQuestListUpdateNotify.del_quest_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerCondMeetQuestListUpdateNotify::del_quest_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerCondMeetQuestListUpdateNotify.del_quest_id_list)
  return del_quest_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerCondMeetQuestListUpdateNotify::mutable_del_quest_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerCondMeetQuestListUpdateNotify.del_quest_id_list)
  return &del_quest_id_list_;
}

// repeated uint32 add_quest_id_list = 2;
int ServerCondMeetQuestListUpdateNotify::add_quest_id_list_size() const {
  return add_quest_id_list_.size();
}
void ServerCondMeetQuestListUpdateNotify::clear_add_quest_id_list() {
  add_quest_id_list_.Clear();
}
::google::protobuf::uint32 ServerCondMeetQuestListUpdateNotify::add_quest_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerCondMeetQuestListUpdateNotify.add_quest_id_list)
  return add_quest_id_list_.Get(index);
}
void ServerCondMeetQuestListUpdateNotify::set_add_quest_id_list(int index, ::google::protobuf::uint32 value) {
  add_quest_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerCondMeetQuestListUpdateNotify.add_quest_id_list)
}
void ServerCondMeetQuestListUpdateNotify::add_add_quest_id_list(::google::protobuf::uint32 value) {
  add_quest_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerCondMeetQuestListUpdateNotify.add_quest_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerCondMeetQuestListUpdateNotify::add_quest_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerCondMeetQuestListUpdateNotify.add_quest_id_list)
  return add_quest_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerCondMeetQuestListUpdateNotify::mutable_add_quest_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerCondMeetQuestListUpdateNotify.add_quest_id_list)
  return &add_quest_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestGlobalVar::kValueFieldNumber;
const int QuestGlobalVar::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestGlobalVar::QuestGlobalVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestGlobalVar)
}
QuestGlobalVar::QuestGlobalVar(const QuestGlobalVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestGlobalVar)
}

void QuestGlobalVar::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _cached_size_ = 0;
}

QuestGlobalVar::~QuestGlobalVar() {
  // @@protoc_insertion_point(destructor:proto.QuestGlobalVar)
  SharedDtor();
}

void QuestGlobalVar::SharedDtor() {
}

void QuestGlobalVar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestGlobalVar::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestGlobalVar& QuestGlobalVar::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestGlobalVar* QuestGlobalVar::New(::google::protobuf::Arena* arena) const {
  QuestGlobalVar* n = new QuestGlobalVar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestGlobalVar::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestGlobalVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool QuestGlobalVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestGlobalVar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestGlobalVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestGlobalVar)
  return false;
#undef DO_
}

void QuestGlobalVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestGlobalVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 9;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->key(), output);
  }

  // int32 value = 14;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestGlobalVar)
}

::google::protobuf::uint8* QuestGlobalVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestGlobalVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key = 9;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->key(), target);
  }

  // int32 value = 14;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestGlobalVar)
  return target;
}

size_t QuestGlobalVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestGlobalVar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 key = 9;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key());
  }

  // int32 value = 14;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestGlobalVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestGlobalVar)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestGlobalVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestGlobalVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestGlobalVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestGlobalVar)
    MergeFrom(*source);
  }
}

void QuestGlobalVar::MergeFrom(const QuestGlobalVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestGlobalVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void QuestGlobalVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestGlobalVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestGlobalVar::CopyFrom(const QuestGlobalVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestGlobalVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestGlobalVar::IsInitialized() const {
  return true;
}

void QuestGlobalVar::Swap(QuestGlobalVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestGlobalVar::InternalSwap(QuestGlobalVar* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestGlobalVar::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestGlobalVar

// int32 value = 14;
void QuestGlobalVar::clear_value() {
  value_ = 0;
}
::google::protobuf::int32 QuestGlobalVar::value() const {
  // @@protoc_insertion_point(field_get:proto.QuestGlobalVar.value)
  return value_;
}
void QuestGlobalVar::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestGlobalVar.value)
}

// uint32 key = 9;
void QuestGlobalVar::clear_key() {
  key_ = 0u;
}
::google::protobuf::uint32 QuestGlobalVar::key() const {
  // @@protoc_insertion_point(field_get:proto.QuestGlobalVar.key)
  return key_;
}
void QuestGlobalVar::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestGlobalVar.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestGlobalVarNotify::kVarListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestGlobalVarNotify::QuestGlobalVarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestGlobalVarNotify)
}
QuestGlobalVarNotify::QuestGlobalVarNotify(const QuestGlobalVarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      var_list_(from.var_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.QuestGlobalVarNotify)
}

void QuestGlobalVarNotify::SharedCtor() {
  _cached_size_ = 0;
}

QuestGlobalVarNotify::~QuestGlobalVarNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestGlobalVarNotify)
  SharedDtor();
}

void QuestGlobalVarNotify::SharedDtor() {
}

void QuestGlobalVarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestGlobalVarNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestGlobalVarNotify& QuestGlobalVarNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestGlobalVarNotify* QuestGlobalVarNotify::New(::google::protobuf::Arena* arena) const {
  QuestGlobalVarNotify* n = new QuestGlobalVarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestGlobalVarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestGlobalVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_list_.Clear();
  _internal_metadata_.Clear();
}

bool QuestGlobalVarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestGlobalVarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.QuestGlobalVar var_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_var_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestGlobalVarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestGlobalVarNotify)
  return false;
#undef DO_
}

void QuestGlobalVarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestGlobalVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.QuestGlobalVar var_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->var_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->var_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestGlobalVarNotify)
}

::google::protobuf::uint8* QuestGlobalVarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestGlobalVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.QuestGlobalVar var_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->var_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->var_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestGlobalVarNotify)
  return target;
}

size_t QuestGlobalVarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestGlobalVarNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.QuestGlobalVar var_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->var_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->var_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestGlobalVarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestGlobalVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestGlobalVarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestGlobalVarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestGlobalVarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestGlobalVarNotify)
    MergeFrom(*source);
  }
}

void QuestGlobalVarNotify::MergeFrom(const QuestGlobalVarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestGlobalVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  var_list_.MergeFrom(from.var_list_);
}

void QuestGlobalVarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestGlobalVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestGlobalVarNotify::CopyFrom(const QuestGlobalVarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestGlobalVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestGlobalVarNotify::IsInitialized() const {
  return true;
}

void QuestGlobalVarNotify::Swap(QuestGlobalVarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestGlobalVarNotify::InternalSwap(QuestGlobalVarNotify* other) {
  using std::swap;
  var_list_.InternalSwap(&other->var_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestGlobalVarNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestGlobalVarNotify

// repeated .proto.QuestGlobalVar var_list = 12;
int QuestGlobalVarNotify::var_list_size() const {
  return var_list_.size();
}
void QuestGlobalVarNotify::clear_var_list() {
  var_list_.Clear();
}
const ::proto::QuestGlobalVar& QuestGlobalVarNotify::var_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QuestGlobalVarNotify.var_list)
  return var_list_.Get(index);
}
::proto::QuestGlobalVar* QuestGlobalVarNotify::mutable_var_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QuestGlobalVarNotify.var_list)
  return var_list_.Mutable(index);
}
::proto::QuestGlobalVar* QuestGlobalVarNotify::add_var_list() {
  // @@protoc_insertion_point(field_add:proto.QuestGlobalVarNotify.var_list)
  return var_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::QuestGlobalVar >*
QuestGlobalVarNotify::mutable_var_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QuestGlobalVarNotify.var_list)
  return &var_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::QuestGlobalVar >&
QuestGlobalVarNotify::var_list() const {
  // @@protoc_insertion_point(field_list:proto.QuestGlobalVarNotify.var_list)
  return var_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestTransmitReq::kPointIdFieldNumber;
const int QuestTransmitReq::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestTransmitReq::QuestTransmitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestTransmitReq)
}
QuestTransmitReq::QuestTransmitReq(const QuestTransmitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_id_, &from.point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_id_) -
    reinterpret_cast<char*>(&point_id_)) + sizeof(quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestTransmitReq)
}

void QuestTransmitReq::SharedCtor() {
  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(quest_id_));
  _cached_size_ = 0;
}

QuestTransmitReq::~QuestTransmitReq() {
  // @@protoc_insertion_point(destructor:proto.QuestTransmitReq)
  SharedDtor();
}

void QuestTransmitReq::SharedDtor() {
}

void QuestTransmitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestTransmitReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestTransmitReq& QuestTransmitReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestTransmitReq* QuestTransmitReq::New(::google::protobuf::Arena* arena) const {
  QuestTransmitReq* n = new QuestTransmitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestTransmitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(quest_id_));
  _internal_metadata_.Clear();
}

bool QuestTransmitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestTransmitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 point_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestTransmitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestTransmitReq)
  return false;
#undef DO_
}

void QuestTransmitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->point_id(), output);
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestTransmitReq)
}

::google::protobuf::uint8* QuestTransmitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->point_id(), target);
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestTransmitReq)
  return target;
}

size_t QuestTransmitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestTransmitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // uint32 quest_id = 10;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestTransmitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestTransmitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestTransmitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestTransmitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestTransmitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestTransmitReq)
    MergeFrom(*source);
  }
}

void QuestTransmitReq::MergeFrom(const QuestTransmitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestTransmitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void QuestTransmitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestTransmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestTransmitReq::CopyFrom(const QuestTransmitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestTransmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestTransmitReq::IsInitialized() const {
  return true;
}

void QuestTransmitReq::Swap(QuestTransmitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestTransmitReq::InternalSwap(QuestTransmitReq* other) {
  using std::swap;
  swap(point_id_, other->point_id_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestTransmitReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestTransmitReq

// uint32 point_id = 3;
void QuestTransmitReq::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 QuestTransmitReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestTransmitReq.point_id)
  return point_id_;
}
void QuestTransmitReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestTransmitReq.point_id)
}

// uint32 quest_id = 10;
void QuestTransmitReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestTransmitReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestTransmitReq.quest_id)
  return quest_id_;
}
void QuestTransmitReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestTransmitReq.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestTransmitRsp::kPointIdFieldNumber;
const int QuestTransmitRsp::kRetcodeFieldNumber;
const int QuestTransmitRsp::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestTransmitRsp::QuestTransmitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestTransmitRsp)
}
QuestTransmitRsp::QuestTransmitRsp(const QuestTransmitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_id_, &from.point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&point_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestTransmitRsp)
}

void QuestTransmitRsp::SharedCtor() {
  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

QuestTransmitRsp::~QuestTransmitRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestTransmitRsp)
  SharedDtor();
}

void QuestTransmitRsp::SharedDtor() {
}

void QuestTransmitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestTransmitRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestTransmitRsp& QuestTransmitRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestTransmitRsp* QuestTransmitRsp::New(::google::protobuf::Arena* arena) const {
  QuestTransmitRsp* n = new QuestTransmitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestTransmitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool QuestTransmitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestTransmitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestTransmitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestTransmitRsp)
  return false;
#undef DO_
}

void QuestTransmitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quest_id(), output);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->retcode(), output);
  }

  // uint32 point_id = 8;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestTransmitRsp)
}

::google::protobuf::uint8* QuestTransmitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quest_id(), target);
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->retcode(), target);
  }

  // uint32 point_id = 8;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestTransmitRsp)
  return target;
}

size_t QuestTransmitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestTransmitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_id = 8;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // uint32 quest_id = 5;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // int32 retcode = 7;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestTransmitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestTransmitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestTransmitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestTransmitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestTransmitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestTransmitRsp)
    MergeFrom(*source);
  }
}

void QuestTransmitRsp::MergeFrom(const QuestTransmitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestTransmitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void QuestTransmitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestTransmitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestTransmitRsp::CopyFrom(const QuestTransmitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestTransmitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestTransmitRsp::IsInitialized() const {
  return true;
}

void QuestTransmitRsp::Swap(QuestTransmitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestTransmitRsp::InternalSwap(QuestTransmitRsp* other) {
  using std::swap;
  swap(point_id_, other->point_id_);
  swap(quest_id_, other->quest_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestTransmitRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestTransmitRsp

// uint32 point_id = 8;
void QuestTransmitRsp::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 QuestTransmitRsp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestTransmitRsp.point_id)
  return point_id_;
}
void QuestTransmitRsp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestTransmitRsp.point_id)
}

// int32 retcode = 7;
void QuestTransmitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestTransmitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestTransmitRsp.retcode)
  return retcode_;
}
void QuestTransmitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestTransmitRsp.retcode)
}

// uint32 quest_id = 5;
void QuestTransmitRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 QuestTransmitRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestTransmitRsp.quest_id)
  return quest_id_;
}
void QuestTransmitRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestTransmitRsp.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalLineAllDataReq::PersonalLineAllDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersonalLineAllDataReq)
}
PersonalLineAllDataReq::PersonalLineAllDataReq(const PersonalLineAllDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PersonalLineAllDataReq)
}

void PersonalLineAllDataReq::SharedCtor() {
  _cached_size_ = 0;
}

PersonalLineAllDataReq::~PersonalLineAllDataReq() {
  // @@protoc_insertion_point(destructor:proto.PersonalLineAllDataReq)
  SharedDtor();
}

void PersonalLineAllDataReq::SharedDtor() {
}

void PersonalLineAllDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalLineAllDataReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonalLineAllDataReq& PersonalLineAllDataReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalLineAllDataReq* PersonalLineAllDataReq::New(::google::protobuf::Arena* arena) const {
  PersonalLineAllDataReq* n = new PersonalLineAllDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalLineAllDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersonalLineAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PersonalLineAllDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersonalLineAllDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersonalLineAllDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersonalLineAllDataReq)
  return false;
#undef DO_
}

void PersonalLineAllDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersonalLineAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersonalLineAllDataReq)
}

::google::protobuf::uint8* PersonalLineAllDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersonalLineAllDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersonalLineAllDataReq)
  return target;
}

size_t PersonalLineAllDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersonalLineAllDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalLineAllDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersonalLineAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalLineAllDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalLineAllDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersonalLineAllDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersonalLineAllDataReq)
    MergeFrom(*source);
  }
}

void PersonalLineAllDataReq::MergeFrom(const PersonalLineAllDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersonalLineAllDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PersonalLineAllDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersonalLineAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalLineAllDataReq::CopyFrom(const PersonalLineAllDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersonalLineAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalLineAllDataReq::IsInitialized() const {
  return true;
}

void PersonalLineAllDataReq::Swap(PersonalLineAllDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalLineAllDataReq::InternalSwap(PersonalLineAllDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalLineAllDataReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalLineAllDataReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockedPersonallineData::kLockReasonFieldNumber;
const int LockedPersonallineData::kPersonalLineIdFieldNumber;
const int LockedPersonallineData::kChapterIdFieldNumber;
const int LockedPersonallineData::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockedPersonallineData::LockedPersonallineData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LockedPersonallineData)
}
LockedPersonallineData::LockedPersonallineData(const LockedPersonallineData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lock_reason_, &from.lock_reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&personal_line_id_) -
    reinterpret_cast<char*>(&lock_reason_)) + sizeof(personal_line_id_));
  clear_has_param();
  switch (from.param_case()) {
    case kChapterId: {
      set_chapter_id(from.chapter_id());
      break;
    }
    case kLevel: {
      set_level(from.level());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.LockedPersonallineData)
}

void LockedPersonallineData::SharedCtor() {
  ::memset(&lock_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&personal_line_id_) -
      reinterpret_cast<char*>(&lock_reason_)) + sizeof(personal_line_id_));
  clear_has_param();
  _cached_size_ = 0;
}

LockedPersonallineData::~LockedPersonallineData() {
  // @@protoc_insertion_point(destructor:proto.LockedPersonallineData)
  SharedDtor();
}

void LockedPersonallineData::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void LockedPersonallineData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockedPersonallineData::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockedPersonallineData& LockedPersonallineData::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

LockedPersonallineData* LockedPersonallineData::New(::google::protobuf::Arena* arena) const {
  LockedPersonallineData* n = new LockedPersonallineData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockedPersonallineData::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.LockedPersonallineData)
  switch (param_case()) {
    case kChapterId: {
      // No need to clear
      break;
    }
    case kLevel: {
      // No need to clear
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void LockedPersonallineData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LockedPersonallineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lock_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&personal_line_id_) -
      reinterpret_cast<char*>(&lock_reason_)) + sizeof(personal_line_id_));
  clear_param();
  _internal_metadata_.Clear();
}

bool LockedPersonallineData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LockedPersonallineData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.LockedPersonallineData.LockReason lock_reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lock_reason(static_cast< ::proto::LockedPersonallineData_LockReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chapter_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.chapter_id_)));
          set_has_chapter_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 personal_line_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &personal_line_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LockedPersonallineData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LockedPersonallineData)
  return false;
#undef DO_
}

void LockedPersonallineData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LockedPersonallineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LockedPersonallineData.LockReason lock_reason = 4;
  if (this->lock_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->lock_reason(), output);
  }

  // uint32 chapter_id = 5;
  if (has_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->chapter_id(), output);
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->personal_line_id(), output);
  }

  // uint32 level = 13;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LockedPersonallineData)
}

::google::protobuf::uint8* LockedPersonallineData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LockedPersonallineData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.LockedPersonallineData.LockReason lock_reason = 4;
  if (this->lock_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->lock_reason(), target);
  }

  // uint32 chapter_id = 5;
  if (has_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->chapter_id(), target);
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->personal_line_id(), target);
  }

  // uint32 level = 13;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LockedPersonallineData)
  return target;
}

size_t LockedPersonallineData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LockedPersonallineData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.LockedPersonallineData.LockReason lock_reason = 4;
  if (this->lock_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lock_reason());
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->personal_line_id());
  }

  switch (param_case()) {
    // uint32 chapter_id = 5;
    case kChapterId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapter_id());
      break;
    }
    // uint32 level = 13;
    case kLevel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockedPersonallineData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LockedPersonallineData)
  GOOGLE_DCHECK_NE(&from, this);
  const LockedPersonallineData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockedPersonallineData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LockedPersonallineData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LockedPersonallineData)
    MergeFrom(*source);
  }
}

void LockedPersonallineData::MergeFrom(const LockedPersonallineData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LockedPersonallineData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lock_reason() != 0) {
    set_lock_reason(from.lock_reason());
  }
  if (from.personal_line_id() != 0) {
    set_personal_line_id(from.personal_line_id());
  }
  switch (from.param_case()) {
    case kChapterId: {
      set_chapter_id(from.chapter_id());
      break;
    }
    case kLevel: {
      set_level(from.level());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void LockedPersonallineData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LockedPersonallineData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockedPersonallineData::CopyFrom(const LockedPersonallineData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LockedPersonallineData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockedPersonallineData::IsInitialized() const {
  return true;
}

void LockedPersonallineData::Swap(LockedPersonallineData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockedPersonallineData::InternalSwap(LockedPersonallineData* other) {
  using std::swap;
  swap(lock_reason_, other->lock_reason_);
  swap(personal_line_id_, other->personal_line_id_);
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockedPersonallineData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockedPersonallineData

// .proto.LockedPersonallineData.LockReason lock_reason = 4;
void LockedPersonallineData::clear_lock_reason() {
  lock_reason_ = 0;
}
::proto::LockedPersonallineData_LockReason LockedPersonallineData::lock_reason() const {
  // @@protoc_insertion_point(field_get:proto.LockedPersonallineData.lock_reason)
  return static_cast< ::proto::LockedPersonallineData_LockReason >(lock_reason_);
}
void LockedPersonallineData::set_lock_reason(::proto::LockedPersonallineData_LockReason value) {
  
  lock_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.LockedPersonallineData.lock_reason)
}

// uint32 personal_line_id = 6;
void LockedPersonallineData::clear_personal_line_id() {
  personal_line_id_ = 0u;
}
::google::protobuf::uint32 LockedPersonallineData::personal_line_id() const {
  // @@protoc_insertion_point(field_get:proto.LockedPersonallineData.personal_line_id)
  return personal_line_id_;
}
void LockedPersonallineData::set_personal_line_id(::google::protobuf::uint32 value) {
  
  personal_line_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LockedPersonallineData.personal_line_id)
}

// uint32 chapter_id = 5;
bool LockedPersonallineData::has_chapter_id() const {
  return param_case() == kChapterId;
}
void LockedPersonallineData::set_has_chapter_id() {
  _oneof_case_[0] = kChapterId;
}
void LockedPersonallineData::clear_chapter_id() {
  if (has_chapter_id()) {
    param_.chapter_id_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 LockedPersonallineData::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.LockedPersonallineData.chapter_id)
  if (has_chapter_id()) {
    return param_.chapter_id_;
  }
  return 0u;
}
void LockedPersonallineData::set_chapter_id(::google::protobuf::uint32 value) {
  if (!has_chapter_id()) {
    clear_param();
    set_has_chapter_id();
  }
  param_.chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LockedPersonallineData.chapter_id)
}

// uint32 level = 13;
bool LockedPersonallineData::has_level() const {
  return param_case() == kLevel;
}
void LockedPersonallineData::set_has_level() {
  _oneof_case_[0] = kLevel;
}
void LockedPersonallineData::clear_level() {
  if (has_level()) {
    param_.level_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 LockedPersonallineData::level() const {
  // @@protoc_insertion_point(field_get:proto.LockedPersonallineData.level)
  if (has_level()) {
    return param_.level_;
  }
  return 0u;
}
void LockedPersonallineData::set_level(::google::protobuf::uint32 value) {
  if (!has_level()) {
    clear_param();
    set_has_level();
  }
  param_.level_ = value;
  // @@protoc_insertion_point(field_set:proto.LockedPersonallineData.level)
}

bool LockedPersonallineData::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void LockedPersonallineData::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
LockedPersonallineData::ParamCase LockedPersonallineData::param_case() const {
  return LockedPersonallineData::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonalLineAllDataRsp::kCurFinishedDailyTaskCountFieldNumber;
const int PersonalLineAllDataRsp::kCanBeUnlockedPersonalLineListFieldNumber;
const int PersonalLineAllDataRsp::kRetcodeFieldNumber;
const int PersonalLineAllDataRsp::kOngoingPersonalLineListFieldNumber;
const int PersonalLineAllDataRsp::kLegendaryKeyCountFieldNumber;
const int PersonalLineAllDataRsp::kLockedPersonalLineListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalLineAllDataRsp::PersonalLineAllDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersonalLineAllDataRsp)
}
PersonalLineAllDataRsp::PersonalLineAllDataRsp(const PersonalLineAllDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      can_be_unlocked_personal_line_list_(from.can_be_unlocked_personal_line_list_),
      ongoing_personal_line_list_(from.ongoing_personal_line_list_),
      locked_personal_line_list_(from.locked_personal_line_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_finished_daily_task_count_, &from.cur_finished_daily_task_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&cur_finished_daily_task_count_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.PersonalLineAllDataRsp)
}

void PersonalLineAllDataRsp::SharedCtor() {
  ::memset(&cur_finished_daily_task_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_finished_daily_task_count_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

PersonalLineAllDataRsp::~PersonalLineAllDataRsp() {
  // @@protoc_insertion_point(destructor:proto.PersonalLineAllDataRsp)
  SharedDtor();
}

void PersonalLineAllDataRsp::SharedDtor() {
}

void PersonalLineAllDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalLineAllDataRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonalLineAllDataRsp& PersonalLineAllDataRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalLineAllDataRsp* PersonalLineAllDataRsp::New(::google::protobuf::Arena* arena) const {
  PersonalLineAllDataRsp* n = new PersonalLineAllDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalLineAllDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersonalLineAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  can_be_unlocked_personal_line_list_.Clear();
  ongoing_personal_line_list_.Clear();
  locked_personal_line_list_.Clear();
  ::memset(&cur_finished_daily_task_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&cur_finished_daily_task_count_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool PersonalLineAllDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersonalLineAllDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cur_finished_daily_task_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_finished_daily_task_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 can_be_unlocked_personal_line_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_can_be_unlocked_personal_line_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_can_be_unlocked_personal_line_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 ongoing_personal_line_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ongoing_personal_line_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_ongoing_personal_line_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 legendary_key_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &legendary_key_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.LockedPersonallineData locked_personal_line_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_locked_personal_line_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersonalLineAllDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersonalLineAllDataRsp)
  return false;
#undef DO_
}

void PersonalLineAllDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersonalLineAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_finished_daily_task_count = 2;
  if (this->cur_finished_daily_task_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_finished_daily_task_count(), output);
  }

  // repeated uint32 can_be_unlocked_personal_line_list = 4;
  if (this->can_be_unlocked_personal_line_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _can_be_unlocked_personal_line_list_cached_byte_size_));
  }
  for (int i = 0, n = this->can_be_unlocked_personal_line_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->can_be_unlocked_personal_line_list(i), output);
  }

  // repeated uint32 ongoing_personal_line_list = 5;
  if (this->ongoing_personal_line_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ongoing_personal_line_list_cached_byte_size_));
  }
  for (int i = 0, n = this->ongoing_personal_line_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ongoing_personal_line_list(i), output);
  }

  // uint32 legendary_key_count = 7;
  if (this->legendary_key_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->legendary_key_count(), output);
  }

  // repeated .proto.LockedPersonallineData locked_personal_line_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_personal_line_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->locked_personal_line_list(static_cast<int>(i)), output);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersonalLineAllDataRsp)
}

::google::protobuf::uint8* PersonalLineAllDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersonalLineAllDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_finished_daily_task_count = 2;
  if (this->cur_finished_daily_task_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_finished_daily_task_count(), target);
  }

  // repeated uint32 can_be_unlocked_personal_line_list = 4;
  if (this->can_be_unlocked_personal_line_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _can_be_unlocked_personal_line_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->can_be_unlocked_personal_line_list_, target);
  }

  // repeated uint32 ongoing_personal_line_list = 5;
  if (this->ongoing_personal_line_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ongoing_personal_line_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ongoing_personal_line_list_, target);
  }

  // uint32 legendary_key_count = 7;
  if (this->legendary_key_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->legendary_key_count(), target);
  }

  // repeated .proto.LockedPersonallineData locked_personal_line_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_personal_line_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->locked_personal_line_list(static_cast<int>(i)), deterministic, target);
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersonalLineAllDataRsp)
  return target;
}

size_t PersonalLineAllDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersonalLineAllDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 can_be_unlocked_personal_line_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->can_be_unlocked_personal_line_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _can_be_unlocked_personal_line_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 ongoing_personal_line_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ongoing_personal_line_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ongoing_personal_line_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.LockedPersonallineData locked_personal_line_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->locked_personal_line_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locked_personal_line_list(static_cast<int>(i)));
    }
  }

  // uint32 cur_finished_daily_task_count = 2;
  if (this->cur_finished_daily_task_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_finished_daily_task_count());
  }

  // uint32 legendary_key_count = 7;
  if (this->legendary_key_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->legendary_key_count());
  }

  // int32 retcode = 11;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalLineAllDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersonalLineAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalLineAllDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalLineAllDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersonalLineAllDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersonalLineAllDataRsp)
    MergeFrom(*source);
  }
}

void PersonalLineAllDataRsp::MergeFrom(const PersonalLineAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersonalLineAllDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  can_be_unlocked_personal_line_list_.MergeFrom(from.can_be_unlocked_personal_line_list_);
  ongoing_personal_line_list_.MergeFrom(from.ongoing_personal_line_list_);
  locked_personal_line_list_.MergeFrom(from.locked_personal_line_list_);
  if (from.cur_finished_daily_task_count() != 0) {
    set_cur_finished_daily_task_count(from.cur_finished_daily_task_count());
  }
  if (from.legendary_key_count() != 0) {
    set_legendary_key_count(from.legendary_key_count());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PersonalLineAllDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersonalLineAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalLineAllDataRsp::CopyFrom(const PersonalLineAllDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersonalLineAllDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalLineAllDataRsp::IsInitialized() const {
  return true;
}

void PersonalLineAllDataRsp::Swap(PersonalLineAllDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalLineAllDataRsp::InternalSwap(PersonalLineAllDataRsp* other) {
  using std::swap;
  can_be_unlocked_personal_line_list_.InternalSwap(&other->can_be_unlocked_personal_line_list_);
  ongoing_personal_line_list_.InternalSwap(&other->ongoing_personal_line_list_);
  locked_personal_line_list_.InternalSwap(&other->locked_personal_line_list_);
  swap(cur_finished_daily_task_count_, other->cur_finished_daily_task_count_);
  swap(legendary_key_count_, other->legendary_key_count_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalLineAllDataRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalLineAllDataRsp

// uint32 cur_finished_daily_task_count = 2;
void PersonalLineAllDataRsp::clear_cur_finished_daily_task_count() {
  cur_finished_daily_task_count_ = 0u;
}
::google::protobuf::uint32 PersonalLineAllDataRsp::cur_finished_daily_task_count() const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.cur_finished_daily_task_count)
  return cur_finished_daily_task_count_;
}
void PersonalLineAllDataRsp::set_cur_finished_daily_task_count(::google::protobuf::uint32 value) {
  
  cur_finished_daily_task_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalLineAllDataRsp.cur_finished_daily_task_count)
}

// repeated uint32 can_be_unlocked_personal_line_list = 4;
int PersonalLineAllDataRsp::can_be_unlocked_personal_line_list_size() const {
  return can_be_unlocked_personal_line_list_.size();
}
void PersonalLineAllDataRsp::clear_can_be_unlocked_personal_line_list() {
  can_be_unlocked_personal_line_list_.Clear();
}
::google::protobuf::uint32 PersonalLineAllDataRsp::can_be_unlocked_personal_line_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.can_be_unlocked_personal_line_list)
  return can_be_unlocked_personal_line_list_.Get(index);
}
void PersonalLineAllDataRsp::set_can_be_unlocked_personal_line_list(int index, ::google::protobuf::uint32 value) {
  can_be_unlocked_personal_line_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PersonalLineAllDataRsp.can_be_unlocked_personal_line_list)
}
void PersonalLineAllDataRsp::add_can_be_unlocked_personal_line_list(::google::protobuf::uint32 value) {
  can_be_unlocked_personal_line_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PersonalLineAllDataRsp.can_be_unlocked_personal_line_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PersonalLineAllDataRsp::can_be_unlocked_personal_line_list() const {
  // @@protoc_insertion_point(field_list:proto.PersonalLineAllDataRsp.can_be_unlocked_personal_line_list)
  return can_be_unlocked_personal_line_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PersonalLineAllDataRsp::mutable_can_be_unlocked_personal_line_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersonalLineAllDataRsp.can_be_unlocked_personal_line_list)
  return &can_be_unlocked_personal_line_list_;
}

// int32 retcode = 11;
void PersonalLineAllDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PersonalLineAllDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.retcode)
  return retcode_;
}
void PersonalLineAllDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalLineAllDataRsp.retcode)
}

// repeated uint32 ongoing_personal_line_list = 5;
int PersonalLineAllDataRsp::ongoing_personal_line_list_size() const {
  return ongoing_personal_line_list_.size();
}
void PersonalLineAllDataRsp::clear_ongoing_personal_line_list() {
  ongoing_personal_line_list_.Clear();
}
::google::protobuf::uint32 PersonalLineAllDataRsp::ongoing_personal_line_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.ongoing_personal_line_list)
  return ongoing_personal_line_list_.Get(index);
}
void PersonalLineAllDataRsp::set_ongoing_personal_line_list(int index, ::google::protobuf::uint32 value) {
  ongoing_personal_line_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PersonalLineAllDataRsp.ongoing_personal_line_list)
}
void PersonalLineAllDataRsp::add_ongoing_personal_line_list(::google::protobuf::uint32 value) {
  ongoing_personal_line_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PersonalLineAllDataRsp.ongoing_personal_line_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PersonalLineAllDataRsp::ongoing_personal_line_list() const {
  // @@protoc_insertion_point(field_list:proto.PersonalLineAllDataRsp.ongoing_personal_line_list)
  return ongoing_personal_line_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PersonalLineAllDataRsp::mutable_ongoing_personal_line_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersonalLineAllDataRsp.ongoing_personal_line_list)
  return &ongoing_personal_line_list_;
}

// uint32 legendary_key_count = 7;
void PersonalLineAllDataRsp::clear_legendary_key_count() {
  legendary_key_count_ = 0u;
}
::google::protobuf::uint32 PersonalLineAllDataRsp::legendary_key_count() const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.legendary_key_count)
  return legendary_key_count_;
}
void PersonalLineAllDataRsp::set_legendary_key_count(::google::protobuf::uint32 value) {
  
  legendary_key_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalLineAllDataRsp.legendary_key_count)
}

// repeated .proto.LockedPersonallineData locked_personal_line_list = 10;
int PersonalLineAllDataRsp::locked_personal_line_list_size() const {
  return locked_personal_line_list_.size();
}
void PersonalLineAllDataRsp::clear_locked_personal_line_list() {
  locked_personal_line_list_.Clear();
}
const ::proto::LockedPersonallineData& PersonalLineAllDataRsp::locked_personal_line_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineAllDataRsp.locked_personal_line_list)
  return locked_personal_line_list_.Get(index);
}
::proto::LockedPersonallineData* PersonalLineAllDataRsp::mutable_locked_personal_line_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PersonalLineAllDataRsp.locked_personal_line_list)
  return locked_personal_line_list_.Mutable(index);
}
::proto::LockedPersonallineData* PersonalLineAllDataRsp::add_locked_personal_line_list() {
  // @@protoc_insertion_point(field_add:proto.PersonalLineAllDataRsp.locked_personal_line_list)
  return locked_personal_line_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::LockedPersonallineData >*
PersonalLineAllDataRsp::mutable_locked_personal_line_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersonalLineAllDataRsp.locked_personal_line_list)
  return &locked_personal_line_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::LockedPersonallineData >&
PersonalLineAllDataRsp::locked_personal_line_list() const {
  // @@protoc_insertion_point(field_list:proto.PersonalLineAllDataRsp.locked_personal_line_list)
  return locked_personal_line_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedeemLegendaryKeyReq::RedeemLegendaryKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RedeemLegendaryKeyReq)
}
RedeemLegendaryKeyReq::RedeemLegendaryKeyReq(const RedeemLegendaryKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RedeemLegendaryKeyReq)
}

void RedeemLegendaryKeyReq::SharedCtor() {
  _cached_size_ = 0;
}

RedeemLegendaryKeyReq::~RedeemLegendaryKeyReq() {
  // @@protoc_insertion_point(destructor:proto.RedeemLegendaryKeyReq)
  SharedDtor();
}

void RedeemLegendaryKeyReq::SharedDtor() {
}

void RedeemLegendaryKeyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedeemLegendaryKeyReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedeemLegendaryKeyReq& RedeemLegendaryKeyReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedeemLegendaryKeyReq* RedeemLegendaryKeyReq::New(::google::protobuf::Arena* arena) const {
  RedeemLegendaryKeyReq* n = new RedeemLegendaryKeyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedeemLegendaryKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RedeemLegendaryKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RedeemLegendaryKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RedeemLegendaryKeyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RedeemLegendaryKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RedeemLegendaryKeyReq)
  return false;
#undef DO_
}

void RedeemLegendaryKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RedeemLegendaryKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RedeemLegendaryKeyReq)
}

::google::protobuf::uint8* RedeemLegendaryKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RedeemLegendaryKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RedeemLegendaryKeyReq)
  return target;
}

size_t RedeemLegendaryKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RedeemLegendaryKeyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedeemLegendaryKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RedeemLegendaryKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RedeemLegendaryKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedeemLegendaryKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RedeemLegendaryKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RedeemLegendaryKeyReq)
    MergeFrom(*source);
  }
}

void RedeemLegendaryKeyReq::MergeFrom(const RedeemLegendaryKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RedeemLegendaryKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RedeemLegendaryKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RedeemLegendaryKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedeemLegendaryKeyReq::CopyFrom(const RedeemLegendaryKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RedeemLegendaryKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedeemLegendaryKeyReq::IsInitialized() const {
  return true;
}

void RedeemLegendaryKeyReq::Swap(RedeemLegendaryKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedeemLegendaryKeyReq::InternalSwap(RedeemLegendaryKeyReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedeemLegendaryKeyReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedeemLegendaryKeyReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedeemLegendaryKeyRsp::kLegendaryKeyCountFieldNumber;
const int RedeemLegendaryKeyRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedeemLegendaryKeyRsp::RedeemLegendaryKeyRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RedeemLegendaryKeyRsp)
}
RedeemLegendaryKeyRsp::RedeemLegendaryKeyRsp(const RedeemLegendaryKeyRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&legendary_key_count_, &from.legendary_key_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&legendary_key_count_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.RedeemLegendaryKeyRsp)
}

void RedeemLegendaryKeyRsp::SharedCtor() {
  ::memset(&legendary_key_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&legendary_key_count_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

RedeemLegendaryKeyRsp::~RedeemLegendaryKeyRsp() {
  // @@protoc_insertion_point(destructor:proto.RedeemLegendaryKeyRsp)
  SharedDtor();
}

void RedeemLegendaryKeyRsp::SharedDtor() {
}

void RedeemLegendaryKeyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedeemLegendaryKeyRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedeemLegendaryKeyRsp& RedeemLegendaryKeyRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedeemLegendaryKeyRsp* RedeemLegendaryKeyRsp::New(::google::protobuf::Arena* arena) const {
  RedeemLegendaryKeyRsp* n = new RedeemLegendaryKeyRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedeemLegendaryKeyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RedeemLegendaryKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&legendary_key_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&legendary_key_count_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool RedeemLegendaryKeyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RedeemLegendaryKeyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 legendary_key_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &legendary_key_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RedeemLegendaryKeyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RedeemLegendaryKeyRsp)
  return false;
#undef DO_
}

void RedeemLegendaryKeyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RedeemLegendaryKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 legendary_key_count = 4;
  if (this->legendary_key_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->legendary_key_count(), output);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RedeemLegendaryKeyRsp)
}

::google::protobuf::uint8* RedeemLegendaryKeyRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RedeemLegendaryKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 legendary_key_count = 4;
  if (this->legendary_key_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->legendary_key_count(), target);
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RedeemLegendaryKeyRsp)
  return target;
}

size_t RedeemLegendaryKeyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RedeemLegendaryKeyRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 legendary_key_count = 4;
  if (this->legendary_key_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->legendary_key_count());
  }

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedeemLegendaryKeyRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RedeemLegendaryKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RedeemLegendaryKeyRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedeemLegendaryKeyRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RedeemLegendaryKeyRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RedeemLegendaryKeyRsp)
    MergeFrom(*source);
  }
}

void RedeemLegendaryKeyRsp::MergeFrom(const RedeemLegendaryKeyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RedeemLegendaryKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.legendary_key_count() != 0) {
    set_legendary_key_count(from.legendary_key_count());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RedeemLegendaryKeyRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RedeemLegendaryKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedeemLegendaryKeyRsp::CopyFrom(const RedeemLegendaryKeyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RedeemLegendaryKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedeemLegendaryKeyRsp::IsInitialized() const {
  return true;
}

void RedeemLegendaryKeyRsp::Swap(RedeemLegendaryKeyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedeemLegendaryKeyRsp::InternalSwap(RedeemLegendaryKeyRsp* other) {
  using std::swap;
  swap(legendary_key_count_, other->legendary_key_count_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedeemLegendaryKeyRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedeemLegendaryKeyRsp

// uint32 legendary_key_count = 4;
void RedeemLegendaryKeyRsp::clear_legendary_key_count() {
  legendary_key_count_ = 0u;
}
::google::protobuf::uint32 RedeemLegendaryKeyRsp::legendary_key_count() const {
  // @@protoc_insertion_point(field_get:proto.RedeemLegendaryKeyRsp.legendary_key_count)
  return legendary_key_count_;
}
void RedeemLegendaryKeyRsp::set_legendary_key_count(::google::protobuf::uint32 value) {
  
  legendary_key_count_ = value;
  // @@protoc_insertion_point(field_set:proto.RedeemLegendaryKeyRsp.legendary_key_count)
}

// int32 retcode = 6;
void RedeemLegendaryKeyRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RedeemLegendaryKeyRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RedeemLegendaryKeyRsp.retcode)
  return retcode_;
}
void RedeemLegendaryKeyRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RedeemLegendaryKeyRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockPersonalLineReq::kPersonalLineIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockPersonalLineReq::UnlockPersonalLineReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockPersonalLineReq)
}
UnlockPersonalLineReq::UnlockPersonalLineReq(const UnlockPersonalLineReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  personal_line_id_ = from.personal_line_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnlockPersonalLineReq)
}

void UnlockPersonalLineReq::SharedCtor() {
  personal_line_id_ = 0u;
  _cached_size_ = 0;
}

UnlockPersonalLineReq::~UnlockPersonalLineReq() {
  // @@protoc_insertion_point(destructor:proto.UnlockPersonalLineReq)
  SharedDtor();
}

void UnlockPersonalLineReq::SharedDtor() {
}

void UnlockPersonalLineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockPersonalLineReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockPersonalLineReq& UnlockPersonalLineReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockPersonalLineReq* UnlockPersonalLineReq::New(::google::protobuf::Arena* arena) const {
  UnlockPersonalLineReq* n = new UnlockPersonalLineReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockPersonalLineReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockPersonalLineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  personal_line_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnlockPersonalLineReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockPersonalLineReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 personal_line_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &personal_line_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockPersonalLineReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockPersonalLineReq)
  return false;
#undef DO_
}

void UnlockPersonalLineReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockPersonalLineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 personal_line_id = 7;
  if (this->personal_line_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->personal_line_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockPersonalLineReq)
}

::google::protobuf::uint8* UnlockPersonalLineReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockPersonalLineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 personal_line_id = 7;
  if (this->personal_line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->personal_line_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockPersonalLineReq)
  return target;
}

size_t UnlockPersonalLineReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockPersonalLineReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 personal_line_id = 7;
  if (this->personal_line_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->personal_line_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockPersonalLineReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockPersonalLineReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockPersonalLineReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockPersonalLineReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockPersonalLineReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockPersonalLineReq)
    MergeFrom(*source);
  }
}

void UnlockPersonalLineReq::MergeFrom(const UnlockPersonalLineReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockPersonalLineReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.personal_line_id() != 0) {
    set_personal_line_id(from.personal_line_id());
  }
}

void UnlockPersonalLineReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockPersonalLineReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockPersonalLineReq::CopyFrom(const UnlockPersonalLineReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockPersonalLineReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockPersonalLineReq::IsInitialized() const {
  return true;
}

void UnlockPersonalLineReq::Swap(UnlockPersonalLineReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockPersonalLineReq::InternalSwap(UnlockPersonalLineReq* other) {
  using std::swap;
  swap(personal_line_id_, other->personal_line_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockPersonalLineReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockPersonalLineReq

// uint32 personal_line_id = 7;
void UnlockPersonalLineReq::clear_personal_line_id() {
  personal_line_id_ = 0u;
}
::google::protobuf::uint32 UnlockPersonalLineReq::personal_line_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockPersonalLineReq.personal_line_id)
  return personal_line_id_;
}
void UnlockPersonalLineReq::set_personal_line_id(::google::protobuf::uint32 value) {
  
  personal_line_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockPersonalLineReq.personal_line_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockPersonalLineRsp::kRetcodeFieldNumber;
const int UnlockPersonalLineRsp::kPersonalLineIdFieldNumber;
const int UnlockPersonalLineRsp::kLevelFieldNumber;
const int UnlockPersonalLineRsp::kChapterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockPersonalLineRsp::UnlockPersonalLineRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockPersonalLineRsp)
}
UnlockPersonalLineRsp::UnlockPersonalLineRsp(const UnlockPersonalLineRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&personal_line_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(personal_line_id_));
  clear_has_param();
  switch (from.param_case()) {
    case kLevel: {
      set_level(from.level());
      break;
    }
    case kChapterId: {
      set_chapter_id(from.chapter_id());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.UnlockPersonalLineRsp)
}

void UnlockPersonalLineRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&personal_line_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(personal_line_id_));
  clear_has_param();
  _cached_size_ = 0;
}

UnlockPersonalLineRsp::~UnlockPersonalLineRsp() {
  // @@protoc_insertion_point(destructor:proto.UnlockPersonalLineRsp)
  SharedDtor();
}

void UnlockPersonalLineRsp::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void UnlockPersonalLineRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockPersonalLineRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockPersonalLineRsp& UnlockPersonalLineRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockPersonalLineRsp* UnlockPersonalLineRsp::New(::google::protobuf::Arena* arena) const {
  UnlockPersonalLineRsp* n = new UnlockPersonalLineRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockPersonalLineRsp::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.UnlockPersonalLineRsp)
  switch (param_case()) {
    case kLevel: {
      // No need to clear
      break;
    }
    case kChapterId: {
      // No need to clear
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void UnlockPersonalLineRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockPersonalLineRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&personal_line_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(personal_line_id_));
  clear_param();
  _internal_metadata_.Clear();
}

bool UnlockPersonalLineRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockPersonalLineRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 personal_line_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &personal_line_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chapter_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.chapter_id_)));
          set_has_chapter_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockPersonalLineRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockPersonalLineRsp)
  return false;
#undef DO_
}

void UnlockPersonalLineRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockPersonalLineRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->personal_line_id(), output);
  }

  // uint32 chapter_id = 14;
  if (has_chapter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->chapter_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockPersonalLineRsp)
}

::google::protobuf::uint8* UnlockPersonalLineRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockPersonalLineRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->personal_line_id(), target);
  }

  // uint32 chapter_id = 14;
  if (has_chapter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->chapter_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockPersonalLineRsp)
  return target;
}

size_t UnlockPersonalLineRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockPersonalLineRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 personal_line_id = 6;
  if (this->personal_line_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->personal_line_id());
  }

  switch (param_case()) {
    // uint32 level = 3;
    case kLevel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
      break;
    }
    // uint32 chapter_id = 14;
    case kChapterId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapter_id());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockPersonalLineRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockPersonalLineRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockPersonalLineRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockPersonalLineRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockPersonalLineRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockPersonalLineRsp)
    MergeFrom(*source);
  }
}

void UnlockPersonalLineRsp::MergeFrom(const UnlockPersonalLineRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockPersonalLineRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.personal_line_id() != 0) {
    set_personal_line_id(from.personal_line_id());
  }
  switch (from.param_case()) {
    case kLevel: {
      set_level(from.level());
      break;
    }
    case kChapterId: {
      set_chapter_id(from.chapter_id());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void UnlockPersonalLineRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockPersonalLineRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockPersonalLineRsp::CopyFrom(const UnlockPersonalLineRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockPersonalLineRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockPersonalLineRsp::IsInitialized() const {
  return true;
}

void UnlockPersonalLineRsp::Swap(UnlockPersonalLineRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockPersonalLineRsp::InternalSwap(UnlockPersonalLineRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(personal_line_id_, other->personal_line_id_);
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockPersonalLineRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockPersonalLineRsp

// int32 retcode = 5;
void UnlockPersonalLineRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UnlockPersonalLineRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UnlockPersonalLineRsp.retcode)
  return retcode_;
}
void UnlockPersonalLineRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockPersonalLineRsp.retcode)
}

// uint32 personal_line_id = 6;
void UnlockPersonalLineRsp::clear_personal_line_id() {
  personal_line_id_ = 0u;
}
::google::protobuf::uint32 UnlockPersonalLineRsp::personal_line_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockPersonalLineRsp.personal_line_id)
  return personal_line_id_;
}
void UnlockPersonalLineRsp::set_personal_line_id(::google::protobuf::uint32 value) {
  
  personal_line_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockPersonalLineRsp.personal_line_id)
}

// uint32 level = 3;
bool UnlockPersonalLineRsp::has_level() const {
  return param_case() == kLevel;
}
void UnlockPersonalLineRsp::set_has_level() {
  _oneof_case_[0] = kLevel;
}
void UnlockPersonalLineRsp::clear_level() {
  if (has_level()) {
    param_.level_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 UnlockPersonalLineRsp::level() const {
  // @@protoc_insertion_point(field_get:proto.UnlockPersonalLineRsp.level)
  if (has_level()) {
    return param_.level_;
  }
  return 0u;
}
void UnlockPersonalLineRsp::set_level(::google::protobuf::uint32 value) {
  if (!has_level()) {
    clear_param();
    set_has_level();
  }
  param_.level_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockPersonalLineRsp.level)
}

// uint32 chapter_id = 14;
bool UnlockPersonalLineRsp::has_chapter_id() const {
  return param_case() == kChapterId;
}
void UnlockPersonalLineRsp::set_has_chapter_id() {
  _oneof_case_[0] = kChapterId;
}
void UnlockPersonalLineRsp::clear_chapter_id() {
  if (has_chapter_id()) {
    param_.chapter_id_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 UnlockPersonalLineRsp::chapter_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockPersonalLineRsp.chapter_id)
  if (has_chapter_id()) {
    return param_.chapter_id_;
  }
  return 0u;
}
void UnlockPersonalLineRsp::set_chapter_id(::google::protobuf::uint32 value) {
  if (!has_chapter_id()) {
    clear_param();
    set_has_chapter_id();
  }
  param_.chapter_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockPersonalLineRsp.chapter_id)
}

bool UnlockPersonalLineRsp::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void UnlockPersonalLineRsp::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
UnlockPersonalLineRsp::ParamCase UnlockPersonalLineRsp::param_case() const {
  return UnlockPersonalLineRsp::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelFinishParentQuestNotify::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelFinishParentQuestNotify::CancelFinishParentQuestNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CancelFinishParentQuestNotify)
}
CancelFinishParentQuestNotify::CancelFinishParentQuestNotify(const CancelFinishParentQuestNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.CancelFinishParentQuestNotify)
}

void CancelFinishParentQuestNotify::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

CancelFinishParentQuestNotify::~CancelFinishParentQuestNotify() {
  // @@protoc_insertion_point(destructor:proto.CancelFinishParentQuestNotify)
  SharedDtor();
}

void CancelFinishParentQuestNotify::SharedDtor() {
}

void CancelFinishParentQuestNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelFinishParentQuestNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelFinishParentQuestNotify& CancelFinishParentQuestNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelFinishParentQuestNotify* CancelFinishParentQuestNotify::New(::google::protobuf::Arena* arena) const {
  CancelFinishParentQuestNotify* n = new CancelFinishParentQuestNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelFinishParentQuestNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CancelFinishParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool CancelFinishParentQuestNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CancelFinishParentQuestNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CancelFinishParentQuestNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CancelFinishParentQuestNotify)
  return false;
#undef DO_
}

void CancelFinishParentQuestNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CancelFinishParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 10;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CancelFinishParentQuestNotify)
}

::google::protobuf::uint8* CancelFinishParentQuestNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CancelFinishParentQuestNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 10;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CancelFinishParentQuestNotify)
  return target;
}

size_t CancelFinishParentQuestNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CancelFinishParentQuestNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 10;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelFinishParentQuestNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CancelFinishParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelFinishParentQuestNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelFinishParentQuestNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CancelFinishParentQuestNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CancelFinishParentQuestNotify)
    MergeFrom(*source);
  }
}

void CancelFinishParentQuestNotify::MergeFrom(const CancelFinishParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CancelFinishParentQuestNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void CancelFinishParentQuestNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CancelFinishParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelFinishParentQuestNotify::CopyFrom(const CancelFinishParentQuestNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CancelFinishParentQuestNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelFinishParentQuestNotify::IsInitialized() const {
  return true;
}

void CancelFinishParentQuestNotify::Swap(CancelFinishParentQuestNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelFinishParentQuestNotify::InternalSwap(CancelFinishParentQuestNotify* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelFinishParentQuestNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelFinishParentQuestNotify

// uint32 parent_quest_id = 10;
void CancelFinishParentQuestNotify::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 CancelFinishParentQuestNotify::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.CancelFinishParentQuestNotify.parent_quest_id)
  return parent_quest_id_;
}
void CancelFinishParentQuestNotify::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CancelFinishParentQuestNotify.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry() {}
QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[51];
}
void QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::MergeFrom(const QuestUpdateQuestTimeVarNotify_TimeVarMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestUpdateQuestTimeVarNotify::kTimeVarMapFieldNumber;
const int QuestUpdateQuestTimeVarNotify::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestUpdateQuestTimeVarNotify)
}
QuestUpdateQuestTimeVarNotify::QuestUpdateQuestTimeVarNotify(const QuestUpdateQuestTimeVarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_var_map_.MergeFrom(from.time_var_map_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QuestUpdateQuestTimeVarNotify)
}

void QuestUpdateQuestTimeVarNotify::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

QuestUpdateQuestTimeVarNotify::~QuestUpdateQuestTimeVarNotify() {
  // @@protoc_insertion_point(destructor:proto.QuestUpdateQuestTimeVarNotify)
  SharedDtor();
}

void QuestUpdateQuestTimeVarNotify::SharedDtor() {
}

void QuestUpdateQuestTimeVarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestUpdateQuestTimeVarNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestUpdateQuestTimeVarNotify& QuestUpdateQuestTimeVarNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestUpdateQuestTimeVarNotify* QuestUpdateQuestTimeVarNotify::New(::google::protobuf::Arena* arena) const {
  QuestUpdateQuestTimeVarNotify* n = new QuestUpdateQuestTimeVarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestUpdateQuestTimeVarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestUpdateQuestTimeVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_var_map_.Clear();
  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QuestUpdateQuestTimeVarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestUpdateQuestTimeVarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> time_var_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          QuestUpdateQuestTimeVarNotify_TimeVarMapEntry::Parser< ::google::protobuf::internal::MapField<
              QuestUpdateQuestTimeVarNotify_TimeVarMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&time_var_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestUpdateQuestTimeVarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestUpdateQuestTimeVarNotify)
  return false;
#undef DO_
}

void QuestUpdateQuestTimeVarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestUpdateQuestTimeVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->parent_quest_id(), output);
  }

  // map<uint32, uint32> time_var_map = 8;
  if (!this->time_var_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->time_var_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->time_var_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuestUpdateQuestTimeVarNotify_TimeVarMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(time_var_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<QuestUpdateQuestTimeVarNotify_TimeVarMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it) {
        entry.reset(time_var_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestUpdateQuestTimeVarNotify)
}

::google::protobuf::uint8* QuestUpdateQuestTimeVarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestUpdateQuestTimeVarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->parent_quest_id(), target);
  }

  // map<uint32, uint32> time_var_map = 8;
  if (!this->time_var_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->time_var_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->time_var_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuestUpdateQuestTimeVarNotify_TimeVarMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(time_var_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<QuestUpdateQuestTimeVarNotify_TimeVarMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->time_var_map().begin();
          it != this->time_var_map().end(); ++it) {
        entry.reset(time_var_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestUpdateQuestTimeVarNotify)
  return target;
}

size_t QuestUpdateQuestTimeVarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestUpdateQuestTimeVarNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> time_var_map = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->time_var_map_size());
  {
    ::google::protobuf::scoped_ptr<QuestUpdateQuestTimeVarNotify_TimeVarMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->time_var_map().begin();
        it != this->time_var_map().end(); ++it) {
      entry.reset(time_var_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 parent_quest_id = 5;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestUpdateQuestTimeVarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestUpdateQuestTimeVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestUpdateQuestTimeVarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestUpdateQuestTimeVarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestUpdateQuestTimeVarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestUpdateQuestTimeVarNotify)
    MergeFrom(*source);
  }
}

void QuestUpdateQuestTimeVarNotify::MergeFrom(const QuestUpdateQuestTimeVarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestUpdateQuestTimeVarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  time_var_map_.MergeFrom(from.time_var_map_);
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void QuestUpdateQuestTimeVarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestUpdateQuestTimeVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestUpdateQuestTimeVarNotify::CopyFrom(const QuestUpdateQuestTimeVarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestUpdateQuestTimeVarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestUpdateQuestTimeVarNotify::IsInitialized() const {
  return true;
}

void QuestUpdateQuestTimeVarNotify::Swap(QuestUpdateQuestTimeVarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestUpdateQuestTimeVarNotify::InternalSwap(QuestUpdateQuestTimeVarNotify* other) {
  using std::swap;
  time_var_map_.Swap(&other->time_var_map_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestUpdateQuestTimeVarNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestUpdateQuestTimeVarNotify

// map<uint32, uint32> time_var_map = 8;
int QuestUpdateQuestTimeVarNotify::time_var_map_size() const {
  return time_var_map_.size();
}
void QuestUpdateQuestTimeVarNotify::clear_time_var_map() {
  time_var_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
QuestUpdateQuestTimeVarNotify::time_var_map() const {
  // @@protoc_insertion_point(field_map:proto.QuestUpdateQuestTimeVarNotify.time_var_map)
  return time_var_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
QuestUpdateQuestTimeVarNotify::mutable_time_var_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.QuestUpdateQuestTimeVarNotify.time_var_map)
  return time_var_map_.MutableMap();
}

// uint32 parent_quest_id = 5;
void QuestUpdateQuestTimeVarNotify::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 QuestUpdateQuestTimeVarNotify::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestUpdateQuestTimeVarNotify.parent_quest_id)
  return parent_quest_id_;
}
void QuestUpdateQuestTimeVarNotify::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestUpdateQuestTimeVarNotify.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonalLineNewUnlockNotify::kPersonalLineIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalLineNewUnlockNotify::PersonalLineNewUnlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersonalLineNewUnlockNotify)
}
PersonalLineNewUnlockNotify::PersonalLineNewUnlockNotify(const PersonalLineNewUnlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      personal_line_id_list_(from.personal_line_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PersonalLineNewUnlockNotify)
}

void PersonalLineNewUnlockNotify::SharedCtor() {
  _cached_size_ = 0;
}

PersonalLineNewUnlockNotify::~PersonalLineNewUnlockNotify() {
  // @@protoc_insertion_point(destructor:proto.PersonalLineNewUnlockNotify)
  SharedDtor();
}

void PersonalLineNewUnlockNotify::SharedDtor() {
}

void PersonalLineNewUnlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalLineNewUnlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonalLineNewUnlockNotify& PersonalLineNewUnlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalLineNewUnlockNotify* PersonalLineNewUnlockNotify::New(::google::protobuf::Arena* arena) const {
  PersonalLineNewUnlockNotify* n = new PersonalLineNewUnlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalLineNewUnlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersonalLineNewUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  personal_line_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool PersonalLineNewUnlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersonalLineNewUnlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 personal_line_id_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_personal_line_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_personal_line_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersonalLineNewUnlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersonalLineNewUnlockNotify)
  return false;
#undef DO_
}

void PersonalLineNewUnlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersonalLineNewUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 personal_line_id_list = 11;
  if (this->personal_line_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _personal_line_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->personal_line_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->personal_line_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersonalLineNewUnlockNotify)
}

::google::protobuf::uint8* PersonalLineNewUnlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersonalLineNewUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 personal_line_id_list = 11;
  if (this->personal_line_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _personal_line_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->personal_line_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersonalLineNewUnlockNotify)
  return target;
}

size_t PersonalLineNewUnlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersonalLineNewUnlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 personal_line_id_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->personal_line_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _personal_line_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalLineNewUnlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersonalLineNewUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalLineNewUnlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalLineNewUnlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersonalLineNewUnlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersonalLineNewUnlockNotify)
    MergeFrom(*source);
  }
}

void PersonalLineNewUnlockNotify::MergeFrom(const PersonalLineNewUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersonalLineNewUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  personal_line_id_list_.MergeFrom(from.personal_line_id_list_);
}

void PersonalLineNewUnlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersonalLineNewUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalLineNewUnlockNotify::CopyFrom(const PersonalLineNewUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersonalLineNewUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalLineNewUnlockNotify::IsInitialized() const {
  return true;
}

void PersonalLineNewUnlockNotify::Swap(PersonalLineNewUnlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalLineNewUnlockNotify::InternalSwap(PersonalLineNewUnlockNotify* other) {
  using std::swap;
  personal_line_id_list_.InternalSwap(&other->personal_line_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalLineNewUnlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalLineNewUnlockNotify

// repeated uint32 personal_line_id_list = 11;
int PersonalLineNewUnlockNotify::personal_line_id_list_size() const {
  return personal_line_id_list_.size();
}
void PersonalLineNewUnlockNotify::clear_personal_line_id_list() {
  personal_line_id_list_.Clear();
}
::google::protobuf::uint32 PersonalLineNewUnlockNotify::personal_line_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PersonalLineNewUnlockNotify.personal_line_id_list)
  return personal_line_id_list_.Get(index);
}
void PersonalLineNewUnlockNotify::set_personal_line_id_list(int index, ::google::protobuf::uint32 value) {
  personal_line_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PersonalLineNewUnlockNotify.personal_line_id_list)
}
void PersonalLineNewUnlockNotify::add_personal_line_id_list(::google::protobuf::uint32 value) {
  personal_line_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PersonalLineNewUnlockNotify.personal_line_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PersonalLineNewUnlockNotify::personal_line_id_list() const {
  // @@protoc_insertion_point(field_list:proto.PersonalLineNewUnlockNotify.personal_line_id_list)
  return personal_line_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PersonalLineNewUnlockNotify::mutable_personal_line_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PersonalLineNewUnlockNotify.personal_line_id_list)
  return &personal_line_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NpcTalkStateNotify::kIsBanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NpcTalkStateNotify::NpcTalkStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NpcTalkStateNotify)
}
NpcTalkStateNotify::NpcTalkStateNotify(const NpcTalkStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_ban_ = from.is_ban_;
  // @@protoc_insertion_point(copy_constructor:proto.NpcTalkStateNotify)
}

void NpcTalkStateNotify::SharedCtor() {
  is_ban_ = false;
  _cached_size_ = 0;
}

NpcTalkStateNotify::~NpcTalkStateNotify() {
  // @@protoc_insertion_point(destructor:proto.NpcTalkStateNotify)
  SharedDtor();
}

void NpcTalkStateNotify::SharedDtor() {
}

void NpcTalkStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NpcTalkStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NpcTalkStateNotify& NpcTalkStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

NpcTalkStateNotify* NpcTalkStateNotify::New(::google::protobuf::Arena* arena) const {
  NpcTalkStateNotify* n = new NpcTalkStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NpcTalkStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NpcTalkStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_ban_ = false;
  _internal_metadata_.Clear();
}

bool NpcTalkStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NpcTalkStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_ban = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ban_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NpcTalkStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NpcTalkStateNotify)
  return false;
#undef DO_
}

void NpcTalkStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NpcTalkStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_ban = 1;
  if (this->is_ban() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_ban(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NpcTalkStateNotify)
}

::google::protobuf::uint8* NpcTalkStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NpcTalkStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_ban = 1;
  if (this->is_ban() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_ban(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NpcTalkStateNotify)
  return target;
}

size_t NpcTalkStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NpcTalkStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_ban = 1;
  if (this->is_ban() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NpcTalkStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NpcTalkStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const NpcTalkStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NpcTalkStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NpcTalkStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NpcTalkStateNotify)
    MergeFrom(*source);
  }
}

void NpcTalkStateNotify::MergeFrom(const NpcTalkStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NpcTalkStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_ban() != 0) {
    set_is_ban(from.is_ban());
  }
}

void NpcTalkStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NpcTalkStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NpcTalkStateNotify::CopyFrom(const NpcTalkStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NpcTalkStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NpcTalkStateNotify::IsInitialized() const {
  return true;
}

void NpcTalkStateNotify::Swap(NpcTalkStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NpcTalkStateNotify::InternalSwap(NpcTalkStateNotify* other) {
  using std::swap;
  swap(is_ban_, other->is_ban_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NpcTalkStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NpcTalkStateNotify

// bool is_ban = 1;
void NpcTalkStateNotify::clear_is_ban() {
  is_ban_ = false;
}
bool NpcTalkStateNotify::is_ban() const {
  // @@protoc_insertion_point(field_get:proto.NpcTalkStateNotify.is_ban)
  return is_ban_;
}
void NpcTalkStateNotify::set_is_ban(bool value) {
  
  is_ban_ = value;
  // @@protoc_insertion_point(field_set:proto.NpcTalkStateNotify.is_ban)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestLackingResourceReq::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestLackingResourceReq::GetQuestLackingResourceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestLackingResourceReq)
}
GetQuestLackingResourceReq::GetQuestLackingResourceReq(const GetQuestLackingResourceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quest_id_ = from.quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestLackingResourceReq)
}

void GetQuestLackingResourceReq::SharedCtor() {
  quest_id_ = 0u;
  _cached_size_ = 0;
}

GetQuestLackingResourceReq::~GetQuestLackingResourceReq() {
  // @@protoc_insertion_point(destructor:proto.GetQuestLackingResourceReq)
  SharedDtor();
}

void GetQuestLackingResourceReq::SharedDtor() {
}

void GetQuestLackingResourceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestLackingResourceReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestLackingResourceReq& GetQuestLackingResourceReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestLackingResourceReq* GetQuestLackingResourceReq::New(::google::protobuf::Arena* arena) const {
  GetQuestLackingResourceReq* n = new GetQuestLackingResourceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestLackingResourceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestLackingResourceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetQuestLackingResourceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestLackingResourceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestLackingResourceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestLackingResourceReq)
  return false;
#undef DO_
}

void GetQuestLackingResourceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestLackingResourceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestLackingResourceReq)
}

::google::protobuf::uint8* GetQuestLackingResourceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestLackingResourceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestLackingResourceReq)
  return target;
}

size_t GetQuestLackingResourceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestLackingResourceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 quest_id = 15;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestLackingResourceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestLackingResourceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestLackingResourceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestLackingResourceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestLackingResourceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestLackingResourceReq)
    MergeFrom(*source);
  }
}

void GetQuestLackingResourceReq::MergeFrom(const GetQuestLackingResourceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestLackingResourceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void GetQuestLackingResourceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestLackingResourceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestLackingResourceReq::CopyFrom(const GetQuestLackingResourceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestLackingResourceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestLackingResourceReq::IsInitialized() const {
  return true;
}

void GetQuestLackingResourceReq::Swap(GetQuestLackingResourceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestLackingResourceReq::InternalSwap(GetQuestLackingResourceReq* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestLackingResourceReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestLackingResourceReq

// uint32 quest_id = 15;
void GetQuestLackingResourceReq::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestLackingResourceReq::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestLackingResourceReq.quest_id)
  return quest_id_;
}
void GetQuestLackingResourceReq::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestLackingResourceReq.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::GetQuestLackingResourceRsp_LackedNpcMapEntry() {}
GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::GetQuestLackingResourceRsp_LackedNpcMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[56];
}
void GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedNpcMapEntry::MergeFrom(const GetQuestLackingResourceRsp_LackedNpcMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::GetQuestLackingResourceRsp_LackedPlaceMapEntry() {}
GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::GetQuestLackingResourceRsp_LackedPlaceMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[57];
}
void GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GetQuestLackingResourceRsp::GetQuestLackingResourceRsp_LackedPlaceMapEntry::MergeFrom(const GetQuestLackingResourceRsp_LackedPlaceMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQuestLackingResourceRsp::kQuestIdFieldNumber;
const int GetQuestLackingResourceRsp::kRetcodeFieldNumber;
const int GetQuestLackingResourceRsp::kLackedNpcListFieldNumber;
const int GetQuestLackingResourceRsp::kLackedPlaceListFieldNumber;
const int GetQuestLackingResourceRsp::kLackedNpcMapFieldNumber;
const int GetQuestLackingResourceRsp::kLackedPlaceMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQuestLackingResourceRsp::GetQuestLackingResourceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetQuestLackingResourceRsp)
}
GetQuestLackingResourceRsp::GetQuestLackingResourceRsp(const GetQuestLackingResourceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lacked_place_list_(from.lacked_place_list_),
      lacked_npc_list_(from.lacked_npc_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lacked_place_map_.MergeFrom(from.lacked_place_map_);
  lacked_npc_map_.MergeFrom(from.lacked_npc_map_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.GetQuestLackingResourceRsp)
}

void GetQuestLackingResourceRsp::SharedCtor() {
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetQuestLackingResourceRsp::~GetQuestLackingResourceRsp() {
  // @@protoc_insertion_point(destructor:proto.GetQuestLackingResourceRsp)
  SharedDtor();
}

void GetQuestLackingResourceRsp::SharedDtor() {
}

void GetQuestLackingResourceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQuestLackingResourceRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetQuestLackingResourceRsp& GetQuestLackingResourceRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetQuestLackingResourceRsp* GetQuestLackingResourceRsp::New(::google::protobuf::Arena* arena) const {
  GetQuestLackingResourceRsp* n = new GetQuestLackingResourceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetQuestLackingResourceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetQuestLackingResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lacked_place_map_.Clear();
  lacked_npc_map_.Clear();
  lacked_place_list_.Clear();
  lacked_npc_list_.Clear();
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool GetQuestLackingResourceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetQuestLackingResourceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> lacked_place_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          GetQuestLackingResourceRsp_LackedPlaceMapEntry::Parser< ::google::protobuf::internal::MapField<
              GetQuestLackingResourceRsp_LackedPlaceMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&lacked_place_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> lacked_npc_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          GetQuestLackingResourceRsp_LackedNpcMapEntry::Parser< ::google::protobuf::internal::MapField<
              GetQuestLackingResourceRsp_LackedNpcMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&lacked_npc_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lacked_place_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lacked_place_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_lacked_place_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lacked_npc_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lacked_npc_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122u, input, this->mutable_lacked_npc_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetQuestLackingResourceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetQuestLackingResourceRsp)
  return false;
#undef DO_
}

void GetQuestLackingResourceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetQuestLackingResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> lacked_place_map = 1;
  if (!this->lacked_place_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->lacked_place_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_place_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_place_map().begin();
          it != this->lacked_place_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedPlaceMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_place_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedPlaceMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_place_map().begin();
          it != this->lacked_place_map().end(); ++it) {
        entry.reset(lacked_place_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint32, uint32> lacked_npc_map = 3;
  if (!this->lacked_npc_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->lacked_npc_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_npc_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedNpcMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedNpcMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // uint32 quest_id = 6;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->quest_id(), output);
  }

  // repeated uint32 lacked_place_list = 9;
  if (this->lacked_place_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lacked_place_list_cached_byte_size_));
  }
  for (int i = 0, n = this->lacked_place_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lacked_place_list(i), output);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  // repeated uint32 lacked_npc_list = 15;
  if (this->lacked_npc_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lacked_npc_list_cached_byte_size_));
  }
  for (int i = 0, n = this->lacked_npc_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lacked_npc_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetQuestLackingResourceRsp)
}

::google::protobuf::uint8* GetQuestLackingResourceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetQuestLackingResourceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> lacked_place_map = 1;
  if (!this->lacked_place_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->lacked_place_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_place_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_place_map().begin();
          it != this->lacked_place_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedPlaceMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_place_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedPlaceMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_place_map().begin();
          it != this->lacked_place_map().end(); ++it) {
        entry.reset(lacked_place_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> lacked_npc_map = 3;
  if (!this->lacked_npc_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->lacked_npc_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_npc_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedNpcMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedNpcMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 quest_id = 6;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->quest_id(), target);
  }

  // repeated uint32 lacked_place_list = 9;
  if (this->lacked_place_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _lacked_place_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lacked_place_list_, target);
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  // repeated uint32 lacked_npc_list = 15;
  if (this->lacked_npc_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _lacked_npc_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lacked_npc_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetQuestLackingResourceRsp)
  return target;
}

size_t GetQuestLackingResourceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetQuestLackingResourceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> lacked_place_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lacked_place_map_size());
  {
    ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedPlaceMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->lacked_place_map().begin();
        it != this->lacked_place_map().end(); ++it) {
      entry.reset(lacked_place_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> lacked_npc_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lacked_npc_map_size());
  {
    ::google::protobuf::scoped_ptr<GetQuestLackingResourceRsp_LackedNpcMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->lacked_npc_map().begin();
        it != this->lacked_npc_map().end(); ++it) {
      entry.reset(lacked_npc_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 lacked_place_list = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lacked_place_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lacked_place_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 lacked_npc_list = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lacked_npc_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lacked_npc_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 quest_id = 6;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQuestLackingResourceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetQuestLackingResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQuestLackingResourceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetQuestLackingResourceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetQuestLackingResourceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetQuestLackingResourceRsp)
    MergeFrom(*source);
  }
}

void GetQuestLackingResourceRsp::MergeFrom(const GetQuestLackingResourceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetQuestLackingResourceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lacked_place_map_.MergeFrom(from.lacked_place_map_);
  lacked_npc_map_.MergeFrom(from.lacked_npc_map_);
  lacked_place_list_.MergeFrom(from.lacked_place_list_);
  lacked_npc_list_.MergeFrom(from.lacked_npc_list_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetQuestLackingResourceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetQuestLackingResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQuestLackingResourceRsp::CopyFrom(const GetQuestLackingResourceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetQuestLackingResourceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestLackingResourceRsp::IsInitialized() const {
  return true;
}

void GetQuestLackingResourceRsp::Swap(GetQuestLackingResourceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQuestLackingResourceRsp::InternalSwap(GetQuestLackingResourceRsp* other) {
  using std::swap;
  lacked_place_map_.Swap(&other->lacked_place_map_);
  lacked_npc_map_.Swap(&other->lacked_npc_map_);
  lacked_place_list_.InternalSwap(&other->lacked_place_list_);
  lacked_npc_list_.InternalSwap(&other->lacked_npc_list_);
  swap(quest_id_, other->quest_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetQuestLackingResourceRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetQuestLackingResourceRsp

// uint32 quest_id = 6;
void GetQuestLackingResourceRsp::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 GetQuestLackingResourceRsp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestLackingResourceRsp.quest_id)
  return quest_id_;
}
void GetQuestLackingResourceRsp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestLackingResourceRsp.quest_id)
}

// int32 retcode = 14;
void GetQuestLackingResourceRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetQuestLackingResourceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetQuestLackingResourceRsp.retcode)
  return retcode_;
}
void GetQuestLackingResourceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetQuestLackingResourceRsp.retcode)
}

// repeated uint32 lacked_npc_list = 15;
int GetQuestLackingResourceRsp::lacked_npc_list_size() const {
  return lacked_npc_list_.size();
}
void GetQuestLackingResourceRsp::clear_lacked_npc_list() {
  lacked_npc_list_.Clear();
}
::google::protobuf::uint32 GetQuestLackingResourceRsp::lacked_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetQuestLackingResourceRsp.lacked_npc_list)
  return lacked_npc_list_.Get(index);
}
void GetQuestLackingResourceRsp::set_lacked_npc_list(int index, ::google::protobuf::uint32 value) {
  lacked_npc_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetQuestLackingResourceRsp.lacked_npc_list)
}
void GetQuestLackingResourceRsp::add_lacked_npc_list(::google::protobuf::uint32 value) {
  lacked_npc_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetQuestLackingResourceRsp.lacked_npc_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetQuestLackingResourceRsp::lacked_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.GetQuestLackingResourceRsp.lacked_npc_list)
  return lacked_npc_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetQuestLackingResourceRsp::mutable_lacked_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetQuestLackingResourceRsp.lacked_npc_list)
  return &lacked_npc_list_;
}

// repeated uint32 lacked_place_list = 9;
int GetQuestLackingResourceRsp::lacked_place_list_size() const {
  return lacked_place_list_.size();
}
void GetQuestLackingResourceRsp::clear_lacked_place_list() {
  lacked_place_list_.Clear();
}
::google::protobuf::uint32 GetQuestLackingResourceRsp::lacked_place_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetQuestLackingResourceRsp.lacked_place_list)
  return lacked_place_list_.Get(index);
}
void GetQuestLackingResourceRsp::set_lacked_place_list(int index, ::google::protobuf::uint32 value) {
  lacked_place_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetQuestLackingResourceRsp.lacked_place_list)
}
void GetQuestLackingResourceRsp::add_lacked_place_list(::google::protobuf::uint32 value) {
  lacked_place_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetQuestLackingResourceRsp.lacked_place_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetQuestLackingResourceRsp::lacked_place_list() const {
  // @@protoc_insertion_point(field_list:proto.GetQuestLackingResourceRsp.lacked_place_list)
  return lacked_place_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetQuestLackingResourceRsp::mutable_lacked_place_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetQuestLackingResourceRsp.lacked_place_list)
  return &lacked_place_list_;
}

// map<uint32, uint32> lacked_npc_map = 3;
int GetQuestLackingResourceRsp::lacked_npc_map_size() const {
  return lacked_npc_map_.size();
}
void GetQuestLackingResourceRsp::clear_lacked_npc_map() {
  lacked_npc_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GetQuestLackingResourceRsp::lacked_npc_map() const {
  // @@protoc_insertion_point(field_map:proto.GetQuestLackingResourceRsp.lacked_npc_map)
  return lacked_npc_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GetQuestLackingResourceRsp::mutable_lacked_npc_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetQuestLackingResourceRsp.lacked_npc_map)
  return lacked_npc_map_.MutableMap();
}

// map<uint32, uint32> lacked_place_map = 1;
int GetQuestLackingResourceRsp::lacked_place_map_size() const {
  return lacked_place_map_.size();
}
void GetQuestLackingResourceRsp::clear_lacked_place_map() {
  lacked_place_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GetQuestLackingResourceRsp::lacked_place_map() const {
  // @@protoc_insertion_point(field_map:proto.GetQuestLackingResourceRsp.lacked_place_map)
  return lacked_place_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GetQuestLackingResourceRsp::mutable_lacked_place_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetQuestLackingResourceRsp.lacked_place_map)
  return lacked_place_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetParentQuestVideoKeyReq::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetParentQuestVideoKeyReq::GetParentQuestVideoKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetParentQuestVideoKeyReq)
}
GetParentQuestVideoKeyReq::GetParentQuestVideoKeyReq(const GetParentQuestVideoKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetParentQuestVideoKeyReq)
}

void GetParentQuestVideoKeyReq::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

GetParentQuestVideoKeyReq::~GetParentQuestVideoKeyReq() {
  // @@protoc_insertion_point(destructor:proto.GetParentQuestVideoKeyReq)
  SharedDtor();
}

void GetParentQuestVideoKeyReq::SharedDtor() {
}

void GetParentQuestVideoKeyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetParentQuestVideoKeyReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetParentQuestVideoKeyReq& GetParentQuestVideoKeyReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetParentQuestVideoKeyReq* GetParentQuestVideoKeyReq::New(::google::protobuf::Arena* arena) const {
  GetParentQuestVideoKeyReq* n = new GetParentQuestVideoKeyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetParentQuestVideoKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetParentQuestVideoKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetParentQuestVideoKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetParentQuestVideoKeyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetParentQuestVideoKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetParentQuestVideoKeyReq)
  return false;
#undef DO_
}

void GetParentQuestVideoKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetParentQuestVideoKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 14;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetParentQuestVideoKeyReq)
}

::google::protobuf::uint8* GetParentQuestVideoKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetParentQuestVideoKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 14;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetParentQuestVideoKeyReq)
  return target;
}

size_t GetParentQuestVideoKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetParentQuestVideoKeyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 parent_quest_id = 14;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetParentQuestVideoKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetParentQuestVideoKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetParentQuestVideoKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetParentQuestVideoKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetParentQuestVideoKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetParentQuestVideoKeyReq)
    MergeFrom(*source);
  }
}

void GetParentQuestVideoKeyReq::MergeFrom(const GetParentQuestVideoKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetParentQuestVideoKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetParentQuestVideoKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetParentQuestVideoKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetParentQuestVideoKeyReq::CopyFrom(const GetParentQuestVideoKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetParentQuestVideoKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentQuestVideoKeyReq::IsInitialized() const {
  return true;
}

void GetParentQuestVideoKeyReq::Swap(GetParentQuestVideoKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetParentQuestVideoKeyReq::InternalSwap(GetParentQuestVideoKeyReq* other) {
  using std::swap;
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetParentQuestVideoKeyReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetParentQuestVideoKeyReq

// uint32 parent_quest_id = 14;
void GetParentQuestVideoKeyReq::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetParentQuestVideoKeyReq::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetParentQuestVideoKeyReq.parent_quest_id)
  return parent_quest_id_;
}
void GetParentQuestVideoKeyReq::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetParentQuestVideoKeyReq.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetParentQuestVideoKeyRsp::kRetcodeFieldNumber;
const int GetParentQuestVideoKeyRsp::kVideoKeyFieldNumber;
const int GetParentQuestVideoKeyRsp::kParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetParentQuestVideoKeyRsp::GetParentQuestVideoKeyRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetParentQuestVideoKeyRsp)
}
GetParentQuestVideoKeyRsp::GetParentQuestVideoKeyRsp(const GetParentQuestVideoKeyRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&video_key_, &from.video_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_quest_id_) -
    reinterpret_cast<char*>(&video_key_)) + sizeof(parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetParentQuestVideoKeyRsp)
}

void GetParentQuestVideoKeyRsp::SharedCtor() {
  ::memset(&video_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&video_key_)) + sizeof(parent_quest_id_));
  _cached_size_ = 0;
}

GetParentQuestVideoKeyRsp::~GetParentQuestVideoKeyRsp() {
  // @@protoc_insertion_point(destructor:proto.GetParentQuestVideoKeyRsp)
  SharedDtor();
}

void GetParentQuestVideoKeyRsp::SharedDtor() {
}

void GetParentQuestVideoKeyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetParentQuestVideoKeyRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetParentQuestVideoKeyRsp& GetParentQuestVideoKeyRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetParentQuestVideoKeyRsp* GetParentQuestVideoKeyRsp::New(::google::protobuf::Arena* arena) const {
  GetParentQuestVideoKeyRsp* n = new GetParentQuestVideoKeyRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetParentQuestVideoKeyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetParentQuestVideoKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&video_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_quest_id_) -
      reinterpret_cast<char*>(&video_key_)) + sizeof(parent_quest_id_));
  _internal_metadata_.Clear();
}

bool GetParentQuestVideoKeyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetParentQuestVideoKeyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 video_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &video_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetParentQuestVideoKeyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetParentQuestVideoKeyRsp)
  return false;
#undef DO_
}

void GetParentQuestVideoKeyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetParentQuestVideoKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->video_key(), output);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->retcode(), output);
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetParentQuestVideoKeyRsp)
}

::google::protobuf::uint8* GetParentQuestVideoKeyRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetParentQuestVideoKeyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->video_key(), target);
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->retcode(), target);
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetParentQuestVideoKeyRsp)
  return target;
}

size_t GetParentQuestVideoKeyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetParentQuestVideoKeyRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 video_key = 2;
  if (this->video_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->video_key());
  }

  // int32 retcode = 9;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 parent_quest_id = 11;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetParentQuestVideoKeyRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetParentQuestVideoKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetParentQuestVideoKeyRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetParentQuestVideoKeyRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetParentQuestVideoKeyRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetParentQuestVideoKeyRsp)
    MergeFrom(*source);
  }
}

void GetParentQuestVideoKeyRsp::MergeFrom(const GetParentQuestVideoKeyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetParentQuestVideoKeyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.video_key() != 0) {
    set_video_key(from.video_key());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void GetParentQuestVideoKeyRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetParentQuestVideoKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetParentQuestVideoKeyRsp::CopyFrom(const GetParentQuestVideoKeyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetParentQuestVideoKeyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentQuestVideoKeyRsp::IsInitialized() const {
  return true;
}

void GetParentQuestVideoKeyRsp::Swap(GetParentQuestVideoKeyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetParentQuestVideoKeyRsp::InternalSwap(GetParentQuestVideoKeyRsp* other) {
  using std::swap;
  swap(video_key_, other->video_key_);
  swap(retcode_, other->retcode_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetParentQuestVideoKeyRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetParentQuestVideoKeyRsp

// int32 retcode = 9;
void GetParentQuestVideoKeyRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetParentQuestVideoKeyRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetParentQuestVideoKeyRsp.retcode)
  return retcode_;
}
void GetParentQuestVideoKeyRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetParentQuestVideoKeyRsp.retcode)
}

// uint64 video_key = 2;
void GetParentQuestVideoKeyRsp::clear_video_key() {
  video_key_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetParentQuestVideoKeyRsp::video_key() const {
  // @@protoc_insertion_point(field_get:proto.GetParentQuestVideoKeyRsp.video_key)
  return video_key_;
}
void GetParentQuestVideoKeyRsp::set_video_key(::google::protobuf::uint64 value) {
  
  video_key_ = value;
  // @@protoc_insertion_point(field_set:proto.GetParentQuestVideoKeyRsp.video_key)
}

// uint32 parent_quest_id = 11;
void GetParentQuestVideoKeyRsp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 GetParentQuestVideoKeyRsp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.GetParentQuestVideoKeyRsp.parent_quest_id)
  return parent_quest_id_;
}
void GetParentQuestVideoKeyRsp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetParentQuestVideoKeyRsp.parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentQuestInferenceDataNotify::kParentQuestIdFieldNumber;
const int ParentQuestInferenceDataNotify::kInferencePageListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentQuestInferenceDataNotify::ParentQuestInferenceDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParentQuestInferenceDataNotify)
}
ParentQuestInferenceDataNotify::ParentQuestInferenceDataNotify(const ParentQuestInferenceDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inference_page_list_(from.inference_page_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_quest_id_ = from.parent_quest_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ParentQuestInferenceDataNotify)
}

void ParentQuestInferenceDataNotify::SharedCtor() {
  parent_quest_id_ = 0u;
  _cached_size_ = 0;
}

ParentQuestInferenceDataNotify::~ParentQuestInferenceDataNotify() {
  // @@protoc_insertion_point(destructor:proto.ParentQuestInferenceDataNotify)
  SharedDtor();
}

void ParentQuestInferenceDataNotify::SharedDtor() {
}

void ParentQuestInferenceDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentQuestInferenceDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentQuestInferenceDataNotify& ParentQuestInferenceDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentQuestInferenceDataNotify* ParentQuestInferenceDataNotify::New(::google::protobuf::Arena* arena) const {
  ParentQuestInferenceDataNotify* n = new ParentQuestInferenceDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentQuestInferenceDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParentQuestInferenceDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inference_page_list_.Clear();
  parent_quest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ParentQuestInferenceDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParentQuestInferenceDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 parent_quest_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.InferencePageInfo inference_page_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inference_page_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParentQuestInferenceDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParentQuestInferenceDataNotify)
  return false;
#undef DO_
}

void ParentQuestInferenceDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParentQuestInferenceDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 8;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->parent_quest_id(), output);
  }

  // repeated .proto.InferencePageInfo inference_page_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_page_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->inference_page_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParentQuestInferenceDataNotify)
}

::google::protobuf::uint8* ParentQuestInferenceDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParentQuestInferenceDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 parent_quest_id = 8;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->parent_quest_id(), target);
  }

  // repeated .proto.InferencePageInfo inference_page_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inference_page_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->inference_page_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParentQuestInferenceDataNotify)
  return target;
}

size_t ParentQuestInferenceDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParentQuestInferenceDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.InferencePageInfo inference_page_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->inference_page_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inference_page_list(static_cast<int>(i)));
    }
  }

  // uint32 parent_quest_id = 8;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentQuestInferenceDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParentQuestInferenceDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentQuestInferenceDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentQuestInferenceDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParentQuestInferenceDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParentQuestInferenceDataNotify)
    MergeFrom(*source);
  }
}

void ParentQuestInferenceDataNotify::MergeFrom(const ParentQuestInferenceDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParentQuestInferenceDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inference_page_list_.MergeFrom(from.inference_page_list_);
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
}

void ParentQuestInferenceDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParentQuestInferenceDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentQuestInferenceDataNotify::CopyFrom(const ParentQuestInferenceDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParentQuestInferenceDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentQuestInferenceDataNotify::IsInitialized() const {
  return true;
}

void ParentQuestInferenceDataNotify::Swap(ParentQuestInferenceDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentQuestInferenceDataNotify::InternalSwap(ParentQuestInferenceDataNotify* other) {
  using std::swap;
  inference_page_list_.InternalSwap(&other->inference_page_list_);
  swap(parent_quest_id_, other->parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentQuestInferenceDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentQuestInferenceDataNotify

// uint32 parent_quest_id = 8;
void ParentQuestInferenceDataNotify::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 ParentQuestInferenceDataNotify::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestInferenceDataNotify.parent_quest_id)
  return parent_quest_id_;
}
void ParentQuestInferenceDataNotify::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ParentQuestInferenceDataNotify.parent_quest_id)
}

// repeated .proto.InferencePageInfo inference_page_list = 11;
int ParentQuestInferenceDataNotify::inference_page_list_size() const {
  return inference_page_list_.size();
}
void ParentQuestInferenceDataNotify::clear_inference_page_list() {
  inference_page_list_.Clear();
}
const ::proto::InferencePageInfo& ParentQuestInferenceDataNotify::inference_page_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParentQuestInferenceDataNotify.inference_page_list)
  return inference_page_list_.Get(index);
}
::proto::InferencePageInfo* ParentQuestInferenceDataNotify::mutable_inference_page_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ParentQuestInferenceDataNotify.inference_page_list)
  return inference_page_list_.Mutable(index);
}
::proto::InferencePageInfo* ParentQuestInferenceDataNotify::add_inference_page_list() {
  // @@protoc_insertion_point(field_add:proto.ParentQuestInferenceDataNotify.inference_page_list)
  return inference_page_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::InferencePageInfo >*
ParentQuestInferenceDataNotify::mutable_inference_page_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParentQuestInferenceDataNotify.inference_page_list)
  return &inference_page_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::InferencePageInfo >&
ParentQuestInferenceDataNotify::inference_page_list() const {
  // @@protoc_insertion_point(field_list:proto.ParentQuestInferenceDataNotify.inference_page_list)
  return inference_page_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterpretInferenceWordReq::kWordIdFieldNumber;
const int InterpretInferenceWordReq::kPageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterpretInferenceWordReq::InterpretInferenceWordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InterpretInferenceWordReq)
}
InterpretInferenceWordReq::InterpretInferenceWordReq(const InterpretInferenceWordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_id_, &from.page_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&word_id_) -
    reinterpret_cast<char*>(&page_id_)) + sizeof(word_id_));
  // @@protoc_insertion_point(copy_constructor:proto.InterpretInferenceWordReq)
}

void InterpretInferenceWordReq::SharedCtor() {
  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&word_id_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(word_id_));
  _cached_size_ = 0;
}

InterpretInferenceWordReq::~InterpretInferenceWordReq() {
  // @@protoc_insertion_point(destructor:proto.InterpretInferenceWordReq)
  SharedDtor();
}

void InterpretInferenceWordReq::SharedDtor() {
}

void InterpretInferenceWordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterpretInferenceWordReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterpretInferenceWordReq& InterpretInferenceWordReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InterpretInferenceWordReq* InterpretInferenceWordReq::New(::google::protobuf::Arena* arena) const {
  InterpretInferenceWordReq* n = new InterpretInferenceWordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterpretInferenceWordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InterpretInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&word_id_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(word_id_));
  _internal_metadata_.Clear();
}

bool InterpretInferenceWordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InterpretInferenceWordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 word_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InterpretInferenceWordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InterpretInferenceWordReq)
  return false;
#undef DO_
}

void InterpretInferenceWordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InterpretInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 10;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->page_id(), output);
  }

  // uint32 word_id = 12;
  if (this->word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->word_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InterpretInferenceWordReq)
}

::google::protobuf::uint8* InterpretInferenceWordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InterpretInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 10;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->page_id(), target);
  }

  // uint32 word_id = 12;
  if (this->word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->word_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InterpretInferenceWordReq)
  return target;
}

size_t InterpretInferenceWordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InterpretInferenceWordReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 page_id = 10;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  // uint32 word_id = 12;
  if (this->word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->word_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterpretInferenceWordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InterpretInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const InterpretInferenceWordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterpretInferenceWordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InterpretInferenceWordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InterpretInferenceWordReq)
    MergeFrom(*source);
  }
}

void InterpretInferenceWordReq::MergeFrom(const InterpretInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InterpretInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.word_id() != 0) {
    set_word_id(from.word_id());
  }
}

void InterpretInferenceWordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InterpretInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterpretInferenceWordReq::CopyFrom(const InterpretInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InterpretInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterpretInferenceWordReq::IsInitialized() const {
  return true;
}

void InterpretInferenceWordReq::Swap(InterpretInferenceWordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterpretInferenceWordReq::InternalSwap(InterpretInferenceWordReq* other) {
  using std::swap;
  swap(page_id_, other->page_id_);
  swap(word_id_, other->word_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterpretInferenceWordReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterpretInferenceWordReq

// uint32 word_id = 12;
void InterpretInferenceWordReq::clear_word_id() {
  word_id_ = 0u;
}
::google::protobuf::uint32 InterpretInferenceWordReq::word_id() const {
  // @@protoc_insertion_point(field_get:proto.InterpretInferenceWordReq.word_id)
  return word_id_;
}
void InterpretInferenceWordReq::set_word_id(::google::protobuf::uint32 value) {
  
  word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterpretInferenceWordReq.word_id)
}

// uint32 page_id = 10;
void InterpretInferenceWordReq::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 InterpretInferenceWordReq::page_id() const {
  // @@protoc_insertion_point(field_get:proto.InterpretInferenceWordReq.page_id)
  return page_id_;
}
void InterpretInferenceWordReq::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterpretInferenceWordReq.page_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterpretInferenceWordRsp::kRetcodeFieldNumber;
const int InterpretInferenceWordRsp::kWordIdFieldNumber;
const int InterpretInferenceWordRsp::kPageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterpretInferenceWordRsp::InterpretInferenceWordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.InterpretInferenceWordRsp)
}
InterpretInferenceWordRsp::InterpretInferenceWordRsp(const InterpretInferenceWordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&page_id_, &from.page_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&page_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.InterpretInferenceWordRsp)
}

void InterpretInferenceWordRsp::SharedCtor() {
  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

InterpretInferenceWordRsp::~InterpretInferenceWordRsp() {
  // @@protoc_insertion_point(destructor:proto.InterpretInferenceWordRsp)
  SharedDtor();
}

void InterpretInferenceWordRsp::SharedDtor() {
}

void InterpretInferenceWordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterpretInferenceWordRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterpretInferenceWordRsp& InterpretInferenceWordRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InterpretInferenceWordRsp* InterpretInferenceWordRsp::New(::google::protobuf::Arena* arena) const {
  InterpretInferenceWordRsp* n = new InterpretInferenceWordRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterpretInferenceWordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.InterpretInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&page_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&page_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool InterpretInferenceWordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.InterpretInferenceWordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 word_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.InterpretInferenceWordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.InterpretInferenceWordRsp)
  return false;
#undef DO_
}

void InterpretInferenceWordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.InterpretInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 2;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_id(), output);
  }

  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->word_id(), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.InterpretInferenceWordRsp)
}

::google::protobuf::uint8* InterpretInferenceWordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.InterpretInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 2;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_id(), target);
  }

  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->word_id(), target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.InterpretInferenceWordRsp)
  return target;
}

size_t InterpretInferenceWordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.InterpretInferenceWordRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 page_id = 2;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->word_id());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterpretInferenceWordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.InterpretInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const InterpretInferenceWordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterpretInferenceWordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.InterpretInferenceWordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.InterpretInferenceWordRsp)
    MergeFrom(*source);
  }
}

void InterpretInferenceWordRsp::MergeFrom(const InterpretInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.InterpretInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.word_id() != 0) {
    set_word_id(from.word_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void InterpretInferenceWordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.InterpretInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterpretInferenceWordRsp::CopyFrom(const InterpretInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.InterpretInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterpretInferenceWordRsp::IsInitialized() const {
  return true;
}

void InterpretInferenceWordRsp::Swap(InterpretInferenceWordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterpretInferenceWordRsp::InternalSwap(InterpretInferenceWordRsp* other) {
  using std::swap;
  swap(page_id_, other->page_id_);
  swap(word_id_, other->word_id_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterpretInferenceWordRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterpretInferenceWordRsp

// int32 retcode = 13;
void InterpretInferenceWordRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 InterpretInferenceWordRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.InterpretInferenceWordRsp.retcode)
  return retcode_;
}
void InterpretInferenceWordRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.InterpretInferenceWordRsp.retcode)
}

// uint32 word_id = 6;
void InterpretInferenceWordRsp::clear_word_id() {
  word_id_ = 0u;
}
::google::protobuf::uint32 InterpretInferenceWordRsp::word_id() const {
  // @@protoc_insertion_point(field_get:proto.InterpretInferenceWordRsp.word_id)
  return word_id_;
}
void InterpretInferenceWordRsp::set_word_id(::google::protobuf::uint32 value) {
  
  word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterpretInferenceWordRsp.word_id)
}

// uint32 page_id = 2;
void InterpretInferenceWordRsp::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 InterpretInferenceWordRsp::page_id() const {
  // @@protoc_insertion_point(field_get:proto.InterpretInferenceWordRsp.page_id)
  return page_id_;
}
void InterpretInferenceWordRsp::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InterpretInferenceWordRsp.page_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssociateInferenceWordReq::kBaseWordIdFieldNumber;
const int AssociateInferenceWordReq::kPageIdFieldNumber;
const int AssociateInferenceWordReq::kAssociateWordIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssociateInferenceWordReq::AssociateInferenceWordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AssociateInferenceWordReq)
}
AssociateInferenceWordReq::AssociateInferenceWordReq(const AssociateInferenceWordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&associate_word_id_, &from.associate_word_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&base_word_id_) -
    reinterpret_cast<char*>(&associate_word_id_)) + sizeof(base_word_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AssociateInferenceWordReq)
}

void AssociateInferenceWordReq::SharedCtor() {
  ::memset(&associate_word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_word_id_) -
      reinterpret_cast<char*>(&associate_word_id_)) + sizeof(base_word_id_));
  _cached_size_ = 0;
}

AssociateInferenceWordReq::~AssociateInferenceWordReq() {
  // @@protoc_insertion_point(destructor:proto.AssociateInferenceWordReq)
  SharedDtor();
}

void AssociateInferenceWordReq::SharedDtor() {
}

void AssociateInferenceWordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssociateInferenceWordReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssociateInferenceWordReq& AssociateInferenceWordReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssociateInferenceWordReq* AssociateInferenceWordReq::New(::google::protobuf::Arena* arena) const {
  AssociateInferenceWordReq* n = new AssociateInferenceWordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssociateInferenceWordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AssociateInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&associate_word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_word_id_) -
      reinterpret_cast<char*>(&associate_word_id_)) + sizeof(base_word_id_));
  _internal_metadata_.Clear();
}

bool AssociateInferenceWordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AssociateInferenceWordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 page_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 base_word_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 associate_word_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &associate_word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AssociateInferenceWordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AssociateInferenceWordReq)
  return false;
#undef DO_
}

void AssociateInferenceWordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AssociateInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 3;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page_id(), output);
  }

  // uint32 base_word_id = 11;
  if (this->base_word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->base_word_id(), output);
  }

  // uint32 associate_word_id = 13;
  if (this->associate_word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->associate_word_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AssociateInferenceWordReq)
}

::google::protobuf::uint8* AssociateInferenceWordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AssociateInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 page_id = 3;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->page_id(), target);
  }

  // uint32 base_word_id = 11;
  if (this->base_word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->base_word_id(), target);
  }

  // uint32 associate_word_id = 13;
  if (this->associate_word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->associate_word_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AssociateInferenceWordReq)
  return target;
}

size_t AssociateInferenceWordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AssociateInferenceWordReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 associate_word_id = 13;
  if (this->associate_word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->associate_word_id());
  }

  // uint32 page_id = 3;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  // uint32 base_word_id = 11;
  if (this->base_word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->base_word_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssociateInferenceWordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AssociateInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AssociateInferenceWordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssociateInferenceWordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AssociateInferenceWordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AssociateInferenceWordReq)
    MergeFrom(*source);
  }
}

void AssociateInferenceWordReq::MergeFrom(const AssociateInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AssociateInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.associate_word_id() != 0) {
    set_associate_word_id(from.associate_word_id());
  }
  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.base_word_id() != 0) {
    set_base_word_id(from.base_word_id());
  }
}

void AssociateInferenceWordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AssociateInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssociateInferenceWordReq::CopyFrom(const AssociateInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AssociateInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociateInferenceWordReq::IsInitialized() const {
  return true;
}

void AssociateInferenceWordReq::Swap(AssociateInferenceWordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssociateInferenceWordReq::InternalSwap(AssociateInferenceWordReq* other) {
  using std::swap;
  swap(associate_word_id_, other->associate_word_id_);
  swap(page_id_, other->page_id_);
  swap(base_word_id_, other->base_word_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssociateInferenceWordReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssociateInferenceWordReq

// uint32 base_word_id = 11;
void AssociateInferenceWordReq::clear_base_word_id() {
  base_word_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordReq::base_word_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordReq.base_word_id)
  return base_word_id_;
}
void AssociateInferenceWordReq::set_base_word_id(::google::protobuf::uint32 value) {
  
  base_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordReq.base_word_id)
}

// uint32 page_id = 3;
void AssociateInferenceWordReq::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordReq::page_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordReq.page_id)
  return page_id_;
}
void AssociateInferenceWordReq::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordReq.page_id)
}

// uint32 associate_word_id = 13;
void AssociateInferenceWordReq::clear_associate_word_id() {
  associate_word_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordReq::associate_word_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordReq.associate_word_id)
  return associate_word_id_;
}
void AssociateInferenceWordReq::set_associate_word_id(::google::protobuf::uint32 value) {
  
  associate_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordReq.associate_word_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssociateInferenceWordRsp::kRetcodeFieldNumber;
const int AssociateInferenceWordRsp::kBaseWordIdFieldNumber;
const int AssociateInferenceWordRsp::kAssociateWordIdFieldNumber;
const int AssociateInferenceWordRsp::kPageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssociateInferenceWordRsp::AssociateInferenceWordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AssociateInferenceWordRsp)
}
AssociateInferenceWordRsp::AssociateInferenceWordRsp(const AssociateInferenceWordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&base_word_id_, &from.base_word_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&associate_word_id_) -
    reinterpret_cast<char*>(&base_word_id_)) + sizeof(associate_word_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AssociateInferenceWordRsp)
}

void AssociateInferenceWordRsp::SharedCtor() {
  ::memset(&base_word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&associate_word_id_) -
      reinterpret_cast<char*>(&base_word_id_)) + sizeof(associate_word_id_));
  _cached_size_ = 0;
}

AssociateInferenceWordRsp::~AssociateInferenceWordRsp() {
  // @@protoc_insertion_point(destructor:proto.AssociateInferenceWordRsp)
  SharedDtor();
}

void AssociateInferenceWordRsp::SharedDtor() {
}

void AssociateInferenceWordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssociateInferenceWordRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssociateInferenceWordRsp& AssociateInferenceWordRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

AssociateInferenceWordRsp* AssociateInferenceWordRsp::New(::google::protobuf::Arena* arena) const {
  AssociateInferenceWordRsp* n = new AssociateInferenceWordRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssociateInferenceWordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AssociateInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&base_word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&associate_word_id_) -
      reinterpret_cast<char*>(&base_word_id_)) + sizeof(associate_word_id_));
  _internal_metadata_.Clear();
}

bool AssociateInferenceWordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AssociateInferenceWordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 base_word_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 associate_word_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &associate_word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AssociateInferenceWordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AssociateInferenceWordRsp)
  return false;
#undef DO_
}

void AssociateInferenceWordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AssociateInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 base_word_id = 5;
  if (this->base_word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->base_word_id(), output);
  }

  // uint32 page_id = 11;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->page_id(), output);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->retcode(), output);
  }

  // uint32 associate_word_id = 14;
  if (this->associate_word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->associate_word_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AssociateInferenceWordRsp)
}

::google::protobuf::uint8* AssociateInferenceWordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AssociateInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 base_word_id = 5;
  if (this->base_word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->base_word_id(), target);
  }

  // uint32 page_id = 11;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->page_id(), target);
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->retcode(), target);
  }

  // uint32 associate_word_id = 14;
  if (this->associate_word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->associate_word_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AssociateInferenceWordRsp)
  return target;
}

size_t AssociateInferenceWordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AssociateInferenceWordRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 base_word_id = 5;
  if (this->base_word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->base_word_id());
  }

  // uint32 page_id = 11;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  // int32 retcode = 13;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 associate_word_id = 14;
  if (this->associate_word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->associate_word_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssociateInferenceWordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AssociateInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AssociateInferenceWordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssociateInferenceWordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AssociateInferenceWordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AssociateInferenceWordRsp)
    MergeFrom(*source);
  }
}

void AssociateInferenceWordRsp::MergeFrom(const AssociateInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AssociateInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base_word_id() != 0) {
    set_base_word_id(from.base_word_id());
  }
  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.associate_word_id() != 0) {
    set_associate_word_id(from.associate_word_id());
  }
}

void AssociateInferenceWordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AssociateInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssociateInferenceWordRsp::CopyFrom(const AssociateInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AssociateInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociateInferenceWordRsp::IsInitialized() const {
  return true;
}

void AssociateInferenceWordRsp::Swap(AssociateInferenceWordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssociateInferenceWordRsp::InternalSwap(AssociateInferenceWordRsp* other) {
  using std::swap;
  swap(base_word_id_, other->base_word_id_);
  swap(page_id_, other->page_id_);
  swap(retcode_, other->retcode_);
  swap(associate_word_id_, other->associate_word_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssociateInferenceWordRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssociateInferenceWordRsp

// int32 retcode = 13;
void AssociateInferenceWordRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AssociateInferenceWordRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordRsp.retcode)
  return retcode_;
}
void AssociateInferenceWordRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordRsp.retcode)
}

// uint32 base_word_id = 5;
void AssociateInferenceWordRsp::clear_base_word_id() {
  base_word_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordRsp::base_word_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordRsp.base_word_id)
  return base_word_id_;
}
void AssociateInferenceWordRsp::set_base_word_id(::google::protobuf::uint32 value) {
  
  base_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordRsp.base_word_id)
}

// uint32 associate_word_id = 14;
void AssociateInferenceWordRsp::clear_associate_word_id() {
  associate_word_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordRsp::associate_word_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordRsp.associate_word_id)
  return associate_word_id_;
}
void AssociateInferenceWordRsp::set_associate_word_id(::google::protobuf::uint32 value) {
  
  associate_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordRsp.associate_word_id)
}

// uint32 page_id = 11;
void AssociateInferenceWordRsp::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 AssociateInferenceWordRsp::page_id() const {
  // @@protoc_insertion_point(field_get:proto.AssociateInferenceWordRsp.page_id)
  return page_id_;
}
void AssociateInferenceWordRsp::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AssociateInferenceWordRsp.page_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitInferenceWordReq::kWordIdFieldNumber;
const int SubmitInferenceWordReq::kPageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitInferenceWordReq::SubmitInferenceWordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SubmitInferenceWordReq)
}
SubmitInferenceWordReq::SubmitInferenceWordReq(const SubmitInferenceWordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&word_id_, &from.word_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_id_) -
    reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SubmitInferenceWordReq)
}

void SubmitInferenceWordReq::SharedCtor() {
  ::memset(&word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_id_) -
      reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  _cached_size_ = 0;
}

SubmitInferenceWordReq::~SubmitInferenceWordReq() {
  // @@protoc_insertion_point(destructor:proto.SubmitInferenceWordReq)
  SharedDtor();
}

void SubmitInferenceWordReq::SharedDtor() {
}

void SubmitInferenceWordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitInferenceWordReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitInferenceWordReq& SubmitInferenceWordReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitInferenceWordReq* SubmitInferenceWordReq::New(::google::protobuf::Arena* arena) const {
  SubmitInferenceWordReq* n = new SubmitInferenceWordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitInferenceWordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SubmitInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_id_) -
      reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  _internal_metadata_.Clear();
}

bool SubmitInferenceWordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SubmitInferenceWordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 word_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SubmitInferenceWordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SubmitInferenceWordReq)
  return false;
#undef DO_
}

void SubmitInferenceWordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SubmitInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 word_id = 9;
  if (this->word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->word_id(), output);
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->page_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SubmitInferenceWordReq)
}

::google::protobuf::uint8* SubmitInferenceWordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SubmitInferenceWordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 word_id = 9;
  if (this->word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->word_id(), target);
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->page_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SubmitInferenceWordReq)
  return target;
}

size_t SubmitInferenceWordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SubmitInferenceWordReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 word_id = 9;
  if (this->word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->word_id());
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitInferenceWordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SubmitInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitInferenceWordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitInferenceWordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SubmitInferenceWordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SubmitInferenceWordReq)
    MergeFrom(*source);
  }
}

void SubmitInferenceWordReq::MergeFrom(const SubmitInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SubmitInferenceWordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word_id() != 0) {
    set_word_id(from.word_id());
  }
  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
}

void SubmitInferenceWordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SubmitInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitInferenceWordReq::CopyFrom(const SubmitInferenceWordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SubmitInferenceWordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitInferenceWordReq::IsInitialized() const {
  return true;
}

void SubmitInferenceWordReq::Swap(SubmitInferenceWordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitInferenceWordReq::InternalSwap(SubmitInferenceWordReq* other) {
  using std::swap;
  swap(word_id_, other->word_id_);
  swap(page_id_, other->page_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitInferenceWordReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitInferenceWordReq

// uint32 word_id = 9;
void SubmitInferenceWordReq::clear_word_id() {
  word_id_ = 0u;
}
::google::protobuf::uint32 SubmitInferenceWordReq::word_id() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordReq.word_id)
  return word_id_;
}
void SubmitInferenceWordReq::set_word_id(::google::protobuf::uint32 value) {
  
  word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordReq.word_id)
}

// uint32 page_id = 13;
void SubmitInferenceWordReq::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 SubmitInferenceWordReq::page_id() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordReq.page_id)
  return page_id_;
}
void SubmitInferenceWordReq::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordReq.page_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitInferenceWordRsp::kWordIdFieldNumber;
const int SubmitInferenceWordRsp::kPageIdFieldNumber;
const int SubmitInferenceWordRsp::kConclusionIdFieldNumber;
const int SubmitInferenceWordRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitInferenceWordRsp::SubmitInferenceWordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SubmitInferenceWordRsp)
}
SubmitInferenceWordRsp::SubmitInferenceWordRsp(const SubmitInferenceWordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&word_id_, &from.word_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_id_) -
    reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SubmitInferenceWordRsp)
}

void SubmitInferenceWordRsp::SharedCtor() {
  ::memset(&word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_id_) -
      reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  _cached_size_ = 0;
}

SubmitInferenceWordRsp::~SubmitInferenceWordRsp() {
  // @@protoc_insertion_point(destructor:proto.SubmitInferenceWordRsp)
  SharedDtor();
}

void SubmitInferenceWordRsp::SharedDtor() {
}

void SubmitInferenceWordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitInferenceWordRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitInferenceWordRsp& SubmitInferenceWordRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitInferenceWordRsp* SubmitInferenceWordRsp::New(::google::protobuf::Arena* arena) const {
  SubmitInferenceWordRsp* n = new SubmitInferenceWordRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitInferenceWordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SubmitInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_id_) -
      reinterpret_cast<char*>(&word_id_)) + sizeof(page_id_));
  _internal_metadata_.Clear();
}

bool SubmitInferenceWordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SubmitInferenceWordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 word_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 conclusion_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conclusion_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SubmitInferenceWordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SubmitInferenceWordRsp)
  return false;
#undef DO_
}

void SubmitInferenceWordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SubmitInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->word_id(), output);
  }

  // uint32 conclusion_id = 7;
  if (this->conclusion_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->conclusion_id(), output);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->page_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SubmitInferenceWordRsp)
}

::google::protobuf::uint8* SubmitInferenceWordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SubmitInferenceWordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->word_id(), target);
  }

  // uint32 conclusion_id = 7;
  if (this->conclusion_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->conclusion_id(), target);
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->page_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SubmitInferenceWordRsp)
  return target;
}

size_t SubmitInferenceWordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SubmitInferenceWordRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 word_id = 6;
  if (this->word_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->word_id());
  }

  // uint32 conclusion_id = 7;
  if (this->conclusion_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->conclusion_id());
  }

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 page_id = 13;
  if (this->page_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitInferenceWordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SubmitInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitInferenceWordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitInferenceWordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SubmitInferenceWordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SubmitInferenceWordRsp)
    MergeFrom(*source);
  }
}

void SubmitInferenceWordRsp::MergeFrom(const SubmitInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SubmitInferenceWordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.word_id() != 0) {
    set_word_id(from.word_id());
  }
  if (from.conclusion_id() != 0) {
    set_conclusion_id(from.conclusion_id());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.page_id() != 0) {
    set_page_id(from.page_id());
  }
}

void SubmitInferenceWordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SubmitInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitInferenceWordRsp::CopyFrom(const SubmitInferenceWordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SubmitInferenceWordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitInferenceWordRsp::IsInitialized() const {
  return true;
}

void SubmitInferenceWordRsp::Swap(SubmitInferenceWordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitInferenceWordRsp::InternalSwap(SubmitInferenceWordRsp* other) {
  using std::swap;
  swap(word_id_, other->word_id_);
  swap(conclusion_id_, other->conclusion_id_);
  swap(retcode_, other->retcode_);
  swap(page_id_, other->page_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitInferenceWordRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitInferenceWordRsp

// uint32 word_id = 6;
void SubmitInferenceWordRsp::clear_word_id() {
  word_id_ = 0u;
}
::google::protobuf::uint32 SubmitInferenceWordRsp::word_id() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordRsp.word_id)
  return word_id_;
}
void SubmitInferenceWordRsp::set_word_id(::google::protobuf::uint32 value) {
  
  word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordRsp.word_id)
}

// uint32 page_id = 13;
void SubmitInferenceWordRsp::clear_page_id() {
  page_id_ = 0u;
}
::google::protobuf::uint32 SubmitInferenceWordRsp::page_id() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordRsp.page_id)
  return page_id_;
}
void SubmitInferenceWordRsp::set_page_id(::google::protobuf::uint32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordRsp.page_id)
}

// uint32 conclusion_id = 7;
void SubmitInferenceWordRsp::clear_conclusion_id() {
  conclusion_id_ = 0u;
}
::google::protobuf::uint32 SubmitInferenceWordRsp::conclusion_id() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordRsp.conclusion_id)
  return conclusion_id_;
}
void SubmitInferenceWordRsp::set_conclusion_id(::google::protobuf::uint32 value) {
  
  conclusion_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordRsp.conclusion_id)
}

// int32 retcode = 8;
void SubmitInferenceWordRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SubmitInferenceWordRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SubmitInferenceWordRsp.retcode)
  return retcode_;
}
void SubmitInferenceWordRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SubmitInferenceWordRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestRenameAvatarReq::kRenameIdFieldNumber;
const int QuestRenameAvatarReq::kIsCheckFieldNumber;
const int QuestRenameAvatarReq::kAvatarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestRenameAvatarReq::QuestRenameAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestRenameAvatarReq)
}
QuestRenameAvatarReq::QuestRenameAvatarReq(const QuestRenameAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_name().size() > 0) {
    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  ::memcpy(&is_check_, &from.is_check_,
    static_cast<size_t>(reinterpret_cast<char*>(&rename_id_) -
    reinterpret_cast<char*>(&is_check_)) + sizeof(rename_id_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestRenameAvatarReq)
}

void QuestRenameAvatarReq::SharedCtor() {
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_check_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rename_id_) -
      reinterpret_cast<char*>(&is_check_)) + sizeof(rename_id_));
  _cached_size_ = 0;
}

QuestRenameAvatarReq::~QuestRenameAvatarReq() {
  // @@protoc_insertion_point(destructor:proto.QuestRenameAvatarReq)
  SharedDtor();
}

void QuestRenameAvatarReq::SharedDtor() {
  avatar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuestRenameAvatarReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestRenameAvatarReq::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestRenameAvatarReq& QuestRenameAvatarReq::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestRenameAvatarReq* QuestRenameAvatarReq::New(::google::protobuf::Arena* arena) const {
  QuestRenameAvatarReq* n = new QuestRenameAvatarReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestRenameAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_check_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rename_id_) -
      reinterpret_cast<char*>(&is_check_)) + sizeof(rename_id_));
  _internal_metadata_.Clear();
}

bool QuestRenameAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestRenameAvatarReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_check = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rename_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rename_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.QuestRenameAvatarReq.avatar_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestRenameAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestRenameAvatarReq)
  return false;
#undef DO_
}

void QuestRenameAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_check = 6;
  if (this->is_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_check(), output);
  }

  // uint32 rename_id = 9;
  if (this->rename_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->rename_id(), output);
  }

  // string avatar_name = 11;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QuestRenameAvatarReq.avatar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->avatar_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestRenameAvatarReq)
}

::google::protobuf::uint8* QuestRenameAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestRenameAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_check = 6;
  if (this->is_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_check(), target);
  }

  // uint32 rename_id = 9;
  if (this->rename_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->rename_id(), target);
  }

  // string avatar_name = 11;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QuestRenameAvatarReq.avatar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->avatar_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestRenameAvatarReq)
  return target;
}

size_t QuestRenameAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestRenameAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string avatar_name = 11;
  if (this->avatar_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_name());
  }

  // bool is_check = 6;
  if (this->is_check() != 0) {
    total_size += 1 + 1;
  }

  // uint32 rename_id = 9;
  if (this->rename_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rename_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestRenameAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestRenameAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestRenameAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestRenameAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestRenameAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestRenameAvatarReq)
    MergeFrom(*source);
  }
}

void QuestRenameAvatarReq::MergeFrom(const QuestRenameAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestRenameAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_name().size() > 0) {

    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  if (from.is_check() != 0) {
    set_is_check(from.is_check());
  }
  if (from.rename_id() != 0) {
    set_rename_id(from.rename_id());
  }
}

void QuestRenameAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestRenameAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestRenameAvatarReq::CopyFrom(const QuestRenameAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestRenameAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestRenameAvatarReq::IsInitialized() const {
  return true;
}

void QuestRenameAvatarReq::Swap(QuestRenameAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestRenameAvatarReq::InternalSwap(QuestRenameAvatarReq* other) {
  using std::swap;
  avatar_name_.Swap(&other->avatar_name_);
  swap(is_check_, other->is_check_);
  swap(rename_id_, other->rename_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestRenameAvatarReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestRenameAvatarReq

// uint32 rename_id = 9;
void QuestRenameAvatarReq::clear_rename_id() {
  rename_id_ = 0u;
}
::google::protobuf::uint32 QuestRenameAvatarReq::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarReq.rename_id)
  return rename_id_;
}
void QuestRenameAvatarReq::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarReq.rename_id)
}

// bool is_check = 6;
void QuestRenameAvatarReq::clear_is_check() {
  is_check_ = false;
}
bool QuestRenameAvatarReq::is_check() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarReq.is_check)
  return is_check_;
}
void QuestRenameAvatarReq::set_is_check(bool value) {
  
  is_check_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarReq.is_check)
}

// string avatar_name = 11;
void QuestRenameAvatarReq::clear_avatar_name() {
  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuestRenameAvatarReq::avatar_name() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarReq.avatar_name)
  return avatar_name_.GetNoArena();
}
void QuestRenameAvatarReq::set_avatar_name(const ::std::string& value) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarReq.avatar_name)
}
#if LANG_CXX11
void QuestRenameAvatarReq::set_avatar_name(::std::string&& value) {
  
  avatar_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QuestRenameAvatarReq.avatar_name)
}
#endif
void QuestRenameAvatarReq::set_avatar_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QuestRenameAvatarReq.avatar_name)
}
void QuestRenameAvatarReq::set_avatar_name(const char* value, size_t size) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QuestRenameAvatarReq.avatar_name)
}
::std::string* QuestRenameAvatarReq::mutable_avatar_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.QuestRenameAvatarReq.avatar_name)
  return avatar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuestRenameAvatarReq::release_avatar_name() {
  // @@protoc_insertion_point(field_release:proto.QuestRenameAvatarReq.avatar_name)
  
  return avatar_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuestRenameAvatarReq::set_allocated_avatar_name(::std::string* avatar_name) {
  if (avatar_name != NULL) {
    
  } else {
    
  }
  avatar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_name);
  // @@protoc_insertion_point(field_set_allocated:proto.QuestRenameAvatarReq.avatar_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestRenameAvatarRsp::kAvatarNameFieldNumber;
const int QuestRenameAvatarRsp::kIsCheckFieldNumber;
const int QuestRenameAvatarRsp::kRenameIdFieldNumber;
const int QuestRenameAvatarRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestRenameAvatarRsp::QuestRenameAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QuestRenameAvatarRsp)
}
QuestRenameAvatarRsp::QuestRenameAvatarRsp(const QuestRenameAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_name().size() > 0) {
    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  ::memcpy(&rename_id_, &from.rename_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.QuestRenameAvatarRsp)
}

void QuestRenameAvatarRsp::SharedCtor() {
  avatar_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

QuestRenameAvatarRsp::~QuestRenameAvatarRsp() {
  // @@protoc_insertion_point(destructor:proto.QuestRenameAvatarRsp)
  SharedDtor();
}

void QuestRenameAvatarRsp::SharedDtor() {
  avatar_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuestRenameAvatarRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuestRenameAvatarRsp::descriptor() {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuestRenameAvatarRsp& QuestRenameAvatarRsp::default_instance() {
  protobuf_cmd_2fcmd_5fquest_2eproto::InitDefaults();
  return *internal_default_instance();
}

QuestRenameAvatarRsp* QuestRenameAvatarRsp::New(::google::protobuf::Arena* arena) const {
  QuestRenameAvatarRsp* n = new QuestRenameAvatarRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuestRenameAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QuestRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rename_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&rename_id_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool QuestRenameAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QuestRenameAvatarRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_check = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 retcode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rename_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rename_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar_name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.QuestRenameAvatarRsp.avatar_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QuestRenameAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QuestRenameAvatarRsp)
  return false;
#undef DO_
}

void QuestRenameAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QuestRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_check = 2;
  if (this->is_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_check(), output);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->retcode(), output);
  }

  // uint32 rename_id = 13;
  if (this->rename_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->rename_id(), output);
  }

  // string avatar_name = 15;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QuestRenameAvatarRsp.avatar_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->avatar_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QuestRenameAvatarRsp)
}

::google::protobuf::uint8* QuestRenameAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QuestRenameAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_check = 2;
  if (this->is_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_check(), target);
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->retcode(), target);
  }

  // uint32 rename_id = 13;
  if (this->rename_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->rename_id(), target);
  }

  // string avatar_name = 15;
  if (this->avatar_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_name().data(), static_cast<int>(this->avatar_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QuestRenameAvatarRsp.avatar_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->avatar_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QuestRenameAvatarRsp)
  return target;
}

size_t QuestRenameAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QuestRenameAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string avatar_name = 15;
  if (this->avatar_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_name());
  }

  // uint32 rename_id = 13;
  if (this->rename_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rename_id());
  }

  // bool is_check = 2;
  if (this->is_check() != 0) {
    total_size += 1 + 1;
  }

  // int32 retcode = 10;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuestRenameAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QuestRenameAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QuestRenameAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuestRenameAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QuestRenameAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QuestRenameAvatarRsp)
    MergeFrom(*source);
  }
}

void QuestRenameAvatarRsp::MergeFrom(const QuestRenameAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QuestRenameAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_name().size() > 0) {

    avatar_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_name_);
  }
  if (from.rename_id() != 0) {
    set_rename_id(from.rename_id());
  }
  if (from.is_check() != 0) {
    set_is_check(from.is_check());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void QuestRenameAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QuestRenameAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuestRenameAvatarRsp::CopyFrom(const QuestRenameAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QuestRenameAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestRenameAvatarRsp::IsInitialized() const {
  return true;
}

void QuestRenameAvatarRsp::Swap(QuestRenameAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestRenameAvatarRsp::InternalSwap(QuestRenameAvatarRsp* other) {
  using std::swap;
  avatar_name_.Swap(&other->avatar_name_);
  swap(rename_id_, other->rename_id_);
  swap(is_check_, other->is_check_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuestRenameAvatarRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fquest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fquest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuestRenameAvatarRsp

// string avatar_name = 15;
void QuestRenameAvatarRsp::clear_avatar_name() {
  avatar_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuestRenameAvatarRsp::avatar_name() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarRsp.avatar_name)
  return avatar_name_.GetNoArena();
}
void QuestRenameAvatarRsp::set_avatar_name(const ::std::string& value) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarRsp.avatar_name)
}
#if LANG_CXX11
void QuestRenameAvatarRsp::set_avatar_name(::std::string&& value) {
  
  avatar_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QuestRenameAvatarRsp.avatar_name)
}
#endif
void QuestRenameAvatarRsp::set_avatar_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QuestRenameAvatarRsp.avatar_name)
}
void QuestRenameAvatarRsp::set_avatar_name(const char* value, size_t size) {
  
  avatar_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QuestRenameAvatarRsp.avatar_name)
}
::std::string* QuestRenameAvatarRsp::mutable_avatar_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.QuestRenameAvatarRsp.avatar_name)
  return avatar_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuestRenameAvatarRsp::release_avatar_name() {
  // @@protoc_insertion_point(field_release:proto.QuestRenameAvatarRsp.avatar_name)
  
  return avatar_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuestRenameAvatarRsp::set_allocated_avatar_name(::std::string* avatar_name) {
  if (avatar_name != NULL) {
    
  } else {
    
  }
  avatar_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_name);
  // @@protoc_insertion_point(field_set_allocated:proto.QuestRenameAvatarRsp.avatar_name)
}

// bool is_check = 2;
void QuestRenameAvatarRsp::clear_is_check() {
  is_check_ = false;
}
bool QuestRenameAvatarRsp::is_check() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarRsp.is_check)
  return is_check_;
}
void QuestRenameAvatarRsp::set_is_check(bool value) {
  
  is_check_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarRsp.is_check)
}

// uint32 rename_id = 13;
void QuestRenameAvatarRsp::clear_rename_id() {
  rename_id_ = 0u;
}
::google::protobuf::uint32 QuestRenameAvatarRsp::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarRsp.rename_id)
  return rename_id_;
}
void QuestRenameAvatarRsp::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarRsp.rename_id)
}

// int32 retcode = 10;
void QuestRenameAvatarRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QuestRenameAvatarRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QuestRenameAvatarRsp.retcode)
  return retcode_;
}
void QuestRenameAvatarRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QuestRenameAvatarRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
