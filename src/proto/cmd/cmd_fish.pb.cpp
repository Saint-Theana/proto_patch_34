// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_fish.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_fish.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class EnterFishingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterFishingReq>
     _instance;
} _EnterFishingReq_default_instance_;
class EnterFishingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterFishingRsp>
     _instance;
} _EnterFishingRsp_default_instance_;
class StartFishingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartFishingReq>
     _instance;
} _StartFishingReq_default_instance_;
class StartFishingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartFishingRsp>
     _instance;
} _StartFishingRsp_default_instance_;
class FishCastRodReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishCastRodReq>
     _instance;
} _FishCastRodReq_default_instance_;
class FishCastRodRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishCastRodRsp>
     _instance;
} _FishCastRodRsp_default_instance_;
class FishChosenNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishChosenNotify>
     _instance;
} _FishChosenNotify_default_instance_;
class FishEscapeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishEscapeNotify>
     _instance;
} _FishEscapeNotify_default_instance_;
class FishBiteReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBiteReq>
     _instance;
} _FishBiteReq_default_instance_;
class FishBiteRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBiteRsp>
     _instance;
} _FishBiteRsp_default_instance_;
class FishBattleBeginReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBattleBeginReq>
     _instance;
} _FishBattleBeginReq_default_instance_;
class FishBattleBeginRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBattleBeginRsp>
     _instance;
} _FishBattleBeginRsp_default_instance_;
class FishBattleEndReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBattleEndReq>
     _instance;
} _FishBattleEndReq_default_instance_;
class FishBattleEndRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBattleEndRsp>
     _instance;
} _FishBattleEndRsp_default_instance_;
class ExitFishingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExitFishingReq>
     _instance;
} _ExitFishingReq_default_instance_;
class ExitFishingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExitFishingRsp>
     _instance;
} _ExitFishingRsp_default_instance_;
class FishAttractNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishAttractNotify>
     _instance;
} _FishAttractNotify_default_instance_;
class FishBaitGoneNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishBaitGoneNotify>
     _instance;
} _FishBaitGoneNotify_default_instance_;
class PlayerFishingDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerFishingDataNotify>
     _instance;
} _PlayerFishingDataNotify_default_instance_;
class FishPoolDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishPoolDataNotify>
     _instance;
} _FishPoolDataNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5ffish_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[23];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterFishingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterFishingReq, fish_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterFishingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterFishingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterFishingRsp, fish_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingReq, rod_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingReq, fish_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFishingRsp, fish_pool_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodReq, bait_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodReq, rod_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodReq, rod_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodReq, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishCastRodRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishChosenNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishChosenNotify, fish_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishEscapeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishEscapeNotify, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishEscapeNotify, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishEscapeNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishEscapeNotify, fish_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBiteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBiteRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBiteRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleBeginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleBeginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleBeginRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndReq, max_bonus_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndReq, battle_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndReq, is_always_bonus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, is_got_reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, reward_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, talent_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, drop_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, no_reward_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBattleEndRsp, battle_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitFishingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitFishingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitFishingRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishAttractNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishAttractNotify, fish_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishAttractNotify, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishAttractNotify, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBaitGoneNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishBaitGoneNotify, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerFishingDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerFishingDataNotify, last_fish_rod_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishPoolDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishPoolDataNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishPoolDataNotify, today_fish_num_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(EnterFishingReq)},
  { 6, -1, sizeof(EnterFishingRsp)},
  { 13, -1, sizeof(StartFishingReq)},
  { 20, -1, sizeof(StartFishingRsp)},
  { 27, -1, sizeof(FishCastRodReq)},
  { 36, -1, sizeof(FishCastRodRsp)},
  { 42, -1, sizeof(FishChosenNotify)},
  { 48, -1, sizeof(FishEscapeNotify)},
  { 57, -1, sizeof(FishBiteReq)},
  { 62, -1, sizeof(FishBiteRsp)},
  { 68, -1, sizeof(FishBattleBeginReq)},
  { 73, -1, sizeof(FishBattleBeginRsp)},
  { 79, -1, sizeof(FishBattleEndReq)},
  { 87, -1, sizeof(FishBattleEndRsp)},
  { 99, -1, sizeof(ExitFishingReq)},
  { 104, -1, sizeof(ExitFishingRsp)},
  { 110, -1, sizeof(FishAttractNotify)},
  { 118, -1, sizeof(FishBaitGoneNotify)},
  { 124, -1, sizeof(PlayerFishingDataNotify)},
  { 130, -1, sizeof(FishPoolDataNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterFishingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterFishingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StartFishingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StartFishingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishCastRodReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishCastRodRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishChosenNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishEscapeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBiteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBiteRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBattleBeginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBattleBeginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBattleEndReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBattleEndRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitFishingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitFishingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishAttractNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishBaitGoneNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerFishingDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishPoolDataNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_fish.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _EnterFishingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterFishingReq_default_instance_);_EnterFishingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterFishingRsp_default_instance_);_StartFishingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartFishingReq_default_instance_);_StartFishingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartFishingRsp_default_instance_);_FishCastRodReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishCastRodReq_default_instance_);_FishCastRodRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishCastRodRsp_default_instance_);_FishChosenNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishChosenNotify_default_instance_);_FishEscapeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishEscapeNotify_default_instance_);_FishBiteReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBiteReq_default_instance_);_FishBiteRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBiteRsp_default_instance_);_FishBattleBeginReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBattleBeginReq_default_instance_);_FishBattleBeginRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBattleBeginRsp_default_instance_);_FishBattleEndReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBattleEndReq_default_instance_);_FishBattleEndRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBattleEndRsp_default_instance_);_ExitFishingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExitFishingReq_default_instance_);_ExitFishingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExitFishingRsp_default_instance_);_FishAttractNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishAttractNotify_default_instance_);_FishBaitGoneNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishBaitGoneNotify_default_instance_);_PlayerFishingDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerFishingDataNotify_default_instance_);_FishPoolDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishPoolDataNotify_default_instance_);_FishCastRodReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _FishEscapeNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _FishAttractNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022cmd/cmd_fish.proto\022\005proto\032\014define.prot"
      "o\"\213\001\n\017EnterFishingReq\022\024\n\014fish_pool_id\030\t "
      "\001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\316-\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\207\001\n\017EnterFishing"
      "Rsp\022\017\n\007retcode\030\001 \001(\005\022\024\n\014fish_pool_id\030\007 \001"
      "(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\325-\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"\242\001\n\017StartFishingReq\022\025\n\rrod_entity_id\030\016"
      " \001(\r\022\024\n\014fish_pool_id\030\003 \001(\r\"b\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\326-\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT"
      "\020\001\032\002\020\001\"\207\001\n\017StartFishingRsp\022\017\n\007retcode\030\005 "
      "\001(\005\022\024\n\014fish_pool_id\030\007 \001(\r\"M\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\321-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\310\001\n\016FishCastRod"
      "Req\022\017\n\007bait_id\030\010 \001(\r\022\016\n\006rod_id\030\017 \001(\r\022\025\n\r"
      "rod_entity_id\030\002 \001(\r\022\032\n\003pos\030\001 \001(\0132\r.proto"
      ".Vector\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\273-\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"p\n\016FishCastR"
      "odRsp\022\017\n\007retcode\030\010 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\323-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"r\n\020FishChosenNotif"
      "y\022\017\n\007fish_id\030\016 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n"
      "\006CMD_ID\020\307-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\032\002\020\001\"\311\001\n\020FishEscapeNotify\022\'"
      "\n\006reason\030\007 \001(\0162\027.proto.FishEscapeReason\022"
      "\032\n\003pos\030\t \001(\0132\r.proto.Vector\022\013\n\003uid\030\017 \001(\r"
      "\022\024\n\014fish_id_list\030\005 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\313-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"q\n\013FishBiteReq\"b\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\270-\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_AL"
      "LOW_CLIENT\020\001\032\002\020\001\"m\n\013FishBiteRsp\022\017\n\007retco"
      "de\030\016 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\301-"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"x\n\022FishBattleBeginReq\"b\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\252-\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLI"
      "ENT\020\001\032\002\020\001\"t\n\022FishBattleBeginRsp\022\017\n\007retco"
      "de\030\006 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\320-"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\327\001\n\020FishBattleEndReq\022\026\n\016max_bonu"
      "s_time\030\n \001(\r\022.\n\rbattle_result\030\013 \001(\0162\027.pr"
      "oto.FishBattleResult\022\027\n\017is_always_bonus\030"
      "\005 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\315-\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\221\004\n\020FishBattle"
      "EndRsp\022\025\n\ris_got_reward\030\010 \001(\010\022*\n\020reward_"
      "item_list\030\003 \003(\0132\020.proto.ItemParam\022*\n\020tal"
      "ent_item_list\030\017 \003(\0132\020.proto.ItemParam\022(\n"
      "\016drop_item_list\030\014 \003(\0132\020.proto.ItemParam\022"
      "\017\n\007retcode\030\002 \001(\005\022D\n\020no_reward_reason\030\005 \001"
      "(\0162*.proto.FishBattleEndRsp.FishNoReward"
      "Reason\022.\n\rbattle_result\030\n \001(\0162\027.proto.Fi"
      "shBattleResult\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\266-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\032\002\020\001\"\215\001\n\022FishNoRewardReason\022\027\n\023"
      "FISH_NO_REWARD_NONE\020\000\022!\n\035FISH_NO_REWARD_"
      "ACTIVITY_LIMIT\020\001\022\034\n\030FISH_NO_REWARD_BAG_L"
      "IMIT\020\002\022\035\n\031FISH_NO_REWARD_POOL_LIMIT\020\003\"t\n"
      "\016ExitFishingReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\322-\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"p\n\016E"
      "xitFishingRsp\022\017\n\007retcode\030\014 \001(\005\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\257-\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\241\001\n\021FishAt"
      "tractNotify\022\024\n\014fish_id_list\030\005 \003(\r\022\032\n\003pos"
      "\030\003 \001(\0132\r.proto.Vector\022\013\n\003uid\030\n \001(\r\"M\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\267-\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"p\n\022Fis"
      "hBaitGoneNotify\022\013\n\003uid\030\010 \001(\r\"M\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\253-\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\202\001\n\027PlayerFi"
      "shingDataNotify\022\030\n\020last_fish_rod_id\030\004 \001("
      "\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\262-\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\216\001\n\022FishPoolDataNotify\022\021\n\tentity_id\030\005 \001"
      "(\r\022\026\n\016today_fish_num\030\n \001(\r\"M\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\256-\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001*Y\n\020FishEscapeR"
      "eason\022\024\n\020FISN_ESCAPE_NONE\020\000\022\027\n\023FISH_ESCA"
      "PE_SHOCKED\020\001\022\026\n\022FISH_ESCAPE_UNHOOK\020\002*\305\001\n"
      "\020FishBattleResult\022\033\n\027FISH_BATTLE_RESULT_"
      "NONE\020\000\022\033\n\027FISH_BATTLE_RESULT_SUCC\020\001\022\033\n\027F"
      "ISH_BATTLE_RESULT_FAIL\020\002\022\036\n\032FISH_BATTLE_"
      "RESULT_TIMEOUT\020\003\022\035\n\031FISH_BATTLE_RESULT_C"
      "ANCEL\020\004\022\033\n\027FISH_BATTLE_RESULT_EXIT\020\005B\nZ\010"
      "./;protob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3576);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_fish.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5ffish_2eproto

const ::google::protobuf::EnumDescriptor* EnterFishingReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[0];
}
bool EnterFishingReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5838:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterFishingReq_CmdId EnterFishingReq::NONE;
const EnterFishingReq_CmdId EnterFishingReq::CMD_ID;
const EnterFishingReq_CmdId EnterFishingReq::ENET_CHANNEL_ID;
const EnterFishingReq_CmdId EnterFishingReq::ENET_IS_RELIABLE;
const EnterFishingReq_CmdId EnterFishingReq::IS_ALLOW_CLIENT;
const EnterFishingReq_CmdId EnterFishingReq::CmdId_MIN;
const EnterFishingReq_CmdId EnterFishingReq::CmdId_MAX;
const int EnterFishingReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterFishingRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[1];
}
bool EnterFishingRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5845:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterFishingRsp_CmdId EnterFishingRsp::NONE;
const EnterFishingRsp_CmdId EnterFishingRsp::CMD_ID;
const EnterFishingRsp_CmdId EnterFishingRsp::ENET_CHANNEL_ID;
const EnterFishingRsp_CmdId EnterFishingRsp::ENET_IS_RELIABLE;
const EnterFishingRsp_CmdId EnterFishingRsp::CmdId_MIN;
const EnterFishingRsp_CmdId EnterFishingRsp::CmdId_MAX;
const int EnterFishingRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StartFishingReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[2];
}
bool StartFishingReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5846:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StartFishingReq_CmdId StartFishingReq::NONE;
const StartFishingReq_CmdId StartFishingReq::CMD_ID;
const StartFishingReq_CmdId StartFishingReq::ENET_CHANNEL_ID;
const StartFishingReq_CmdId StartFishingReq::ENET_IS_RELIABLE;
const StartFishingReq_CmdId StartFishingReq::IS_ALLOW_CLIENT;
const StartFishingReq_CmdId StartFishingReq::CmdId_MIN;
const StartFishingReq_CmdId StartFishingReq::CmdId_MAX;
const int StartFishingReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StartFishingRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[3];
}
bool StartFishingRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5841:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StartFishingRsp_CmdId StartFishingRsp::NONE;
const StartFishingRsp_CmdId StartFishingRsp::CMD_ID;
const StartFishingRsp_CmdId StartFishingRsp::ENET_CHANNEL_ID;
const StartFishingRsp_CmdId StartFishingRsp::ENET_IS_RELIABLE;
const StartFishingRsp_CmdId StartFishingRsp::CmdId_MIN;
const StartFishingRsp_CmdId StartFishingRsp::CmdId_MAX;
const int StartFishingRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishCastRodReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[4];
}
bool FishCastRodReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5819:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishCastRodReq_CmdId FishCastRodReq::NONE;
const FishCastRodReq_CmdId FishCastRodReq::CMD_ID;
const FishCastRodReq_CmdId FishCastRodReq::ENET_CHANNEL_ID;
const FishCastRodReq_CmdId FishCastRodReq::ENET_IS_RELIABLE;
const FishCastRodReq_CmdId FishCastRodReq::IS_ALLOW_CLIENT;
const FishCastRodReq_CmdId FishCastRodReq::CmdId_MIN;
const FishCastRodReq_CmdId FishCastRodReq::CmdId_MAX;
const int FishCastRodReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishCastRodRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[5];
}
bool FishCastRodRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5843:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishCastRodRsp_CmdId FishCastRodRsp::NONE;
const FishCastRodRsp_CmdId FishCastRodRsp::CMD_ID;
const FishCastRodRsp_CmdId FishCastRodRsp::ENET_CHANNEL_ID;
const FishCastRodRsp_CmdId FishCastRodRsp::ENET_IS_RELIABLE;
const FishCastRodRsp_CmdId FishCastRodRsp::CmdId_MIN;
const FishCastRodRsp_CmdId FishCastRodRsp::CmdId_MAX;
const int FishCastRodRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishChosenNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[6];
}
bool FishChosenNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5831:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishChosenNotify_CmdId FishChosenNotify::NONE;
const FishChosenNotify_CmdId FishChosenNotify::CMD_ID;
const FishChosenNotify_CmdId FishChosenNotify::ENET_CHANNEL_ID;
const FishChosenNotify_CmdId FishChosenNotify::ENET_IS_RELIABLE;
const FishChosenNotify_CmdId FishChosenNotify::CmdId_MIN;
const FishChosenNotify_CmdId FishChosenNotify::CmdId_MAX;
const int FishChosenNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishEscapeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[7];
}
bool FishEscapeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5835:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishEscapeNotify_CmdId FishEscapeNotify::NONE;
const FishEscapeNotify_CmdId FishEscapeNotify::CMD_ID;
const FishEscapeNotify_CmdId FishEscapeNotify::ENET_CHANNEL_ID;
const FishEscapeNotify_CmdId FishEscapeNotify::ENET_IS_RELIABLE;
const FishEscapeNotify_CmdId FishEscapeNotify::CmdId_MIN;
const FishEscapeNotify_CmdId FishEscapeNotify::CmdId_MAX;
const int FishEscapeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBiteReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[8];
}
bool FishBiteReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5816:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBiteReq_CmdId FishBiteReq::NONE;
const FishBiteReq_CmdId FishBiteReq::CMD_ID;
const FishBiteReq_CmdId FishBiteReq::ENET_CHANNEL_ID;
const FishBiteReq_CmdId FishBiteReq::ENET_IS_RELIABLE;
const FishBiteReq_CmdId FishBiteReq::IS_ALLOW_CLIENT;
const FishBiteReq_CmdId FishBiteReq::CmdId_MIN;
const FishBiteReq_CmdId FishBiteReq::CmdId_MAX;
const int FishBiteReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBiteRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[9];
}
bool FishBiteRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5825:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBiteRsp_CmdId FishBiteRsp::NONE;
const FishBiteRsp_CmdId FishBiteRsp::CMD_ID;
const FishBiteRsp_CmdId FishBiteRsp::ENET_CHANNEL_ID;
const FishBiteRsp_CmdId FishBiteRsp::ENET_IS_RELIABLE;
const FishBiteRsp_CmdId FishBiteRsp::CmdId_MIN;
const FishBiteRsp_CmdId FishBiteRsp::CmdId_MAX;
const int FishBiteRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBattleBeginReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[10];
}
bool FishBattleBeginReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5802:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBattleBeginReq_CmdId FishBattleBeginReq::NONE;
const FishBattleBeginReq_CmdId FishBattleBeginReq::CMD_ID;
const FishBattleBeginReq_CmdId FishBattleBeginReq::ENET_CHANNEL_ID;
const FishBattleBeginReq_CmdId FishBattleBeginReq::ENET_IS_RELIABLE;
const FishBattleBeginReq_CmdId FishBattleBeginReq::IS_ALLOW_CLIENT;
const FishBattleBeginReq_CmdId FishBattleBeginReq::CmdId_MIN;
const FishBattleBeginReq_CmdId FishBattleBeginReq::CmdId_MAX;
const int FishBattleBeginReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBattleBeginRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[11];
}
bool FishBattleBeginRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5840:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::NONE;
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::CMD_ID;
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::ENET_CHANNEL_ID;
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::ENET_IS_RELIABLE;
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::CmdId_MIN;
const FishBattleBeginRsp_CmdId FishBattleBeginRsp::CmdId_MAX;
const int FishBattleBeginRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBattleEndReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[12];
}
bool FishBattleEndReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5837:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBattleEndReq_CmdId FishBattleEndReq::NONE;
const FishBattleEndReq_CmdId FishBattleEndReq::CMD_ID;
const FishBattleEndReq_CmdId FishBattleEndReq::ENET_CHANNEL_ID;
const FishBattleEndReq_CmdId FishBattleEndReq::ENET_IS_RELIABLE;
const FishBattleEndReq_CmdId FishBattleEndReq::IS_ALLOW_CLIENT;
const FishBattleEndReq_CmdId FishBattleEndReq::CmdId_MIN;
const FishBattleEndReq_CmdId FishBattleEndReq::CmdId_MAX;
const int FishBattleEndReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBattleEndRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[13];
}
bool FishBattleEndRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5814:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBattleEndRsp_CmdId FishBattleEndRsp::NONE;
const FishBattleEndRsp_CmdId FishBattleEndRsp::CMD_ID;
const FishBattleEndRsp_CmdId FishBattleEndRsp::ENET_CHANNEL_ID;
const FishBattleEndRsp_CmdId FishBattleEndRsp::ENET_IS_RELIABLE;
const FishBattleEndRsp_CmdId FishBattleEndRsp::CmdId_MIN;
const FishBattleEndRsp_CmdId FishBattleEndRsp::CmdId_MAX;
const int FishBattleEndRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBattleEndRsp_FishNoRewardReason_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[14];
}
bool FishBattleEndRsp_FishNoRewardReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FISH_NO_REWARD_NONE;
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FISH_NO_REWARD_ACTIVITY_LIMIT;
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FISH_NO_REWARD_BAG_LIMIT;
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FISH_NO_REWARD_POOL_LIMIT;
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FishNoRewardReason_MIN;
const FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::FishNoRewardReason_MAX;
const int FishBattleEndRsp::FishNoRewardReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExitFishingReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[15];
}
bool ExitFishingReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5842:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExitFishingReq_CmdId ExitFishingReq::NONE;
const ExitFishingReq_CmdId ExitFishingReq::CMD_ID;
const ExitFishingReq_CmdId ExitFishingReq::ENET_CHANNEL_ID;
const ExitFishingReq_CmdId ExitFishingReq::ENET_IS_RELIABLE;
const ExitFishingReq_CmdId ExitFishingReq::IS_ALLOW_CLIENT;
const ExitFishingReq_CmdId ExitFishingReq::CmdId_MIN;
const ExitFishingReq_CmdId ExitFishingReq::CmdId_MAX;
const int ExitFishingReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExitFishingRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[16];
}
bool ExitFishingRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5807:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExitFishingRsp_CmdId ExitFishingRsp::NONE;
const ExitFishingRsp_CmdId ExitFishingRsp::CMD_ID;
const ExitFishingRsp_CmdId ExitFishingRsp::ENET_CHANNEL_ID;
const ExitFishingRsp_CmdId ExitFishingRsp::ENET_IS_RELIABLE;
const ExitFishingRsp_CmdId ExitFishingRsp::CmdId_MIN;
const ExitFishingRsp_CmdId ExitFishingRsp::CmdId_MAX;
const int ExitFishingRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishAttractNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[17];
}
bool FishAttractNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5815:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishAttractNotify_CmdId FishAttractNotify::NONE;
const FishAttractNotify_CmdId FishAttractNotify::CMD_ID;
const FishAttractNotify_CmdId FishAttractNotify::ENET_CHANNEL_ID;
const FishAttractNotify_CmdId FishAttractNotify::ENET_IS_RELIABLE;
const FishAttractNotify_CmdId FishAttractNotify::CmdId_MIN;
const FishAttractNotify_CmdId FishAttractNotify::CmdId_MAX;
const int FishAttractNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishBaitGoneNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[18];
}
bool FishBaitGoneNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5803:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::NONE;
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::CMD_ID;
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::ENET_CHANNEL_ID;
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::ENET_IS_RELIABLE;
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::CmdId_MIN;
const FishBaitGoneNotify_CmdId FishBaitGoneNotify::CmdId_MAX;
const int FishBaitGoneNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerFishingDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[19];
}
bool PlayerFishingDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5810:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::NONE;
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::CMD_ID;
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::ENET_CHANNEL_ID;
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::ENET_IS_RELIABLE;
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::CmdId_MIN;
const PlayerFishingDataNotify_CmdId PlayerFishingDataNotify::CmdId_MAX;
const int PlayerFishingDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishPoolDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[20];
}
bool FishPoolDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5806:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FishPoolDataNotify_CmdId FishPoolDataNotify::NONE;
const FishPoolDataNotify_CmdId FishPoolDataNotify::CMD_ID;
const FishPoolDataNotify_CmdId FishPoolDataNotify::ENET_CHANNEL_ID;
const FishPoolDataNotify_CmdId FishPoolDataNotify::ENET_IS_RELIABLE;
const FishPoolDataNotify_CmdId FishPoolDataNotify::CmdId_MIN;
const FishPoolDataNotify_CmdId FishPoolDataNotify::CmdId_MAX;
const int FishPoolDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FishEscapeReason_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[21];
}
bool FishEscapeReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FishBattleResult_descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_enum_descriptors[22];
}
bool FishBattleResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterFishingReq::kFishPoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterFishingReq::EnterFishingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterFishingReq)
}
EnterFishingReq::EnterFishingReq(const EnterFishingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fish_pool_id_ = from.fish_pool_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterFishingReq)
}

void EnterFishingReq::SharedCtor() {
  fish_pool_id_ = 0u;
  _cached_size_ = 0;
}

EnterFishingReq::~EnterFishingReq() {
  // @@protoc_insertion_point(destructor:proto.EnterFishingReq)
  SharedDtor();
}

void EnterFishingReq::SharedDtor() {
}

void EnterFishingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterFishingReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterFishingReq& EnterFishingReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterFishingReq* EnterFishingReq::New(::google::protobuf::Arena* arena) const {
  EnterFishingReq* n = new EnterFishingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterFishingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_pool_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EnterFishingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterFishingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 fish_pool_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fish_pool_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterFishingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterFishingReq)
  return false;
#undef DO_
}

void EnterFishingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_pool_id = 9;
  if (this->fish_pool_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->fish_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterFishingReq)
}

::google::protobuf::uint8* EnterFishingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_pool_id = 9;
  if (this->fish_pool_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->fish_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterFishingReq)
  return target;
}

size_t EnterFishingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterFishingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 fish_pool_id = 9;
  if (this->fish_pool_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fish_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterFishingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterFishingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterFishingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterFishingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterFishingReq)
    MergeFrom(*source);
  }
}

void EnterFishingReq::MergeFrom(const EnterFishingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fish_pool_id() != 0) {
    set_fish_pool_id(from.fish_pool_id());
  }
}

void EnterFishingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterFishingReq::CopyFrom(const EnterFishingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterFishingReq::IsInitialized() const {
  return true;
}

void EnterFishingReq::Swap(EnterFishingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterFishingReq::InternalSwap(EnterFishingReq* other) {
  using std::swap;
  swap(fish_pool_id_, other->fish_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterFishingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterFishingReq

// uint32 fish_pool_id = 9;
void EnterFishingReq::clear_fish_pool_id() {
  fish_pool_id_ = 0u;
}
::google::protobuf::uint32 EnterFishingReq::fish_pool_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterFishingReq.fish_pool_id)
  return fish_pool_id_;
}
void EnterFishingReq::set_fish_pool_id(::google::protobuf::uint32 value) {
  
  fish_pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterFishingReq.fish_pool_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterFishingRsp::kRetcodeFieldNumber;
const int EnterFishingRsp::kFishPoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterFishingRsp::EnterFishingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterFishingRsp)
}
EnterFishingRsp::EnterFishingRsp(const EnterFishingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&fish_pool_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterFishingRsp)
}

void EnterFishingRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fish_pool_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  _cached_size_ = 0;
}

EnterFishingRsp::~EnterFishingRsp() {
  // @@protoc_insertion_point(destructor:proto.EnterFishingRsp)
  SharedDtor();
}

void EnterFishingRsp::SharedDtor() {
}

void EnterFishingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterFishingRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterFishingRsp& EnterFishingRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterFishingRsp* EnterFishingRsp::New(::google::protobuf::Arena* arena) const {
  EnterFishingRsp* n = new EnterFishingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterFishingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fish_pool_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  _internal_metadata_.Clear();
}

bool EnterFishingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterFishingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fish_pool_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fish_pool_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterFishingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterFishingRsp)
  return false;
#undef DO_
}

void EnterFishingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fish_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterFishingRsp)
}

::google::protobuf::uint8* EnterFishingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fish_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterFishingRsp)
  return target;
}

size_t EnterFishingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterFishingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fish_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterFishingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterFishingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterFishingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterFishingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterFishingRsp)
    MergeFrom(*source);
  }
}

void EnterFishingRsp::MergeFrom(const EnterFishingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.fish_pool_id() != 0) {
    set_fish_pool_id(from.fish_pool_id());
  }
}

void EnterFishingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterFishingRsp::CopyFrom(const EnterFishingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterFishingRsp::IsInitialized() const {
  return true;
}

void EnterFishingRsp::Swap(EnterFishingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterFishingRsp::InternalSwap(EnterFishingRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(fish_pool_id_, other->fish_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterFishingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterFishingRsp

// int32 retcode = 1;
void EnterFishingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterFishingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterFishingRsp.retcode)
  return retcode_;
}
void EnterFishingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterFishingRsp.retcode)
}

// uint32 fish_pool_id = 7;
void EnterFishingRsp::clear_fish_pool_id() {
  fish_pool_id_ = 0u;
}
::google::protobuf::uint32 EnterFishingRsp::fish_pool_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterFishingRsp.fish_pool_id)
  return fish_pool_id_;
}
void EnterFishingRsp::set_fish_pool_id(::google::protobuf::uint32 value) {
  
  fish_pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterFishingRsp.fish_pool_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartFishingReq::kRodEntityIdFieldNumber;
const int StartFishingReq::kFishPoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartFishingReq::StartFishingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StartFishingReq)
}
StartFishingReq::StartFishingReq(const StartFishingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fish_pool_id_, &from.fish_pool_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rod_entity_id_) -
    reinterpret_cast<char*>(&fish_pool_id_)) + sizeof(rod_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.StartFishingReq)
}

void StartFishingReq::SharedCtor() {
  ::memset(&fish_pool_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rod_entity_id_) -
      reinterpret_cast<char*>(&fish_pool_id_)) + sizeof(rod_entity_id_));
  _cached_size_ = 0;
}

StartFishingReq::~StartFishingReq() {
  // @@protoc_insertion_point(destructor:proto.StartFishingReq)
  SharedDtor();
}

void StartFishingReq::SharedDtor() {
}

void StartFishingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartFishingReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartFishingReq& StartFishingReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartFishingReq* StartFishingReq::New(::google::protobuf::Arena* arena) const {
  StartFishingReq* n = new StartFishingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartFishingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StartFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fish_pool_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rod_entity_id_) -
      reinterpret_cast<char*>(&fish_pool_id_)) + sizeof(rod_entity_id_));
  _internal_metadata_.Clear();
}

bool StartFishingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StartFishingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 fish_pool_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fish_pool_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rod_entity_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rod_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StartFishingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StartFishingReq)
  return false;
#undef DO_
}

void StartFishingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StartFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_pool_id = 3;
  if (this->fish_pool_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fish_pool_id(), output);
  }

  // uint32 rod_entity_id = 14;
  if (this->rod_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rod_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StartFishingReq)
}

::google::protobuf::uint8* StartFishingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StartFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_pool_id = 3;
  if (this->fish_pool_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fish_pool_id(), target);
  }

  // uint32 rod_entity_id = 14;
  if (this->rod_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rod_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StartFishingReq)
  return target;
}

size_t StartFishingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StartFishingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 fish_pool_id = 3;
  if (this->fish_pool_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fish_pool_id());
  }

  // uint32 rod_entity_id = 14;
  if (this->rod_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rod_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartFishingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StartFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StartFishingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartFishingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StartFishingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StartFishingReq)
    MergeFrom(*source);
  }
}

void StartFishingReq::MergeFrom(const StartFishingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StartFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fish_pool_id() != 0) {
    set_fish_pool_id(from.fish_pool_id());
  }
  if (from.rod_entity_id() != 0) {
    set_rod_entity_id(from.rod_entity_id());
  }
}

void StartFishingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StartFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartFishingReq::CopyFrom(const StartFishingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StartFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartFishingReq::IsInitialized() const {
  return true;
}

void StartFishingReq::Swap(StartFishingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartFishingReq::InternalSwap(StartFishingReq* other) {
  using std::swap;
  swap(fish_pool_id_, other->fish_pool_id_);
  swap(rod_entity_id_, other->rod_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartFishingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartFishingReq

// uint32 rod_entity_id = 14;
void StartFishingReq::clear_rod_entity_id() {
  rod_entity_id_ = 0u;
}
::google::protobuf::uint32 StartFishingReq::rod_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.StartFishingReq.rod_entity_id)
  return rod_entity_id_;
}
void StartFishingReq::set_rod_entity_id(::google::protobuf::uint32 value) {
  
  rod_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.StartFishingReq.rod_entity_id)
}

// uint32 fish_pool_id = 3;
void StartFishingReq::clear_fish_pool_id() {
  fish_pool_id_ = 0u;
}
::google::protobuf::uint32 StartFishingReq::fish_pool_id() const {
  // @@protoc_insertion_point(field_get:proto.StartFishingReq.fish_pool_id)
  return fish_pool_id_;
}
void StartFishingReq::set_fish_pool_id(::google::protobuf::uint32 value) {
  
  fish_pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.StartFishingReq.fish_pool_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartFishingRsp::kRetcodeFieldNumber;
const int StartFishingRsp::kFishPoolIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartFishingRsp::StartFishingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StartFishingRsp)
}
StartFishingRsp::StartFishingRsp(const StartFishingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&fish_pool_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  // @@protoc_insertion_point(copy_constructor:proto.StartFishingRsp)
}

void StartFishingRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fish_pool_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  _cached_size_ = 0;
}

StartFishingRsp::~StartFishingRsp() {
  // @@protoc_insertion_point(destructor:proto.StartFishingRsp)
  SharedDtor();
}

void StartFishingRsp::SharedDtor() {
}

void StartFishingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartFishingRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartFishingRsp& StartFishingRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartFishingRsp* StartFishingRsp::New(::google::protobuf::Arena* arena) const {
  StartFishingRsp* n = new StartFishingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartFishingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StartFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fish_pool_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(fish_pool_id_));
  _internal_metadata_.Clear();
}

bool StartFishingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StartFishingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fish_pool_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fish_pool_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StartFishingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StartFishingRsp)
  return false;
#undef DO_
}

void StartFishingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StartFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fish_pool_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StartFishingRsp)
}

::google::protobuf::uint8* StartFishingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StartFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 5;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fish_pool_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StartFishingRsp)
  return target;
}

size_t StartFishingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StartFishingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 5;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 fish_pool_id = 7;
  if (this->fish_pool_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fish_pool_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartFishingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StartFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const StartFishingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartFishingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StartFishingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StartFishingRsp)
    MergeFrom(*source);
  }
}

void StartFishingRsp::MergeFrom(const StartFishingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StartFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.fish_pool_id() != 0) {
    set_fish_pool_id(from.fish_pool_id());
  }
}

void StartFishingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StartFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartFishingRsp::CopyFrom(const StartFishingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StartFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartFishingRsp::IsInitialized() const {
  return true;
}

void StartFishingRsp::Swap(StartFishingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartFishingRsp::InternalSwap(StartFishingRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(fish_pool_id_, other->fish_pool_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartFishingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartFishingRsp

// int32 retcode = 5;
void StartFishingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 StartFishingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.StartFishingRsp.retcode)
  return retcode_;
}
void StartFishingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.StartFishingRsp.retcode)
}

// uint32 fish_pool_id = 7;
void StartFishingRsp::clear_fish_pool_id() {
  fish_pool_id_ = 0u;
}
::google::protobuf::uint32 StartFishingRsp::fish_pool_id() const {
  // @@protoc_insertion_point(field_get:proto.StartFishingRsp.fish_pool_id)
  return fish_pool_id_;
}
void StartFishingRsp::set_fish_pool_id(::google::protobuf::uint32 value) {
  
  fish_pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.StartFishingRsp.fish_pool_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishCastRodReq::kBaitIdFieldNumber;
const int FishCastRodReq::kRodIdFieldNumber;
const int FishCastRodReq::kRodEntityIdFieldNumber;
const int FishCastRodReq::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishCastRodReq::FishCastRodReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishCastRodReq)
}
FishCastRodReq::FishCastRodReq(const FishCastRodReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&rod_entity_id_, &from.rod_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rod_id_) -
    reinterpret_cast<char*>(&rod_entity_id_)) + sizeof(rod_id_));
  // @@protoc_insertion_point(copy_constructor:proto.FishCastRodReq)
}

void FishCastRodReq::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rod_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rod_id_));
  _cached_size_ = 0;
}

FishCastRodReq::~FishCastRodReq() {
  // @@protoc_insertion_point(destructor:proto.FishCastRodReq)
  SharedDtor();
}

void FishCastRodReq::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void FishCastRodReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishCastRodReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishCastRodReq& FishCastRodReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishCastRodReq* FishCastRodReq::New(::google::protobuf::Arena* arena) const {
  FishCastRodReq* n = new FishCastRodReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishCastRodReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishCastRodReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&rod_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rod_id_) -
      reinterpret_cast<char*>(&rod_entity_id_)) + sizeof(rod_id_));
  _internal_metadata_.Clear();
}

bool FishCastRodReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishCastRodReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rod_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rod_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bait_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bait_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rod_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rod_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishCastRodReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishCastRodReq)
  return false;
#undef DO_
}

void FishCastRodReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishCastRodReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // uint32 rod_entity_id = 2;
  if (this->rod_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rod_entity_id(), output);
  }

  // uint32 bait_id = 8;
  if (this->bait_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bait_id(), output);
  }

  // uint32 rod_id = 15;
  if (this->rod_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->rod_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishCastRodReq)
}

::google::protobuf::uint8* FishCastRodReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishCastRodReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  // uint32 rod_entity_id = 2;
  if (this->rod_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rod_entity_id(), target);
  }

  // uint32 bait_id = 8;
  if (this->bait_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bait_id(), target);
  }

  // uint32 rod_id = 15;
  if (this->rod_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->rod_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishCastRodReq)
  return target;
}

size_t FishCastRodReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishCastRodReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 rod_entity_id = 2;
  if (this->rod_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rod_entity_id());
  }

  // uint32 bait_id = 8;
  if (this->bait_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bait_id());
  }

  // uint32 rod_id = 15;
  if (this->rod_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rod_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishCastRodReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishCastRodReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FishCastRodReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishCastRodReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishCastRodReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishCastRodReq)
    MergeFrom(*source);
  }
}

void FishCastRodReq::MergeFrom(const FishCastRodReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishCastRodReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.rod_entity_id() != 0) {
    set_rod_entity_id(from.rod_entity_id());
  }
  if (from.bait_id() != 0) {
    set_bait_id(from.bait_id());
  }
  if (from.rod_id() != 0) {
    set_rod_id(from.rod_id());
  }
}

void FishCastRodReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishCastRodReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishCastRodReq::CopyFrom(const FishCastRodReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishCastRodReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishCastRodReq::IsInitialized() const {
  return true;
}

void FishCastRodReq::Swap(FishCastRodReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishCastRodReq::InternalSwap(FishCastRodReq* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rod_entity_id_, other->rod_entity_id_);
  swap(bait_id_, other->bait_id_);
  swap(rod_id_, other->rod_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishCastRodReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishCastRodReq

// uint32 bait_id = 8;
void FishCastRodReq::clear_bait_id() {
  bait_id_ = 0u;
}
::google::protobuf::uint32 FishCastRodReq::bait_id() const {
  // @@protoc_insertion_point(field_get:proto.FishCastRodReq.bait_id)
  return bait_id_;
}
void FishCastRodReq::set_bait_id(::google::protobuf::uint32 value) {
  
  bait_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishCastRodReq.bait_id)
}

// uint32 rod_id = 15;
void FishCastRodReq::clear_rod_id() {
  rod_id_ = 0u;
}
::google::protobuf::uint32 FishCastRodReq::rod_id() const {
  // @@protoc_insertion_point(field_get:proto.FishCastRodReq.rod_id)
  return rod_id_;
}
void FishCastRodReq::set_rod_id(::google::protobuf::uint32 value) {
  
  rod_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishCastRodReq.rod_id)
}

// uint32 rod_entity_id = 2;
void FishCastRodReq::clear_rod_entity_id() {
  rod_entity_id_ = 0u;
}
::google::protobuf::uint32 FishCastRodReq::rod_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.FishCastRodReq.rod_entity_id)
  return rod_entity_id_;
}
void FishCastRodReq::set_rod_entity_id(::google::protobuf::uint32 value) {
  
  rod_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishCastRodReq.rod_entity_id)
}

// .proto.Vector pos = 1;
bool FishCastRodReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void FishCastRodReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& FishCastRodReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.FishCastRodReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* FishCastRodReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.FishCastRodReq.pos)
  return pos_;
}
::proto::Vector* FishCastRodReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.FishCastRodReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FishCastRodReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FishCastRodReq.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishCastRodRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishCastRodRsp::FishCastRodRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishCastRodRsp)
}
FishCastRodRsp::FishCastRodRsp(const FishCastRodRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.FishCastRodRsp)
}

void FishCastRodRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

FishCastRodRsp::~FishCastRodRsp() {
  // @@protoc_insertion_point(destructor:proto.FishCastRodRsp)
  SharedDtor();
}

void FishCastRodRsp::SharedDtor() {
}

void FishCastRodRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishCastRodRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishCastRodRsp& FishCastRodRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishCastRodRsp* FishCastRodRsp::New(::google::protobuf::Arena* arena) const {
  FishCastRodRsp* n = new FishCastRodRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishCastRodRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishCastRodRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool FishCastRodRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishCastRodRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishCastRodRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishCastRodRsp)
  return false;
#undef DO_
}

void FishCastRodRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishCastRodRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishCastRodRsp)
}

::google::protobuf::uint8* FishCastRodRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishCastRodRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 8;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishCastRodRsp)
  return target;
}

size_t FishCastRodRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishCastRodRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 8;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishCastRodRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishCastRodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FishCastRodRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishCastRodRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishCastRodRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishCastRodRsp)
    MergeFrom(*source);
  }
}

void FishCastRodRsp::MergeFrom(const FishCastRodRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishCastRodRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void FishCastRodRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishCastRodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishCastRodRsp::CopyFrom(const FishCastRodRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishCastRodRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishCastRodRsp::IsInitialized() const {
  return true;
}

void FishCastRodRsp::Swap(FishCastRodRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishCastRodRsp::InternalSwap(FishCastRodRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishCastRodRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishCastRodRsp

// int32 retcode = 8;
void FishCastRodRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FishCastRodRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FishCastRodRsp.retcode)
  return retcode_;
}
void FishCastRodRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FishCastRodRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishChosenNotify::kFishIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishChosenNotify::FishChosenNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishChosenNotify)
}
FishChosenNotify::FishChosenNotify(const FishChosenNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fish_id_ = from.fish_id_;
  // @@protoc_insertion_point(copy_constructor:proto.FishChosenNotify)
}

void FishChosenNotify::SharedCtor() {
  fish_id_ = 0u;
  _cached_size_ = 0;
}

FishChosenNotify::~FishChosenNotify() {
  // @@protoc_insertion_point(destructor:proto.FishChosenNotify)
  SharedDtor();
}

void FishChosenNotify::SharedDtor() {
}

void FishChosenNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishChosenNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishChosenNotify& FishChosenNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishChosenNotify* FishChosenNotify::New(::google::protobuf::Arena* arena) const {
  FishChosenNotify* n = new FishChosenNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishChosenNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishChosenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FishChosenNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishChosenNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 fish_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fish_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishChosenNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishChosenNotify)
  return false;
#undef DO_
}

void FishChosenNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishChosenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_id = 14;
  if (this->fish_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->fish_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishChosenNotify)
}

::google::protobuf::uint8* FishChosenNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishChosenNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 fish_id = 14;
  if (this->fish_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->fish_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishChosenNotify)
  return target;
}

size_t FishChosenNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishChosenNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 fish_id = 14;
  if (this->fish_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fish_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishChosenNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishChosenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FishChosenNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishChosenNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishChosenNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishChosenNotify)
    MergeFrom(*source);
  }
}

void FishChosenNotify::MergeFrom(const FishChosenNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishChosenNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fish_id() != 0) {
    set_fish_id(from.fish_id());
  }
}

void FishChosenNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishChosenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishChosenNotify::CopyFrom(const FishChosenNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishChosenNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishChosenNotify::IsInitialized() const {
  return true;
}

void FishChosenNotify::Swap(FishChosenNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishChosenNotify::InternalSwap(FishChosenNotify* other) {
  using std::swap;
  swap(fish_id_, other->fish_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishChosenNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishChosenNotify

// uint32 fish_id = 14;
void FishChosenNotify::clear_fish_id() {
  fish_id_ = 0u;
}
::google::protobuf::uint32 FishChosenNotify::fish_id() const {
  // @@protoc_insertion_point(field_get:proto.FishChosenNotify.fish_id)
  return fish_id_;
}
void FishChosenNotify::set_fish_id(::google::protobuf::uint32 value) {
  
  fish_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishChosenNotify.fish_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishEscapeNotify::kReasonFieldNumber;
const int FishEscapeNotify::kPosFieldNumber;
const int FishEscapeNotify::kUidFieldNumber;
const int FishEscapeNotify::kFishIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishEscapeNotify::FishEscapeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishEscapeNotify)
}
FishEscapeNotify::FishEscapeNotify(const FishEscapeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fish_id_list_(from.fish_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.FishEscapeNotify)
}

void FishEscapeNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(uid_));
  _cached_size_ = 0;
}

FishEscapeNotify::~FishEscapeNotify() {
  // @@protoc_insertion_point(destructor:proto.FishEscapeNotify)
  SharedDtor();
}

void FishEscapeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void FishEscapeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishEscapeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishEscapeNotify& FishEscapeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishEscapeNotify* FishEscapeNotify::New(::google::protobuf::Arena* arena) const {
  FishEscapeNotify* n = new FishEscapeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishEscapeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishEscapeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_id_list_.Clear();
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool FishEscapeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishEscapeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 fish_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fish_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_fish_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FishEscapeReason reason = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::FishEscapeReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishEscapeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishEscapeNotify)
  return false;
#undef DO_
}

void FishEscapeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishEscapeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 fish_id_list = 5;
  if (this->fish_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fish_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fish_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fish_id_list(i), output);
  }

  // .proto.FishEscapeReason reason = 7;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->reason(), output);
  }

  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->pos_, output);
  }

  // uint32 uid = 15;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishEscapeNotify)
}

::google::protobuf::uint8* FishEscapeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishEscapeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 fish_id_list = 5;
  if (this->fish_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fish_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fish_id_list_, target);
  }

  // .proto.FishEscapeReason reason = 7;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->reason(), target);
  }

  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->pos_, deterministic, target);
  }

  // uint32 uid = 15;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishEscapeNotify)
  return target;
}

size_t FishEscapeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishEscapeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 fish_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fish_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fish_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.Vector pos = 9;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.FishEscapeReason reason = 7;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  // uint32 uid = 15;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishEscapeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishEscapeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FishEscapeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishEscapeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishEscapeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishEscapeNotify)
    MergeFrom(*source);
  }
}

void FishEscapeNotify::MergeFrom(const FishEscapeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishEscapeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fish_id_list_.MergeFrom(from.fish_id_list_);
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void FishEscapeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishEscapeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishEscapeNotify::CopyFrom(const FishEscapeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishEscapeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishEscapeNotify::IsInitialized() const {
  return true;
}

void FishEscapeNotify::Swap(FishEscapeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishEscapeNotify::InternalSwap(FishEscapeNotify* other) {
  using std::swap;
  fish_id_list_.InternalSwap(&other->fish_id_list_);
  swap(pos_, other->pos_);
  swap(reason_, other->reason_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishEscapeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishEscapeNotify

// .proto.FishEscapeReason reason = 7;
void FishEscapeNotify::clear_reason() {
  reason_ = 0;
}
::proto::FishEscapeReason FishEscapeNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.FishEscapeNotify.reason)
  return static_cast< ::proto::FishEscapeReason >(reason_);
}
void FishEscapeNotify::set_reason(::proto::FishEscapeReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.FishEscapeNotify.reason)
}

// .proto.Vector pos = 9;
bool FishEscapeNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void FishEscapeNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& FishEscapeNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.FishEscapeNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* FishEscapeNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.FishEscapeNotify.pos)
  return pos_;
}
::proto::Vector* FishEscapeNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.FishEscapeNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FishEscapeNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FishEscapeNotify.pos)
}

// uint32 uid = 15;
void FishEscapeNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FishEscapeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.FishEscapeNotify.uid)
  return uid_;
}
void FishEscapeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FishEscapeNotify.uid)
}

// repeated uint32 fish_id_list = 5;
int FishEscapeNotify::fish_id_list_size() const {
  return fish_id_list_.size();
}
void FishEscapeNotify::clear_fish_id_list() {
  fish_id_list_.Clear();
}
::google::protobuf::uint32 FishEscapeNotify::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishEscapeNotify.fish_id_list)
  return fish_id_list_.Get(index);
}
void FishEscapeNotify::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FishEscapeNotify.fish_id_list)
}
void FishEscapeNotify::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FishEscapeNotify.fish_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FishEscapeNotify::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.FishEscapeNotify.fish_id_list)
  return fish_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FishEscapeNotify::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishEscapeNotify.fish_id_list)
  return &fish_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBiteReq::FishBiteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBiteReq)
}
FishBiteReq::FishBiteReq(const FishBiteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FishBiteReq)
}

void FishBiteReq::SharedCtor() {
  _cached_size_ = 0;
}

FishBiteReq::~FishBiteReq() {
  // @@protoc_insertion_point(destructor:proto.FishBiteReq)
  SharedDtor();
}

void FishBiteReq::SharedDtor() {
}

void FishBiteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBiteReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBiteReq& FishBiteReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBiteReq* FishBiteReq::New(::google::protobuf::Arena* arena) const {
  FishBiteReq* n = new FishBiteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBiteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBiteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FishBiteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBiteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBiteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBiteReq)
  return false;
#undef DO_
}

void FishBiteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBiteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBiteReq)
}

::google::protobuf::uint8* FishBiteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBiteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBiteReq)
  return target;
}

size_t FishBiteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBiteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBiteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBiteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBiteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBiteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBiteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBiteReq)
    MergeFrom(*source);
  }
}

void FishBiteReq::MergeFrom(const FishBiteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBiteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FishBiteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBiteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBiteReq::CopyFrom(const FishBiteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBiteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBiteReq::IsInitialized() const {
  return true;
}

void FishBiteReq::Swap(FishBiteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBiteReq::InternalSwap(FishBiteReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBiteReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBiteReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishBiteRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBiteRsp::FishBiteRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBiteRsp)
}
FishBiteRsp::FishBiteRsp(const FishBiteRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.FishBiteRsp)
}

void FishBiteRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

FishBiteRsp::~FishBiteRsp() {
  // @@protoc_insertion_point(destructor:proto.FishBiteRsp)
  SharedDtor();
}

void FishBiteRsp::SharedDtor() {
}

void FishBiteRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBiteRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBiteRsp& FishBiteRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBiteRsp* FishBiteRsp::New(::google::protobuf::Arena* arena) const {
  FishBiteRsp* n = new FishBiteRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBiteRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBiteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool FishBiteRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBiteRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBiteRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBiteRsp)
  return false;
#undef DO_
}

void FishBiteRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBiteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBiteRsp)
}

::google::protobuf::uint8* FishBiteRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBiteRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 14;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBiteRsp)
  return target;
}

size_t FishBiteRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBiteRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 14;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBiteRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBiteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBiteRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBiteRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBiteRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBiteRsp)
    MergeFrom(*source);
  }
}

void FishBiteRsp::MergeFrom(const FishBiteRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBiteRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void FishBiteRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBiteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBiteRsp::CopyFrom(const FishBiteRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBiteRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBiteRsp::IsInitialized() const {
  return true;
}

void FishBiteRsp::Swap(FishBiteRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBiteRsp::InternalSwap(FishBiteRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBiteRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBiteRsp

// int32 retcode = 14;
void FishBiteRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FishBiteRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FishBiteRsp.retcode)
  return retcode_;
}
void FishBiteRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBiteRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBattleBeginReq::FishBattleBeginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBattleBeginReq)
}
FishBattleBeginReq::FishBattleBeginReq(const FishBattleBeginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FishBattleBeginReq)
}

void FishBattleBeginReq::SharedCtor() {
  _cached_size_ = 0;
}

FishBattleBeginReq::~FishBattleBeginReq() {
  // @@protoc_insertion_point(destructor:proto.FishBattleBeginReq)
  SharedDtor();
}

void FishBattleBeginReq::SharedDtor() {
}

void FishBattleBeginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBattleBeginReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBattleBeginReq& FishBattleBeginReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBattleBeginReq* FishBattleBeginReq::New(::google::protobuf::Arena* arena) const {
  FishBattleBeginReq* n = new FishBattleBeginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBattleBeginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBattleBeginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FishBattleBeginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBattleBeginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBattleBeginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBattleBeginReq)
  return false;
#undef DO_
}

void FishBattleBeginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBattleBeginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBattleBeginReq)
}

::google::protobuf::uint8* FishBattleBeginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBattleBeginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBattleBeginReq)
  return target;
}

size_t FishBattleBeginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBattleBeginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBattleBeginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBattleBeginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBattleBeginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBattleBeginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBattleBeginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBattleBeginReq)
    MergeFrom(*source);
  }
}

void FishBattleBeginReq::MergeFrom(const FishBattleBeginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBattleBeginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FishBattleBeginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBattleBeginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBattleBeginReq::CopyFrom(const FishBattleBeginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBattleBeginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBattleBeginReq::IsInitialized() const {
  return true;
}

void FishBattleBeginReq::Swap(FishBattleBeginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBattleBeginReq::InternalSwap(FishBattleBeginReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBattleBeginReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBattleBeginReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishBattleBeginRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBattleBeginRsp::FishBattleBeginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBattleBeginRsp)
}
FishBattleBeginRsp::FishBattleBeginRsp(const FishBattleBeginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.FishBattleBeginRsp)
}

void FishBattleBeginRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

FishBattleBeginRsp::~FishBattleBeginRsp() {
  // @@protoc_insertion_point(destructor:proto.FishBattleBeginRsp)
  SharedDtor();
}

void FishBattleBeginRsp::SharedDtor() {
}

void FishBattleBeginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBattleBeginRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBattleBeginRsp& FishBattleBeginRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBattleBeginRsp* FishBattleBeginRsp::New(::google::protobuf::Arena* arena) const {
  FishBattleBeginRsp* n = new FishBattleBeginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBattleBeginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBattleBeginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool FishBattleBeginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBattleBeginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBattleBeginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBattleBeginRsp)
  return false;
#undef DO_
}

void FishBattleBeginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBattleBeginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBattleBeginRsp)
}

::google::protobuf::uint8* FishBattleBeginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBattleBeginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 6;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBattleBeginRsp)
  return target;
}

size_t FishBattleBeginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBattleBeginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 6;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBattleBeginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBattleBeginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBattleBeginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBattleBeginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBattleBeginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBattleBeginRsp)
    MergeFrom(*source);
  }
}

void FishBattleBeginRsp::MergeFrom(const FishBattleBeginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBattleBeginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void FishBattleBeginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBattleBeginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBattleBeginRsp::CopyFrom(const FishBattleBeginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBattleBeginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBattleBeginRsp::IsInitialized() const {
  return true;
}

void FishBattleBeginRsp::Swap(FishBattleBeginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBattleBeginRsp::InternalSwap(FishBattleBeginRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBattleBeginRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBattleBeginRsp

// int32 retcode = 6;
void FishBattleBeginRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FishBattleBeginRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleBeginRsp.retcode)
  return retcode_;
}
void FishBattleBeginRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleBeginRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishBattleEndReq::kMaxBonusTimeFieldNumber;
const int FishBattleEndReq::kBattleResultFieldNumber;
const int FishBattleEndReq::kIsAlwaysBonusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBattleEndReq::FishBattleEndReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBattleEndReq)
}
FishBattleEndReq::FishBattleEndReq(const FishBattleEndReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battle_result_, &from.battle_result_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_bonus_time_) -
    reinterpret_cast<char*>(&battle_result_)) + sizeof(max_bonus_time_));
  // @@protoc_insertion_point(copy_constructor:proto.FishBattleEndReq)
}

void FishBattleEndReq::SharedCtor() {
  ::memset(&battle_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_bonus_time_) -
      reinterpret_cast<char*>(&battle_result_)) + sizeof(max_bonus_time_));
  _cached_size_ = 0;
}

FishBattleEndReq::~FishBattleEndReq() {
  // @@protoc_insertion_point(destructor:proto.FishBattleEndReq)
  SharedDtor();
}

void FishBattleEndReq::SharedDtor() {
}

void FishBattleEndReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBattleEndReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBattleEndReq& FishBattleEndReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBattleEndReq* FishBattleEndReq::New(::google::protobuf::Arena* arena) const {
  FishBattleEndReq* n = new FishBattleEndReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBattleEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBattleEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battle_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_bonus_time_) -
      reinterpret_cast<char*>(&battle_result_)) + sizeof(max_bonus_time_));
  _internal_metadata_.Clear();
}

bool FishBattleEndReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBattleEndReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_always_bonus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_always_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_bonus_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_bonus_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FishBattleResult battle_result = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_battle_result(static_cast< ::proto::FishBattleResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBattleEndReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBattleEndReq)
  return false;
#undef DO_
}

void FishBattleEndReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBattleEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_always_bonus = 5;
  if (this->is_always_bonus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_always_bonus(), output);
  }

  // uint32 max_bonus_time = 10;
  if (this->max_bonus_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->max_bonus_time(), output);
  }

  // .proto.FishBattleResult battle_result = 11;
  if (this->battle_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->battle_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBattleEndReq)
}

::google::protobuf::uint8* FishBattleEndReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBattleEndReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_always_bonus = 5;
  if (this->is_always_bonus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_always_bonus(), target);
  }

  // uint32 max_bonus_time = 10;
  if (this->max_bonus_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->max_bonus_time(), target);
  }

  // .proto.FishBattleResult battle_result = 11;
  if (this->battle_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->battle_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBattleEndReq)
  return target;
}

size_t FishBattleEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBattleEndReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FishBattleResult battle_result = 11;
  if (this->battle_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->battle_result());
  }

  // bool is_always_bonus = 5;
  if (this->is_always_bonus() != 0) {
    total_size += 1 + 1;
  }

  // uint32 max_bonus_time = 10;
  if (this->max_bonus_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_bonus_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBattleEndReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBattleEndReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBattleEndReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBattleEndReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBattleEndReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBattleEndReq)
    MergeFrom(*source);
  }
}

void FishBattleEndReq::MergeFrom(const FishBattleEndReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBattleEndReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battle_result() != 0) {
    set_battle_result(from.battle_result());
  }
  if (from.is_always_bonus() != 0) {
    set_is_always_bonus(from.is_always_bonus());
  }
  if (from.max_bonus_time() != 0) {
    set_max_bonus_time(from.max_bonus_time());
  }
}

void FishBattleEndReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBattleEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBattleEndReq::CopyFrom(const FishBattleEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBattleEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBattleEndReq::IsInitialized() const {
  return true;
}

void FishBattleEndReq::Swap(FishBattleEndReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBattleEndReq::InternalSwap(FishBattleEndReq* other) {
  using std::swap;
  swap(battle_result_, other->battle_result_);
  swap(is_always_bonus_, other->is_always_bonus_);
  swap(max_bonus_time_, other->max_bonus_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBattleEndReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBattleEndReq

// uint32 max_bonus_time = 10;
void FishBattleEndReq::clear_max_bonus_time() {
  max_bonus_time_ = 0u;
}
::google::protobuf::uint32 FishBattleEndReq::max_bonus_time() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndReq.max_bonus_time)
  return max_bonus_time_;
}
void FishBattleEndReq::set_max_bonus_time(::google::protobuf::uint32 value) {
  
  max_bonus_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndReq.max_bonus_time)
}

// .proto.FishBattleResult battle_result = 11;
void FishBattleEndReq::clear_battle_result() {
  battle_result_ = 0;
}
::proto::FishBattleResult FishBattleEndReq::battle_result() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndReq.battle_result)
  return static_cast< ::proto::FishBattleResult >(battle_result_);
}
void FishBattleEndReq::set_battle_result(::proto::FishBattleResult value) {
  
  battle_result_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndReq.battle_result)
}

// bool is_always_bonus = 5;
void FishBattleEndReq::clear_is_always_bonus() {
  is_always_bonus_ = false;
}
bool FishBattleEndReq::is_always_bonus() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndReq.is_always_bonus)
  return is_always_bonus_;
}
void FishBattleEndReq::set_is_always_bonus(bool value) {
  
  is_always_bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndReq.is_always_bonus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishBattleEndRsp::kIsGotRewardFieldNumber;
const int FishBattleEndRsp::kRewardItemListFieldNumber;
const int FishBattleEndRsp::kTalentItemListFieldNumber;
const int FishBattleEndRsp::kDropItemListFieldNumber;
const int FishBattleEndRsp::kRetcodeFieldNumber;
const int FishBattleEndRsp::kNoRewardReasonFieldNumber;
const int FishBattleEndRsp::kBattleResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBattleEndRsp::FishBattleEndRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBattleEndRsp)
}
FishBattleEndRsp::FishBattleEndRsp(const FishBattleEndRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reward_item_list_(from.reward_item_list_),
      drop_item_list_(from.drop_item_list_),
      talent_item_list_(from.talent_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&battle_result_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(battle_result_));
  // @@protoc_insertion_point(copy_constructor:proto.FishBattleEndRsp)
}

void FishBattleEndRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_result_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(battle_result_));
  _cached_size_ = 0;
}

FishBattleEndRsp::~FishBattleEndRsp() {
  // @@protoc_insertion_point(destructor:proto.FishBattleEndRsp)
  SharedDtor();
}

void FishBattleEndRsp::SharedDtor() {
}

void FishBattleEndRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBattleEndRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBattleEndRsp& FishBattleEndRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBattleEndRsp* FishBattleEndRsp::New(::google::protobuf::Arena* arena) const {
  FishBattleEndRsp* n = new FishBattleEndRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBattleEndRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBattleEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_item_list_.Clear();
  drop_item_list_.Clear();
  talent_item_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_result_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(battle_result_));
  _internal_metadata_.Clear();
}

bool FishBattleEndRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBattleEndRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam reward_item_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_no_reward_reason(static_cast< ::proto::FishBattleEndRsp_FishNoRewardReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_got_reward = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_got_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FishBattleResult battle_result = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_battle_result(static_cast< ::proto::FishBattleResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam drop_item_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam talent_item_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talent_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBattleEndRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBattleEndRsp)
  return false;
#undef DO_
}

void FishBattleEndRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBattleEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // repeated .proto.ItemParam reward_item_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward_item_list(static_cast<int>(i)), output);
  }

  // .proto.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 5;
  if (this->no_reward_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->no_reward_reason(), output);
  }

  // bool is_got_reward = 8;
  if (this->is_got_reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_got_reward(), output);
  }

  // .proto.FishBattleResult battle_result = 10;
  if (this->battle_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->battle_result(), output);
  }

  // repeated .proto.ItemParam drop_item_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drop_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->drop_item_list(static_cast<int>(i)), output);
  }

  // repeated .proto.ItemParam talent_item_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talent_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->talent_item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBattleEndRsp)
}

::google::protobuf::uint8* FishBattleEndRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBattleEndRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // repeated .proto.ItemParam reward_item_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reward_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->reward_item_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 5;
  if (this->no_reward_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->no_reward_reason(), target);
  }

  // bool is_got_reward = 8;
  if (this->is_got_reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_got_reward(), target);
  }

  // .proto.FishBattleResult battle_result = 10;
  if (this->battle_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->battle_result(), target);
  }

  // repeated .proto.ItemParam drop_item_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drop_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->drop_item_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ItemParam talent_item_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talent_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->talent_item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBattleEndRsp)
  return target;
}

size_t FishBattleEndRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBattleEndRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam reward_item_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->reward_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reward_item_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam drop_item_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->drop_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->drop_item_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam talent_item_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->talent_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->talent_item_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 5;
  if (this->no_reward_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->no_reward_reason());
  }

  // bool is_got_reward = 8;
  if (this->is_got_reward() != 0) {
    total_size += 1 + 1;
  }

  // .proto.FishBattleResult battle_result = 10;
  if (this->battle_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->battle_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBattleEndRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBattleEndRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBattleEndRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBattleEndRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBattleEndRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBattleEndRsp)
    MergeFrom(*source);
  }
}

void FishBattleEndRsp::MergeFrom(const FishBattleEndRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBattleEndRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward_item_list_.MergeFrom(from.reward_item_list_);
  drop_item_list_.MergeFrom(from.drop_item_list_);
  talent_item_list_.MergeFrom(from.talent_item_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.no_reward_reason() != 0) {
    set_no_reward_reason(from.no_reward_reason());
  }
  if (from.is_got_reward() != 0) {
    set_is_got_reward(from.is_got_reward());
  }
  if (from.battle_result() != 0) {
    set_battle_result(from.battle_result());
  }
}

void FishBattleEndRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBattleEndRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBattleEndRsp::CopyFrom(const FishBattleEndRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBattleEndRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBattleEndRsp::IsInitialized() const {
  return true;
}

void FishBattleEndRsp::Swap(FishBattleEndRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBattleEndRsp::InternalSwap(FishBattleEndRsp* other) {
  using std::swap;
  reward_item_list_.InternalSwap(&other->reward_item_list_);
  drop_item_list_.InternalSwap(&other->drop_item_list_);
  talent_item_list_.InternalSwap(&other->talent_item_list_);
  swap(retcode_, other->retcode_);
  swap(no_reward_reason_, other->no_reward_reason_);
  swap(is_got_reward_, other->is_got_reward_);
  swap(battle_result_, other->battle_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBattleEndRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBattleEndRsp

// bool is_got_reward = 8;
void FishBattleEndRsp::clear_is_got_reward() {
  is_got_reward_ = false;
}
bool FishBattleEndRsp::is_got_reward() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.is_got_reward)
  return is_got_reward_;
}
void FishBattleEndRsp::set_is_got_reward(bool value) {
  
  is_got_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndRsp.is_got_reward)
}

// repeated .proto.ItemParam reward_item_list = 3;
int FishBattleEndRsp::reward_item_list_size() const {
  return reward_item_list_.size();
}
void FishBattleEndRsp::clear_reward_item_list() {
  reward_item_list_.Clear();
}
const ::proto::ItemParam& FishBattleEndRsp::reward_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.reward_item_list)
  return reward_item_list_.Get(index);
}
::proto::ItemParam* FishBattleEndRsp::mutable_reward_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FishBattleEndRsp.reward_item_list)
  return reward_item_list_.Mutable(index);
}
::proto::ItemParam* FishBattleEndRsp::add_reward_item_list() {
  // @@protoc_insertion_point(field_add:proto.FishBattleEndRsp.reward_item_list)
  return reward_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
FishBattleEndRsp::mutable_reward_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishBattleEndRsp.reward_item_list)
  return &reward_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
FishBattleEndRsp::reward_item_list() const {
  // @@protoc_insertion_point(field_list:proto.FishBattleEndRsp.reward_item_list)
  return reward_item_list_;
}

// repeated .proto.ItemParam talent_item_list = 15;
int FishBattleEndRsp::talent_item_list_size() const {
  return talent_item_list_.size();
}
void FishBattleEndRsp::clear_talent_item_list() {
  talent_item_list_.Clear();
}
const ::proto::ItemParam& FishBattleEndRsp::talent_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.talent_item_list)
  return talent_item_list_.Get(index);
}
::proto::ItemParam* FishBattleEndRsp::mutable_talent_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FishBattleEndRsp.talent_item_list)
  return talent_item_list_.Mutable(index);
}
::proto::ItemParam* FishBattleEndRsp::add_talent_item_list() {
  // @@protoc_insertion_point(field_add:proto.FishBattleEndRsp.talent_item_list)
  return talent_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
FishBattleEndRsp::mutable_talent_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishBattleEndRsp.talent_item_list)
  return &talent_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
FishBattleEndRsp::talent_item_list() const {
  // @@protoc_insertion_point(field_list:proto.FishBattleEndRsp.talent_item_list)
  return talent_item_list_;
}

// repeated .proto.ItemParam drop_item_list = 12;
int FishBattleEndRsp::drop_item_list_size() const {
  return drop_item_list_.size();
}
void FishBattleEndRsp::clear_drop_item_list() {
  drop_item_list_.Clear();
}
const ::proto::ItemParam& FishBattleEndRsp::drop_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.drop_item_list)
  return drop_item_list_.Get(index);
}
::proto::ItemParam* FishBattleEndRsp::mutable_drop_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FishBattleEndRsp.drop_item_list)
  return drop_item_list_.Mutable(index);
}
::proto::ItemParam* FishBattleEndRsp::add_drop_item_list() {
  // @@protoc_insertion_point(field_add:proto.FishBattleEndRsp.drop_item_list)
  return drop_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
FishBattleEndRsp::mutable_drop_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishBattleEndRsp.drop_item_list)
  return &drop_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
FishBattleEndRsp::drop_item_list() const {
  // @@protoc_insertion_point(field_list:proto.FishBattleEndRsp.drop_item_list)
  return drop_item_list_;
}

// int32 retcode = 2;
void FishBattleEndRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FishBattleEndRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.retcode)
  return retcode_;
}
void FishBattleEndRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndRsp.retcode)
}

// .proto.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 5;
void FishBattleEndRsp::clear_no_reward_reason() {
  no_reward_reason_ = 0;
}
::proto::FishBattleEndRsp_FishNoRewardReason FishBattleEndRsp::no_reward_reason() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.no_reward_reason)
  return static_cast< ::proto::FishBattleEndRsp_FishNoRewardReason >(no_reward_reason_);
}
void FishBattleEndRsp::set_no_reward_reason(::proto::FishBattleEndRsp_FishNoRewardReason value) {
  
  no_reward_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndRsp.no_reward_reason)
}

// .proto.FishBattleResult battle_result = 10;
void FishBattleEndRsp::clear_battle_result() {
  battle_result_ = 0;
}
::proto::FishBattleResult FishBattleEndRsp::battle_result() const {
  // @@protoc_insertion_point(field_get:proto.FishBattleEndRsp.battle_result)
  return static_cast< ::proto::FishBattleResult >(battle_result_);
}
void FishBattleEndRsp::set_battle_result(::proto::FishBattleResult value) {
  
  battle_result_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBattleEndRsp.battle_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitFishingReq::ExitFishingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExitFishingReq)
}
ExitFishingReq::ExitFishingReq(const ExitFishingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ExitFishingReq)
}

void ExitFishingReq::SharedCtor() {
  _cached_size_ = 0;
}

ExitFishingReq::~ExitFishingReq() {
  // @@protoc_insertion_point(destructor:proto.ExitFishingReq)
  SharedDtor();
}

void ExitFishingReq::SharedDtor() {
}

void ExitFishingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitFishingReq::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitFishingReq& ExitFishingReq::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitFishingReq* ExitFishingReq::New(::google::protobuf::Arena* arena) const {
  ExitFishingReq* n = new ExitFishingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitFishingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExitFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ExitFishingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExitFishingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExitFishingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExitFishingReq)
  return false;
#undef DO_
}

void ExitFishingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExitFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExitFishingReq)
}

::google::protobuf::uint8* ExitFishingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExitFishingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExitFishingReq)
  return target;
}

size_t ExitFishingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExitFishingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitFishingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExitFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitFishingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitFishingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExitFishingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExitFishingReq)
    MergeFrom(*source);
  }
}

void ExitFishingReq::MergeFrom(const ExitFishingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExitFishingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExitFishingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExitFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitFishingReq::CopyFrom(const ExitFishingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExitFishingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitFishingReq::IsInitialized() const {
  return true;
}

void ExitFishingReq::Swap(ExitFishingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitFishingReq::InternalSwap(ExitFishingReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitFishingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitFishingReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitFishingRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitFishingRsp::ExitFishingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExitFishingRsp)
}
ExitFishingRsp::ExitFishingRsp(const ExitFishingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ExitFishingRsp)
}

void ExitFishingRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ExitFishingRsp::~ExitFishingRsp() {
  // @@protoc_insertion_point(destructor:proto.ExitFishingRsp)
  SharedDtor();
}

void ExitFishingRsp::SharedDtor() {
}

void ExitFishingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitFishingRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitFishingRsp& ExitFishingRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitFishingRsp* ExitFishingRsp::New(::google::protobuf::Arena* arena) const {
  ExitFishingRsp* n = new ExitFishingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitFishingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExitFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ExitFishingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExitFishingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExitFishingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExitFishingRsp)
  return false;
#undef DO_
}

void ExitFishingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExitFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExitFishingRsp)
}

::google::protobuf::uint8* ExitFishingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExitFishingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 12;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExitFishingRsp)
  return target;
}

size_t ExitFishingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExitFishingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 12;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitFishingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExitFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitFishingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitFishingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExitFishingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExitFishingRsp)
    MergeFrom(*source);
  }
}

void ExitFishingRsp::MergeFrom(const ExitFishingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExitFishingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ExitFishingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExitFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitFishingRsp::CopyFrom(const ExitFishingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExitFishingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitFishingRsp::IsInitialized() const {
  return true;
}

void ExitFishingRsp::Swap(ExitFishingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitFishingRsp::InternalSwap(ExitFishingRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitFishingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitFishingRsp

// int32 retcode = 12;
void ExitFishingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ExitFishingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExitFishingRsp.retcode)
  return retcode_;
}
void ExitFishingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitFishingRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishAttractNotify::kFishIdListFieldNumber;
const int FishAttractNotify::kPosFieldNumber;
const int FishAttractNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishAttractNotify::FishAttractNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishAttractNotify)
}
FishAttractNotify::FishAttractNotify(const FishAttractNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fish_id_list_(from.fish_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.FishAttractNotify)
}

void FishAttractNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(uid_));
  _cached_size_ = 0;
}

FishAttractNotify::~FishAttractNotify() {
  // @@protoc_insertion_point(destructor:proto.FishAttractNotify)
  SharedDtor();
}

void FishAttractNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void FishAttractNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishAttractNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishAttractNotify& FishAttractNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishAttractNotify* FishAttractNotify::New(::google::protobuf::Arena* arena) const {
  FishAttractNotify* n = new FishAttractNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishAttractNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishAttractNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_id_list_.Clear();
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool FishAttractNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishAttractNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fish_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fish_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_fish_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishAttractNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishAttractNotify)
  return false;
#undef DO_
}

void FishAttractNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishAttractNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // repeated uint32 fish_id_list = 5;
  if (this->fish_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fish_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fish_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fish_id_list(i), output);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishAttractNotify)
}

::google::protobuf::uint8* FishAttractNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishAttractNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  // repeated uint32 fish_id_list = 5;
  if (this->fish_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fish_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fish_id_list_, target);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishAttractNotify)
  return target;
}

size_t FishAttractNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishAttractNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 fish_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fish_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fish_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 uid = 10;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishAttractNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishAttractNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FishAttractNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishAttractNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishAttractNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishAttractNotify)
    MergeFrom(*source);
  }
}

void FishAttractNotify::MergeFrom(const FishAttractNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishAttractNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fish_id_list_.MergeFrom(from.fish_id_list_);
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void FishAttractNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishAttractNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishAttractNotify::CopyFrom(const FishAttractNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishAttractNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishAttractNotify::IsInitialized() const {
  return true;
}

void FishAttractNotify::Swap(FishAttractNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishAttractNotify::InternalSwap(FishAttractNotify* other) {
  using std::swap;
  fish_id_list_.InternalSwap(&other->fish_id_list_);
  swap(pos_, other->pos_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishAttractNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishAttractNotify

// repeated uint32 fish_id_list = 5;
int FishAttractNotify::fish_id_list_size() const {
  return fish_id_list_.size();
}
void FishAttractNotify::clear_fish_id_list() {
  fish_id_list_.Clear();
}
::google::protobuf::uint32 FishAttractNotify::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FishAttractNotify.fish_id_list)
  return fish_id_list_.Get(index);
}
void FishAttractNotify::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FishAttractNotify.fish_id_list)
}
void FishAttractNotify::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FishAttractNotify.fish_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FishAttractNotify::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.FishAttractNotify.fish_id_list)
  return fish_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FishAttractNotify::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FishAttractNotify.fish_id_list)
  return &fish_id_list_;
}

// .proto.Vector pos = 3;
bool FishAttractNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void FishAttractNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& FishAttractNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.FishAttractNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* FishAttractNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.FishAttractNotify.pos)
  return pos_;
}
::proto::Vector* FishAttractNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.FishAttractNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FishAttractNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FishAttractNotify.pos)
}

// uint32 uid = 10;
void FishAttractNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FishAttractNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.FishAttractNotify.uid)
  return uid_;
}
void FishAttractNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FishAttractNotify.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishBaitGoneNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishBaitGoneNotify::FishBaitGoneNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishBaitGoneNotify)
}
FishBaitGoneNotify::FishBaitGoneNotify(const FishBaitGoneNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.FishBaitGoneNotify)
}

void FishBaitGoneNotify::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

FishBaitGoneNotify::~FishBaitGoneNotify() {
  // @@protoc_insertion_point(destructor:proto.FishBaitGoneNotify)
  SharedDtor();
}

void FishBaitGoneNotify::SharedDtor() {
}

void FishBaitGoneNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishBaitGoneNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishBaitGoneNotify& FishBaitGoneNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishBaitGoneNotify* FishBaitGoneNotify::New(::google::protobuf::Arena* arena) const {
  FishBaitGoneNotify* n = new FishBaitGoneNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishBaitGoneNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishBaitGoneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool FishBaitGoneNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishBaitGoneNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishBaitGoneNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishBaitGoneNotify)
  return false;
#undef DO_
}

void FishBaitGoneNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishBaitGoneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 8;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishBaitGoneNotify)
}

::google::protobuf::uint8* FishBaitGoneNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishBaitGoneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 8;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishBaitGoneNotify)
  return target;
}

size_t FishBaitGoneNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishBaitGoneNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 8;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishBaitGoneNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishBaitGoneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FishBaitGoneNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishBaitGoneNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishBaitGoneNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishBaitGoneNotify)
    MergeFrom(*source);
  }
}

void FishBaitGoneNotify::MergeFrom(const FishBaitGoneNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishBaitGoneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void FishBaitGoneNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishBaitGoneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishBaitGoneNotify::CopyFrom(const FishBaitGoneNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishBaitGoneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishBaitGoneNotify::IsInitialized() const {
  return true;
}

void FishBaitGoneNotify::Swap(FishBaitGoneNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishBaitGoneNotify::InternalSwap(FishBaitGoneNotify* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishBaitGoneNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishBaitGoneNotify

// uint32 uid = 8;
void FishBaitGoneNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FishBaitGoneNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.FishBaitGoneNotify.uid)
  return uid_;
}
void FishBaitGoneNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FishBaitGoneNotify.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerFishingDataNotify::kLastFishRodIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerFishingDataNotify::PlayerFishingDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerFishingDataNotify)
}
PlayerFishingDataNotify::PlayerFishingDataNotify(const PlayerFishingDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_fish_rod_id_ = from.last_fish_rod_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerFishingDataNotify)
}

void PlayerFishingDataNotify::SharedCtor() {
  last_fish_rod_id_ = 0u;
  _cached_size_ = 0;
}

PlayerFishingDataNotify::~PlayerFishingDataNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerFishingDataNotify)
  SharedDtor();
}

void PlayerFishingDataNotify::SharedDtor() {
}

void PlayerFishingDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerFishingDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerFishingDataNotify& PlayerFishingDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerFishingDataNotify* PlayerFishingDataNotify::New(::google::protobuf::Arena* arena) const {
  PlayerFishingDataNotify* n = new PlayerFishingDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerFishingDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerFishingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_fish_rod_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerFishingDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerFishingDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 last_fish_rod_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_fish_rod_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerFishingDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerFishingDataNotify)
  return false;
#undef DO_
}

void PlayerFishingDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerFishingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_fish_rod_id = 4;
  if (this->last_fish_rod_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_fish_rod_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerFishingDataNotify)
}

::google::protobuf::uint8* PlayerFishingDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerFishingDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 last_fish_rod_id = 4;
  if (this->last_fish_rod_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_fish_rod_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerFishingDataNotify)
  return target;
}

size_t PlayerFishingDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerFishingDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 last_fish_rod_id = 4;
  if (this->last_fish_rod_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_fish_rod_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerFishingDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerFishingDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerFishingDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerFishingDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerFishingDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerFishingDataNotify)
    MergeFrom(*source);
  }
}

void PlayerFishingDataNotify::MergeFrom(const PlayerFishingDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerFishingDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_fish_rod_id() != 0) {
    set_last_fish_rod_id(from.last_fish_rod_id());
  }
}

void PlayerFishingDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerFishingDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerFishingDataNotify::CopyFrom(const PlayerFishingDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerFishingDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerFishingDataNotify::IsInitialized() const {
  return true;
}

void PlayerFishingDataNotify::Swap(PlayerFishingDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerFishingDataNotify::InternalSwap(PlayerFishingDataNotify* other) {
  using std::swap;
  swap(last_fish_rod_id_, other->last_fish_rod_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerFishingDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerFishingDataNotify

// uint32 last_fish_rod_id = 4;
void PlayerFishingDataNotify::clear_last_fish_rod_id() {
  last_fish_rod_id_ = 0u;
}
::google::protobuf::uint32 PlayerFishingDataNotify::last_fish_rod_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerFishingDataNotify.last_fish_rod_id)
  return last_fish_rod_id_;
}
void PlayerFishingDataNotify::set_last_fish_rod_id(::google::protobuf::uint32 value) {
  
  last_fish_rod_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerFishingDataNotify.last_fish_rod_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishPoolDataNotify::kEntityIdFieldNumber;
const int FishPoolDataNotify::kTodayFishNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishPoolDataNotify::FishPoolDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishPoolDataNotify)
}
FishPoolDataNotify::FishPoolDataNotify(const FishPoolDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&today_fish_num_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(today_fish_num_));
  // @@protoc_insertion_point(copy_constructor:proto.FishPoolDataNotify)
}

void FishPoolDataNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&today_fish_num_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(today_fish_num_));
  _cached_size_ = 0;
}

FishPoolDataNotify::~FishPoolDataNotify() {
  // @@protoc_insertion_point(destructor:proto.FishPoolDataNotify)
  SharedDtor();
}

void FishPoolDataNotify::SharedDtor() {
}

void FishPoolDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishPoolDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishPoolDataNotify& FishPoolDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffish_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishPoolDataNotify* FishPoolDataNotify::New(::google::protobuf::Arena* arena) const {
  FishPoolDataNotify* n = new FishPoolDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishPoolDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishPoolDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&today_fish_num_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(today_fish_num_));
  _internal_metadata_.Clear();
}

bool FishPoolDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishPoolDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 today_fish_num = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &today_fish_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishPoolDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishPoolDataNotify)
  return false;
#undef DO_
}

void FishPoolDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishPoolDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 5;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->entity_id(), output);
  }

  // uint32 today_fish_num = 10;
  if (this->today_fish_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->today_fish_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishPoolDataNotify)
}

::google::protobuf::uint8* FishPoolDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishPoolDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 5;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->entity_id(), target);
  }

  // uint32 today_fish_num = 10;
  if (this->today_fish_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->today_fish_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishPoolDataNotify)
  return target;
}

size_t FishPoolDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishPoolDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 5;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 today_fish_num = 10;
  if (this->today_fish_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->today_fish_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishPoolDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishPoolDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FishPoolDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishPoolDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishPoolDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishPoolDataNotify)
    MergeFrom(*source);
  }
}

void FishPoolDataNotify::MergeFrom(const FishPoolDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishPoolDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.today_fish_num() != 0) {
    set_today_fish_num(from.today_fish_num());
  }
}

void FishPoolDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishPoolDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishPoolDataNotify::CopyFrom(const FishPoolDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishPoolDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishPoolDataNotify::IsInitialized() const {
  return true;
}

void FishPoolDataNotify::Swap(FishPoolDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishPoolDataNotify::InternalSwap(FishPoolDataNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(today_fish_num_, other->today_fish_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishPoolDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffish_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishPoolDataNotify

// uint32 entity_id = 5;
void FishPoolDataNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 FishPoolDataNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.FishPoolDataNotify.entity_id)
  return entity_id_;
}
void FishPoolDataNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FishPoolDataNotify.entity_id)
}

// uint32 today_fish_num = 10;
void FishPoolDataNotify::clear_today_fish_num() {
  today_fish_num_ = 0u;
}
::google::protobuf::uint32 FishPoolDataNotify::today_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.FishPoolDataNotify.today_fish_num)
  return today_fish_num_;
}
void FishPoolDataNotify::set_today_fish_num(::google::protobuf::uint32 value) {
  
  today_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishPoolDataNotify.today_fish_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
