// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_routine.proto

#ifndef PROTOBUF_cmd_2fcmd_5froutine_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5froutine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class PlayerRoutineDataNotify;
class PlayerRoutineDataNotifyDefaultTypeInternal;
extern PlayerRoutineDataNotifyDefaultTypeInternal _PlayerRoutineDataNotify_default_instance_;
class PlayerRoutineInfo;
class PlayerRoutineInfoDefaultTypeInternal;
extern PlayerRoutineInfoDefaultTypeInternal _PlayerRoutineInfo_default_instance_;
class WorldAllRoutineTypeNotify;
class WorldAllRoutineTypeNotifyDefaultTypeInternal;
extern WorldAllRoutineTypeNotifyDefaultTypeInternal _WorldAllRoutineTypeNotify_default_instance_;
class WorldRoutineChangeNotify;
class WorldRoutineChangeNotifyDefaultTypeInternal;
extern WorldRoutineChangeNotifyDefaultTypeInternal _WorldRoutineChangeNotify_default_instance_;
class WorldRoutineInfo;
class WorldRoutineInfoDefaultTypeInternal;
extern WorldRoutineInfoDefaultTypeInternal _WorldRoutineInfo_default_instance_;
class WorldRoutineTypeCloseNotify;
class WorldRoutineTypeCloseNotifyDefaultTypeInternal;
extern WorldRoutineTypeCloseNotifyDefaultTypeInternal _WorldRoutineTypeCloseNotify_default_instance_;
class WorldRoutineTypeInfo;
class WorldRoutineTypeInfoDefaultTypeInternal;
extern WorldRoutineTypeInfoDefaultTypeInternal _WorldRoutineTypeInfo_default_instance_;
class WorldRoutineTypeRefreshNotify;
class WorldRoutineTypeRefreshNotifyDefaultTypeInternal;
extern WorldRoutineTypeRefreshNotifyDefaultTypeInternal _WorldRoutineTypeRefreshNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5froutine_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5froutine_2eproto

enum PlayerRoutineDataNotify_CmdId {
  PlayerRoutineDataNotify_CmdId_NONE = 0,
  PlayerRoutineDataNotify_CmdId_CMD_ID = 3526,
  PlayerRoutineDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerRoutineDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerRoutineDataNotify_CmdId_PlayerRoutineDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerRoutineDataNotify_CmdId_PlayerRoutineDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerRoutineDataNotify_CmdId_IsValid(int value);
const PlayerRoutineDataNotify_CmdId PlayerRoutineDataNotify_CmdId_CmdId_MIN = PlayerRoutineDataNotify_CmdId_NONE;
const PlayerRoutineDataNotify_CmdId PlayerRoutineDataNotify_CmdId_CmdId_MAX = PlayerRoutineDataNotify_CmdId_CMD_ID;
const int PlayerRoutineDataNotify_CmdId_CmdId_ARRAYSIZE = PlayerRoutineDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerRoutineDataNotify_CmdId_descriptor();
inline const ::std::string& PlayerRoutineDataNotify_CmdId_Name(PlayerRoutineDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerRoutineDataNotify_CmdId_descriptor(), value);
}
inline bool PlayerRoutineDataNotify_CmdId_Parse(
    const ::std::string& name, PlayerRoutineDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerRoutineDataNotify_CmdId>(
    PlayerRoutineDataNotify_CmdId_descriptor(), name, value);
}
enum WorldAllRoutineTypeNotify_CmdId {
  WorldAllRoutineTypeNotify_CmdId_NONE = 0,
  WorldAllRoutineTypeNotify_CmdId_CMD_ID = 3518,
  WorldAllRoutineTypeNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldAllRoutineTypeNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldAllRoutineTypeNotify_CmdId_WorldAllRoutineTypeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldAllRoutineTypeNotify_CmdId_WorldAllRoutineTypeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldAllRoutineTypeNotify_CmdId_IsValid(int value);
const WorldAllRoutineTypeNotify_CmdId WorldAllRoutineTypeNotify_CmdId_CmdId_MIN = WorldAllRoutineTypeNotify_CmdId_NONE;
const WorldAllRoutineTypeNotify_CmdId WorldAllRoutineTypeNotify_CmdId_CmdId_MAX = WorldAllRoutineTypeNotify_CmdId_CMD_ID;
const int WorldAllRoutineTypeNotify_CmdId_CmdId_ARRAYSIZE = WorldAllRoutineTypeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldAllRoutineTypeNotify_CmdId_descriptor();
inline const ::std::string& WorldAllRoutineTypeNotify_CmdId_Name(WorldAllRoutineTypeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldAllRoutineTypeNotify_CmdId_descriptor(), value);
}
inline bool WorldAllRoutineTypeNotify_CmdId_Parse(
    const ::std::string& name, WorldAllRoutineTypeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldAllRoutineTypeNotify_CmdId>(
    WorldAllRoutineTypeNotify_CmdId_descriptor(), name, value);
}
enum WorldRoutineTypeRefreshNotify_CmdId {
  WorldRoutineTypeRefreshNotify_CmdId_NONE = 0,
  WorldRoutineTypeRefreshNotify_CmdId_CMD_ID = 3525,
  WorldRoutineTypeRefreshNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldRoutineTypeRefreshNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldRoutineTypeRefreshNotify_CmdId_WorldRoutineTypeRefreshNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldRoutineTypeRefreshNotify_CmdId_WorldRoutineTypeRefreshNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldRoutineTypeRefreshNotify_CmdId_IsValid(int value);
const WorldRoutineTypeRefreshNotify_CmdId WorldRoutineTypeRefreshNotify_CmdId_CmdId_MIN = WorldRoutineTypeRefreshNotify_CmdId_NONE;
const WorldRoutineTypeRefreshNotify_CmdId WorldRoutineTypeRefreshNotify_CmdId_CmdId_MAX = WorldRoutineTypeRefreshNotify_CmdId_CMD_ID;
const int WorldRoutineTypeRefreshNotify_CmdId_CmdId_ARRAYSIZE = WorldRoutineTypeRefreshNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldRoutineTypeRefreshNotify_CmdId_descriptor();
inline const ::std::string& WorldRoutineTypeRefreshNotify_CmdId_Name(WorldRoutineTypeRefreshNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldRoutineTypeRefreshNotify_CmdId_descriptor(), value);
}
inline bool WorldRoutineTypeRefreshNotify_CmdId_Parse(
    const ::std::string& name, WorldRoutineTypeRefreshNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldRoutineTypeRefreshNotify_CmdId>(
    WorldRoutineTypeRefreshNotify_CmdId_descriptor(), name, value);
}
enum WorldRoutineChangeNotify_CmdId {
  WorldRoutineChangeNotify_CmdId_NONE = 0,
  WorldRoutineChangeNotify_CmdId_CMD_ID = 3507,
  WorldRoutineChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldRoutineChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldRoutineChangeNotify_CmdId_WorldRoutineChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldRoutineChangeNotify_CmdId_WorldRoutineChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldRoutineChangeNotify_CmdId_IsValid(int value);
const WorldRoutineChangeNotify_CmdId WorldRoutineChangeNotify_CmdId_CmdId_MIN = WorldRoutineChangeNotify_CmdId_NONE;
const WorldRoutineChangeNotify_CmdId WorldRoutineChangeNotify_CmdId_CmdId_MAX = WorldRoutineChangeNotify_CmdId_CMD_ID;
const int WorldRoutineChangeNotify_CmdId_CmdId_ARRAYSIZE = WorldRoutineChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldRoutineChangeNotify_CmdId_descriptor();
inline const ::std::string& WorldRoutineChangeNotify_CmdId_Name(WorldRoutineChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldRoutineChangeNotify_CmdId_descriptor(), value);
}
inline bool WorldRoutineChangeNotify_CmdId_Parse(
    const ::std::string& name, WorldRoutineChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldRoutineChangeNotify_CmdId>(
    WorldRoutineChangeNotify_CmdId_descriptor(), name, value);
}
enum WorldRoutineTypeCloseNotify_CmdId {
  WorldRoutineTypeCloseNotify_CmdId_NONE = 0,
  WorldRoutineTypeCloseNotify_CmdId_CMD_ID = 3502,
  WorldRoutineTypeCloseNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldRoutineTypeCloseNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldRoutineTypeCloseNotify_CmdId_WorldRoutineTypeCloseNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldRoutineTypeCloseNotify_CmdId_WorldRoutineTypeCloseNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldRoutineTypeCloseNotify_CmdId_IsValid(int value);
const WorldRoutineTypeCloseNotify_CmdId WorldRoutineTypeCloseNotify_CmdId_CmdId_MIN = WorldRoutineTypeCloseNotify_CmdId_NONE;
const WorldRoutineTypeCloseNotify_CmdId WorldRoutineTypeCloseNotify_CmdId_CmdId_MAX = WorldRoutineTypeCloseNotify_CmdId_CMD_ID;
const int WorldRoutineTypeCloseNotify_CmdId_CmdId_ARRAYSIZE = WorldRoutineTypeCloseNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldRoutineTypeCloseNotify_CmdId_descriptor();
inline const ::std::string& WorldRoutineTypeCloseNotify_CmdId_Name(WorldRoutineTypeCloseNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldRoutineTypeCloseNotify_CmdId_descriptor(), value);
}
inline bool WorldRoutineTypeCloseNotify_CmdId_Parse(
    const ::std::string& name, WorldRoutineTypeCloseNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldRoutineTypeCloseNotify_CmdId>(
    WorldRoutineTypeCloseNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class PlayerRoutineInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRoutineInfo) */ {
 public:
  PlayerRoutineInfo();
  virtual ~PlayerRoutineInfo();

  PlayerRoutineInfo(const PlayerRoutineInfo& from);

  inline PlayerRoutineInfo& operator=(const PlayerRoutineInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRoutineInfo(PlayerRoutineInfo&& from) noexcept
    : PlayerRoutineInfo() {
    *this = ::std::move(from);
  }

  inline PlayerRoutineInfo& operator=(PlayerRoutineInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRoutineInfo& default_instance();

  static inline const PlayerRoutineInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerRoutineInfo*>(
               &_PlayerRoutineInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerRoutineInfo* other);
  friend void swap(PlayerRoutineInfo& a, PlayerRoutineInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRoutineInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRoutineInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRoutineInfo& from);
  void MergeFrom(const PlayerRoutineInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRoutineInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 routine_type = 8;
  void clear_routine_type();
  static const int kRoutineTypeFieldNumber = 8;
  ::google::protobuf::uint32 routine_type() const;
  void set_routine_type(::google::protobuf::uint32 value);

  // uint32 finished_num = 15;
  void clear_finished_num();
  static const int kFinishedNumFieldNumber = 15;
  ::google::protobuf::uint32 finished_num() const;
  void set_finished_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerRoutineInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 routine_type_;
  ::google::protobuf::uint32 finished_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRoutineDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRoutineDataNotify) */ {
 public:
  PlayerRoutineDataNotify();
  virtual ~PlayerRoutineDataNotify();

  PlayerRoutineDataNotify(const PlayerRoutineDataNotify& from);

  inline PlayerRoutineDataNotify& operator=(const PlayerRoutineDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRoutineDataNotify(PlayerRoutineDataNotify&& from) noexcept
    : PlayerRoutineDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerRoutineDataNotify& operator=(PlayerRoutineDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRoutineDataNotify& default_instance();

  static inline const PlayerRoutineDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerRoutineDataNotify*>(
               &_PlayerRoutineDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerRoutineDataNotify* other);
  friend void swap(PlayerRoutineDataNotify& a, PlayerRoutineDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRoutineDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRoutineDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRoutineDataNotify& from);
  void MergeFrom(const PlayerRoutineDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRoutineDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerRoutineDataNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerRoutineDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerRoutineDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerRoutineDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerRoutineDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerRoutineDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerRoutineDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerRoutineDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerRoutineDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerRoutineDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerRoutineDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerRoutineDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerRoutineInfo routine_info_list = 11;
  int routine_info_list_size() const;
  void clear_routine_info_list();
  static const int kRoutineInfoListFieldNumber = 11;
  const ::proto::PlayerRoutineInfo& routine_info_list(int index) const;
  ::proto::PlayerRoutineInfo* mutable_routine_info_list(int index);
  ::proto::PlayerRoutineInfo* add_routine_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerRoutineInfo >*
      mutable_routine_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerRoutineInfo >&
      routine_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerRoutineDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerRoutineInfo > routine_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldRoutineInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldRoutineInfo) */ {
 public:
  WorldRoutineInfo();
  virtual ~WorldRoutineInfo();

  WorldRoutineInfo(const WorldRoutineInfo& from);

  inline WorldRoutineInfo& operator=(const WorldRoutineInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldRoutineInfo(WorldRoutineInfo&& from) noexcept
    : WorldRoutineInfo() {
    *this = ::std::move(from);
  }

  inline WorldRoutineInfo& operator=(WorldRoutineInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldRoutineInfo& default_instance();

  static inline const WorldRoutineInfo* internal_default_instance() {
    return reinterpret_cast<const WorldRoutineInfo*>(
               &_WorldRoutineInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(WorldRoutineInfo* other);
  friend void swap(WorldRoutineInfo& a, WorldRoutineInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldRoutineInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldRoutineInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldRoutineInfo& from);
  void MergeFrom(const WorldRoutineInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldRoutineInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 finish_progress = 3;
  void clear_finish_progress();
  static const int kFinishProgressFieldNumber = 3;
  ::google::protobuf::uint32 finish_progress() const;
  void set_finish_progress(::google::protobuf::uint32 value);

  // uint32 progress = 4;
  void clear_progress();
  static const int kProgressFieldNumber = 4;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 routine_id = 11;
  void clear_routine_id();
  static const int kRoutineIdFieldNumber = 11;
  ::google::protobuf::uint32 routine_id() const;
  void set_routine_id(::google::protobuf::uint32 value);

  // bool is_finished = 14;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 14;
  bool is_finished() const;
  void set_is_finished(bool value);

  // @@protoc_insertion_point(class_scope:proto.WorldRoutineInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 finish_progress_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 routine_id_;
  bool is_finished_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldRoutineTypeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldRoutineTypeInfo) */ {
 public:
  WorldRoutineTypeInfo();
  virtual ~WorldRoutineTypeInfo();

  WorldRoutineTypeInfo(const WorldRoutineTypeInfo& from);

  inline WorldRoutineTypeInfo& operator=(const WorldRoutineTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldRoutineTypeInfo(WorldRoutineTypeInfo&& from) noexcept
    : WorldRoutineTypeInfo() {
    *this = ::std::move(from);
  }

  inline WorldRoutineTypeInfo& operator=(WorldRoutineTypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldRoutineTypeInfo& default_instance();

  static inline const WorldRoutineTypeInfo* internal_default_instance() {
    return reinterpret_cast<const WorldRoutineTypeInfo*>(
               &_WorldRoutineTypeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(WorldRoutineTypeInfo* other);
  friend void swap(WorldRoutineTypeInfo& a, WorldRoutineTypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldRoutineTypeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldRoutineTypeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldRoutineTypeInfo& from);
  void MergeFrom(const WorldRoutineTypeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldRoutineTypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.WorldRoutineInfo world_routine_info_list = 3;
  int world_routine_info_list_size() const;
  void clear_world_routine_info_list();
  static const int kWorldRoutineInfoListFieldNumber = 3;
  const ::proto::WorldRoutineInfo& world_routine_info_list(int index) const;
  ::proto::WorldRoutineInfo* mutable_world_routine_info_list(int index);
  ::proto::WorldRoutineInfo* add_world_routine_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineInfo >*
      mutable_world_routine_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineInfo >&
      world_routine_info_list() const;

  // uint32 next_refresh_time = 12;
  void clear_next_refresh_time();
  static const int kNextRefreshTimeFieldNumber = 12;
  ::google::protobuf::uint32 next_refresh_time() const;
  void set_next_refresh_time(::google::protobuf::uint32 value);

  // uint32 routine_type = 13;
  void clear_routine_type();
  static const int kRoutineTypeFieldNumber = 13;
  ::google::protobuf::uint32 routine_type() const;
  void set_routine_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldRoutineTypeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineInfo > world_routine_info_list_;
  ::google::protobuf::uint32 next_refresh_time_;
  ::google::protobuf::uint32 routine_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldAllRoutineTypeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldAllRoutineTypeNotify) */ {
 public:
  WorldAllRoutineTypeNotify();
  virtual ~WorldAllRoutineTypeNotify();

  WorldAllRoutineTypeNotify(const WorldAllRoutineTypeNotify& from);

  inline WorldAllRoutineTypeNotify& operator=(const WorldAllRoutineTypeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldAllRoutineTypeNotify(WorldAllRoutineTypeNotify&& from) noexcept
    : WorldAllRoutineTypeNotify() {
    *this = ::std::move(from);
  }

  inline WorldAllRoutineTypeNotify& operator=(WorldAllRoutineTypeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldAllRoutineTypeNotify& default_instance();

  static inline const WorldAllRoutineTypeNotify* internal_default_instance() {
    return reinterpret_cast<const WorldAllRoutineTypeNotify*>(
               &_WorldAllRoutineTypeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(WorldAllRoutineTypeNotify* other);
  friend void swap(WorldAllRoutineTypeNotify& a, WorldAllRoutineTypeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldAllRoutineTypeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldAllRoutineTypeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldAllRoutineTypeNotify& from);
  void MergeFrom(const WorldAllRoutineTypeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldAllRoutineTypeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldAllRoutineTypeNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldAllRoutineTypeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldAllRoutineTypeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldAllRoutineTypeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldAllRoutineTypeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldAllRoutineTypeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldAllRoutineTypeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldAllRoutineTypeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldAllRoutineTypeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldAllRoutineTypeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldAllRoutineTypeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldAllRoutineTypeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.WorldRoutineTypeInfo world_routine_type_list = 12;
  int world_routine_type_list_size() const;
  void clear_world_routine_type_list();
  static const int kWorldRoutineTypeListFieldNumber = 12;
  const ::proto::WorldRoutineTypeInfo& world_routine_type_list(int index) const;
  ::proto::WorldRoutineTypeInfo* mutable_world_routine_type_list(int index);
  ::proto::WorldRoutineTypeInfo* add_world_routine_type_list();
  ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineTypeInfo >*
      mutable_world_routine_type_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineTypeInfo >&
      world_routine_type_list() const;

  // @@protoc_insertion_point(class_scope:proto.WorldAllRoutineTypeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineTypeInfo > world_routine_type_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldRoutineTypeRefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldRoutineTypeRefreshNotify) */ {
 public:
  WorldRoutineTypeRefreshNotify();
  virtual ~WorldRoutineTypeRefreshNotify();

  WorldRoutineTypeRefreshNotify(const WorldRoutineTypeRefreshNotify& from);

  inline WorldRoutineTypeRefreshNotify& operator=(const WorldRoutineTypeRefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldRoutineTypeRefreshNotify(WorldRoutineTypeRefreshNotify&& from) noexcept
    : WorldRoutineTypeRefreshNotify() {
    *this = ::std::move(from);
  }

  inline WorldRoutineTypeRefreshNotify& operator=(WorldRoutineTypeRefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldRoutineTypeRefreshNotify& default_instance();

  static inline const WorldRoutineTypeRefreshNotify* internal_default_instance() {
    return reinterpret_cast<const WorldRoutineTypeRefreshNotify*>(
               &_WorldRoutineTypeRefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(WorldRoutineTypeRefreshNotify* other);
  friend void swap(WorldRoutineTypeRefreshNotify& a, WorldRoutineTypeRefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldRoutineTypeRefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldRoutineTypeRefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldRoutineTypeRefreshNotify& from);
  void MergeFrom(const WorldRoutineTypeRefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldRoutineTypeRefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldRoutineTypeRefreshNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldRoutineTypeRefreshNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldRoutineTypeRefreshNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldRoutineTypeRefreshNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldRoutineTypeRefreshNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldRoutineTypeRefreshNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldRoutineTypeRefreshNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldRoutineTypeRefreshNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldRoutineTypeRefreshNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldRoutineTypeRefreshNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldRoutineTypeRefreshNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldRoutineTypeRefreshNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.WorldRoutineTypeInfo world_routine_type = 7;
  bool has_world_routine_type() const;
  void clear_world_routine_type();
  static const int kWorldRoutineTypeFieldNumber = 7;
  const ::proto::WorldRoutineTypeInfo& world_routine_type() const;
  ::proto::WorldRoutineTypeInfo* mutable_world_routine_type();
  ::proto::WorldRoutineTypeInfo* release_world_routine_type();
  void set_allocated_world_routine_type(::proto::WorldRoutineTypeInfo* world_routine_type);

  // @@protoc_insertion_point(class_scope:proto.WorldRoutineTypeRefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::WorldRoutineTypeInfo* world_routine_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldRoutineChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldRoutineChangeNotify) */ {
 public:
  WorldRoutineChangeNotify();
  virtual ~WorldRoutineChangeNotify();

  WorldRoutineChangeNotify(const WorldRoutineChangeNotify& from);

  inline WorldRoutineChangeNotify& operator=(const WorldRoutineChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldRoutineChangeNotify(WorldRoutineChangeNotify&& from) noexcept
    : WorldRoutineChangeNotify() {
    *this = ::std::move(from);
  }

  inline WorldRoutineChangeNotify& operator=(WorldRoutineChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldRoutineChangeNotify& default_instance();

  static inline const WorldRoutineChangeNotify* internal_default_instance() {
    return reinterpret_cast<const WorldRoutineChangeNotify*>(
               &_WorldRoutineChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(WorldRoutineChangeNotify* other);
  friend void swap(WorldRoutineChangeNotify& a, WorldRoutineChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldRoutineChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldRoutineChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldRoutineChangeNotify& from);
  void MergeFrom(const WorldRoutineChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldRoutineChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldRoutineChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldRoutineChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldRoutineChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldRoutineChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldRoutineChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldRoutineChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldRoutineChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldRoutineChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldRoutineChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldRoutineChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldRoutineChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldRoutineChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.WorldRoutineInfo routine_info = 3;
  bool has_routine_info() const;
  void clear_routine_info();
  static const int kRoutineInfoFieldNumber = 3;
  const ::proto::WorldRoutineInfo& routine_info() const;
  ::proto::WorldRoutineInfo* mutable_routine_info();
  ::proto::WorldRoutineInfo* release_routine_info();
  void set_allocated_routine_info(::proto::WorldRoutineInfo* routine_info);

  // uint32 routine_type = 11;
  void clear_routine_type();
  static const int kRoutineTypeFieldNumber = 11;
  ::google::protobuf::uint32 routine_type() const;
  void set_routine_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldRoutineChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::WorldRoutineInfo* routine_info_;
  ::google::protobuf::uint32 routine_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldRoutineTypeCloseNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldRoutineTypeCloseNotify) */ {
 public:
  WorldRoutineTypeCloseNotify();
  virtual ~WorldRoutineTypeCloseNotify();

  WorldRoutineTypeCloseNotify(const WorldRoutineTypeCloseNotify& from);

  inline WorldRoutineTypeCloseNotify& operator=(const WorldRoutineTypeCloseNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldRoutineTypeCloseNotify(WorldRoutineTypeCloseNotify&& from) noexcept
    : WorldRoutineTypeCloseNotify() {
    *this = ::std::move(from);
  }

  inline WorldRoutineTypeCloseNotify& operator=(WorldRoutineTypeCloseNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldRoutineTypeCloseNotify& default_instance();

  static inline const WorldRoutineTypeCloseNotify* internal_default_instance() {
    return reinterpret_cast<const WorldRoutineTypeCloseNotify*>(
               &_WorldRoutineTypeCloseNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(WorldRoutineTypeCloseNotify* other);
  friend void swap(WorldRoutineTypeCloseNotify& a, WorldRoutineTypeCloseNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldRoutineTypeCloseNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldRoutineTypeCloseNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldRoutineTypeCloseNotify& from);
  void MergeFrom(const WorldRoutineTypeCloseNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldRoutineTypeCloseNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldRoutineTypeCloseNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldRoutineTypeCloseNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldRoutineTypeCloseNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldRoutineTypeCloseNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldRoutineTypeCloseNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldRoutineTypeCloseNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldRoutineTypeCloseNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldRoutineTypeCloseNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldRoutineTypeCloseNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldRoutineTypeCloseNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldRoutineTypeCloseNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldRoutineTypeCloseNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 routine_type = 7;
  void clear_routine_type();
  static const int kRoutineTypeFieldNumber = 7;
  ::google::protobuf::uint32 routine_type() const;
  void set_routine_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldRoutineTypeCloseNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 routine_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5froutine_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerRoutineInfo

// uint32 routine_type = 8;
inline void PlayerRoutineInfo::clear_routine_type() {
  routine_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRoutineInfo::routine_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRoutineInfo.routine_type)
  return routine_type_;
}
inline void PlayerRoutineInfo::set_routine_type(::google::protobuf::uint32 value) {
  
  routine_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRoutineInfo.routine_type)
}

// uint32 finished_num = 15;
inline void PlayerRoutineInfo::clear_finished_num() {
  finished_num_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRoutineInfo::finished_num() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRoutineInfo.finished_num)
  return finished_num_;
}
inline void PlayerRoutineInfo::set_finished_num(::google::protobuf::uint32 value) {
  
  finished_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRoutineInfo.finished_num)
}

// -------------------------------------------------------------------

// PlayerRoutineDataNotify

// repeated .proto.PlayerRoutineInfo routine_info_list = 11;
inline int PlayerRoutineDataNotify::routine_info_list_size() const {
  return routine_info_list_.size();
}
inline void PlayerRoutineDataNotify::clear_routine_info_list() {
  routine_info_list_.Clear();
}
inline const ::proto::PlayerRoutineInfo& PlayerRoutineDataNotify::routine_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRoutineDataNotify.routine_info_list)
  return routine_info_list_.Get(index);
}
inline ::proto::PlayerRoutineInfo* PlayerRoutineDataNotify::mutable_routine_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRoutineDataNotify.routine_info_list)
  return routine_info_list_.Mutable(index);
}
inline ::proto::PlayerRoutineInfo* PlayerRoutineDataNotify::add_routine_info_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRoutineDataNotify.routine_info_list)
  return routine_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerRoutineInfo >*
PlayerRoutineDataNotify::mutable_routine_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRoutineDataNotify.routine_info_list)
  return &routine_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerRoutineInfo >&
PlayerRoutineDataNotify::routine_info_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRoutineDataNotify.routine_info_list)
  return routine_info_list_;
}

// -------------------------------------------------------------------

// WorldRoutineInfo

// uint32 progress = 4;
inline void WorldRoutineInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineInfo.progress)
  return progress_;
}
inline void WorldRoutineInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineInfo.progress)
}

// bool is_finished = 14;
inline void WorldRoutineInfo::clear_is_finished() {
  is_finished_ = false;
}
inline bool WorldRoutineInfo::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineInfo.is_finished)
  return is_finished_;
}
inline void WorldRoutineInfo::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineInfo.is_finished)
}

// uint32 finish_progress = 3;
inline void WorldRoutineInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineInfo.finish_progress)
  return finish_progress_;
}
inline void WorldRoutineInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineInfo.finish_progress)
}

// uint32 routine_id = 11;
inline void WorldRoutineInfo::clear_routine_id() {
  routine_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineInfo::routine_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineInfo.routine_id)
  return routine_id_;
}
inline void WorldRoutineInfo::set_routine_id(::google::protobuf::uint32 value) {
  
  routine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineInfo.routine_id)
}

// -------------------------------------------------------------------

// WorldRoutineTypeInfo

// uint32 routine_type = 13;
inline void WorldRoutineTypeInfo::clear_routine_type() {
  routine_type_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineTypeInfo::routine_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineTypeInfo.routine_type)
  return routine_type_;
}
inline void WorldRoutineTypeInfo::set_routine_type(::google::protobuf::uint32 value) {
  
  routine_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineTypeInfo.routine_type)
}

// uint32 next_refresh_time = 12;
inline void WorldRoutineTypeInfo::clear_next_refresh_time() {
  next_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineTypeInfo::next_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineTypeInfo.next_refresh_time)
  return next_refresh_time_;
}
inline void WorldRoutineTypeInfo::set_next_refresh_time(::google::protobuf::uint32 value) {
  
  next_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineTypeInfo.next_refresh_time)
}

// repeated .proto.WorldRoutineInfo world_routine_info_list = 3;
inline int WorldRoutineTypeInfo::world_routine_info_list_size() const {
  return world_routine_info_list_.size();
}
inline void WorldRoutineTypeInfo::clear_world_routine_info_list() {
  world_routine_info_list_.Clear();
}
inline const ::proto::WorldRoutineInfo& WorldRoutineTypeInfo::world_routine_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineTypeInfo.world_routine_info_list)
  return world_routine_info_list_.Get(index);
}
inline ::proto::WorldRoutineInfo* WorldRoutineTypeInfo::mutable_world_routine_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldRoutineTypeInfo.world_routine_info_list)
  return world_routine_info_list_.Mutable(index);
}
inline ::proto::WorldRoutineInfo* WorldRoutineTypeInfo::add_world_routine_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldRoutineTypeInfo.world_routine_info_list)
  return world_routine_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineInfo >*
WorldRoutineTypeInfo::mutable_world_routine_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldRoutineTypeInfo.world_routine_info_list)
  return &world_routine_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineInfo >&
WorldRoutineTypeInfo::world_routine_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldRoutineTypeInfo.world_routine_info_list)
  return world_routine_info_list_;
}

// -------------------------------------------------------------------

// WorldAllRoutineTypeNotify

// repeated .proto.WorldRoutineTypeInfo world_routine_type_list = 12;
inline int WorldAllRoutineTypeNotify::world_routine_type_list_size() const {
  return world_routine_type_list_.size();
}
inline void WorldAllRoutineTypeNotify::clear_world_routine_type_list() {
  world_routine_type_list_.Clear();
}
inline const ::proto::WorldRoutineTypeInfo& WorldAllRoutineTypeNotify::world_routine_type_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldAllRoutineTypeNotify.world_routine_type_list)
  return world_routine_type_list_.Get(index);
}
inline ::proto::WorldRoutineTypeInfo* WorldAllRoutineTypeNotify::mutable_world_routine_type_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldAllRoutineTypeNotify.world_routine_type_list)
  return world_routine_type_list_.Mutable(index);
}
inline ::proto::WorldRoutineTypeInfo* WorldAllRoutineTypeNotify::add_world_routine_type_list() {
  // @@protoc_insertion_point(field_add:proto.WorldAllRoutineTypeNotify.world_routine_type_list)
  return world_routine_type_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineTypeInfo >*
WorldAllRoutineTypeNotify::mutable_world_routine_type_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldAllRoutineTypeNotify.world_routine_type_list)
  return &world_routine_type_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::WorldRoutineTypeInfo >&
WorldAllRoutineTypeNotify::world_routine_type_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldAllRoutineTypeNotify.world_routine_type_list)
  return world_routine_type_list_;
}

// -------------------------------------------------------------------

// WorldRoutineTypeRefreshNotify

// .proto.WorldRoutineTypeInfo world_routine_type = 7;
inline bool WorldRoutineTypeRefreshNotify::has_world_routine_type() const {
  return this != internal_default_instance() && world_routine_type_ != NULL;
}
inline void WorldRoutineTypeRefreshNotify::clear_world_routine_type() {
  if (GetArenaNoVirtual() == NULL && world_routine_type_ != NULL) delete world_routine_type_;
  world_routine_type_ = NULL;
}
inline const ::proto::WorldRoutineTypeInfo& WorldRoutineTypeRefreshNotify::world_routine_type() const {
  const ::proto::WorldRoutineTypeInfo* p = world_routine_type_;
  // @@protoc_insertion_point(field_get:proto.WorldRoutineTypeRefreshNotify.world_routine_type)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WorldRoutineTypeInfo*>(
      &::proto::_WorldRoutineTypeInfo_default_instance_);
}
inline ::proto::WorldRoutineTypeInfo* WorldRoutineTypeRefreshNotify::mutable_world_routine_type() {
  
  if (world_routine_type_ == NULL) {
    world_routine_type_ = new ::proto::WorldRoutineTypeInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WorldRoutineTypeRefreshNotify.world_routine_type)
  return world_routine_type_;
}
inline ::proto::WorldRoutineTypeInfo* WorldRoutineTypeRefreshNotify::release_world_routine_type() {
  // @@protoc_insertion_point(field_release:proto.WorldRoutineTypeRefreshNotify.world_routine_type)
  
  ::proto::WorldRoutineTypeInfo* temp = world_routine_type_;
  world_routine_type_ = NULL;
  return temp;
}
inline void WorldRoutineTypeRefreshNotify::set_allocated_world_routine_type(::proto::WorldRoutineTypeInfo* world_routine_type) {
  delete world_routine_type_;
  world_routine_type_ = world_routine_type;
  if (world_routine_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WorldRoutineTypeRefreshNotify.world_routine_type)
}

// -------------------------------------------------------------------

// WorldRoutineChangeNotify

// .proto.WorldRoutineInfo routine_info = 3;
inline bool WorldRoutineChangeNotify::has_routine_info() const {
  return this != internal_default_instance() && routine_info_ != NULL;
}
inline void WorldRoutineChangeNotify::clear_routine_info() {
  if (GetArenaNoVirtual() == NULL && routine_info_ != NULL) delete routine_info_;
  routine_info_ = NULL;
}
inline const ::proto::WorldRoutineInfo& WorldRoutineChangeNotify::routine_info() const {
  const ::proto::WorldRoutineInfo* p = routine_info_;
  // @@protoc_insertion_point(field_get:proto.WorldRoutineChangeNotify.routine_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::WorldRoutineInfo*>(
      &::proto::_WorldRoutineInfo_default_instance_);
}
inline ::proto::WorldRoutineInfo* WorldRoutineChangeNotify::mutable_routine_info() {
  
  if (routine_info_ == NULL) {
    routine_info_ = new ::proto::WorldRoutineInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.WorldRoutineChangeNotify.routine_info)
  return routine_info_;
}
inline ::proto::WorldRoutineInfo* WorldRoutineChangeNotify::release_routine_info() {
  // @@protoc_insertion_point(field_release:proto.WorldRoutineChangeNotify.routine_info)
  
  ::proto::WorldRoutineInfo* temp = routine_info_;
  routine_info_ = NULL;
  return temp;
}
inline void WorldRoutineChangeNotify::set_allocated_routine_info(::proto::WorldRoutineInfo* routine_info) {
  delete routine_info_;
  routine_info_ = routine_info;
  if (routine_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.WorldRoutineChangeNotify.routine_info)
}

// uint32 routine_type = 11;
inline void WorldRoutineChangeNotify::clear_routine_type() {
  routine_type_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineChangeNotify::routine_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineChangeNotify.routine_type)
  return routine_type_;
}
inline void WorldRoutineChangeNotify::set_routine_type(::google::protobuf::uint32 value) {
  
  routine_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineChangeNotify.routine_type)
}

// -------------------------------------------------------------------

// WorldRoutineTypeCloseNotify

// uint32 routine_type = 7;
inline void WorldRoutineTypeCloseNotify::clear_routine_type() {
  routine_type_ = 0u;
}
inline ::google::protobuf::uint32 WorldRoutineTypeCloseNotify::routine_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldRoutineTypeCloseNotify.routine_type)
  return routine_type_;
}
inline void WorldRoutineTypeCloseNotify::set_routine_type(::google::protobuf::uint32 value) {
  
  routine_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldRoutineTypeCloseNotify.routine_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerRoutineDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerRoutineDataNotify_CmdId>() {
  return ::proto::PlayerRoutineDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldAllRoutineTypeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldAllRoutineTypeNotify_CmdId>() {
  return ::proto::WorldAllRoutineTypeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldRoutineTypeRefreshNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldRoutineTypeRefreshNotify_CmdId>() {
  return ::proto::WorldRoutineTypeRefreshNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldRoutineChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldRoutineChangeNotify_CmdId>() {
  return ::proto::WorldRoutineChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldRoutineTypeCloseNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldRoutineTypeCloseNotify_CmdId>() {
  return ::proto::WorldRoutineTypeCloseNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5froutine_2eproto__INCLUDED
